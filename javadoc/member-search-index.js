memberSearchIndex = [{"p":"org.tensorics.core.math","c":"ExplicitField","l":"absoluteValue()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"absoluteValue()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"absoluteValue()"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"absoluteValueOf(Double)","url":"absoluteValueOf(java.lang.Double)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"absoluteValueOf(QuantifiedValue<Double>)","url":"absoluteValueOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"absoluteValueOf(QuantifiedValue<V>)","url":"absoluteValueOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"absoluteValueOf(QuantifiedValue<V>)","url":"absoluteValueOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.commons.lang","c":"BasicOperationSupport","l":"absoluteValueOf(S)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"absoluteValueOf(V)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"absoluteValueOf(V)"},{"p":"org.tensorics.core.math.structures.grouplike","c":"AbstractAbelianGroup","l":"AbstractAbelianGroup(CommutativeAssociativeOperation<E>, E, UnaryOperation<E>)","url":"%3Cinit%3E(org.tensorics.core.math.operations.CommutativeAssociativeOperation,E,org.tensorics.core.math.operations.UnaryOperation)"},{"p":"org.tensorics.core.tree.domain","c":"AbstractDeferredExpression","l":"AbstractDeferredExpression()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.resolve.options","c":"AbstractExceptionHandlingStrategy","l":"AbstractExceptionHandlingStrategy()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.reduction","c":"AbstractInterpolationStrategy","l":"AbstractInterpolationStrategy(Comparator<C>)","url":"%3Cinit%3E(java.util.Comparator)"},{"p":"org.tensorics.core.reduction","c":"AbstractLinearDoubleInterpolationStrategy","l":"AbstractLinearDoubleInterpolationStrategy(Comparator<C>)","url":"%3Cinit%3E(java.util.Comparator)"},{"p":"org.tensorics.core.fields.doubles","c":"AbstractOrderedField","l":"AbstractOrderedField(AbelianGroup<E>, AbelianGroup<E>, BinaryPredicate<E>)","url":"%3Cinit%3E(org.tensorics.core.math.structures.grouplike.AbelianGroup,org.tensorics.core.math.structures.grouplike.AbelianGroup,org.tensorics.core.math.predicates.BinaryPredicate)"},{"p":"org.tensorics.core.commons.util","c":"AbstractPair","l":"AbstractPair(T, T)","url":"%3Cinit%3E(T,T)"},{"p":"org.tensorics.core.quantity.operations","c":"AbstractQuantityOperation","l":"AbstractQuantityOperation(QuantityEnvironment<V>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.quantity.conditions","c":"AbstractQuantityStatisticPredicate","l":"AbstractQuantityStatisticPredicate(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.util.chains","c":"AbstractRecursiveRepresenter","l":"AbstractRecursiveRepresenter()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.resolve.resolvers","c":"AbstractResolver","l":"AbstractResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tensor","c":"AbstractScalar","l":"AbstractScalar()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tensor","c":"AbstractTensor","l":"AbstractTensor()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tensorbacked","c":"AbstractTensorbacked","l":"AbstractTensorbacked(Tensor<E>)","url":"%3Cinit%3E(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"AbstractTensorBuilder(Set<Class<?>>, VerificationCallback<V>)","url":"%3Cinit%3E(java.util.Set,org.tensorics.core.tensor.VerificationCallback)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"AbstractTensorBuilder(Set<Class<?>>)","url":"%3Cinit%3E(java.util.Set)"},{"p":"org.tensorics.core.tensor.stream","c":"AbstractTensoricCollector","l":"AbstractTensoricCollector(Function<V, Position>, Function<V, T>)","url":"%3Cinit%3E(java.util.function.Function,java.util.function.Function)"},{"p":"org.tensorics.core.tensor.stream","c":"AbstractTensoricCollector","l":"accumulator()"},{"p":"org.tensorics.core.tree.domain","c":"Path","l":"add(Node)","url":"add(org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.tensor","c":"Shape.Builder","l":"add(Position)","url":"add(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"Shape.Builder","l":"addAll(Iterable<Position>)","url":"addAll(java.lang.Iterable)"},{"p":"org.tensorics.core.function.operations","c":"DiscreteFunctionOperationRepository","l":"addition()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"addition()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"addition()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"addition()"},{"p":"org.tensorics.core.fields.doubles","c":"AbstractOrderedField","l":"additionStructure()"},{"p":"org.tensorics.core.math.structures.ringlike","c":"Ring","l":"additionStructure()"},{"p":"org.tensorics.core.math.structures.ringlike","c":"RinglikeStructure","l":"additionStructure()"},{"p":"org.tensorics.core.math.structures.ringlike","c":"Semiring","l":"additionStructure()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"additiveInversion()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"additiveInversion()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"additiveInversion()"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPairs","l":"allDimensionsIn(Iterable<CoContraDimensionPair>)","url":"allDimensionsIn(java.lang.Iterable)"},{"p":"org.tensorics.core.testing.hamcrest","c":"AllElementsEqualTo","l":"allElementsEqualTo(V)"},{"p":"org.tensorics.core.testing.hamcrest","c":"TensoricsMatchers","l":"allElementsEqualTo(V)"},{"p":"org.tensorics.core.tensor.specific","c":"PositionIndexer","l":"allPositions()"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAnalysisEnabler","l":"always()"},{"p":"org.tensorics.core.analysis.expression","c":"AnalysisExpression","l":"AnalysisExpression(Collection<AssertionExpression>)","url":"%3Cinit%3E(java.util.Collection)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"AnalysisModule()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.analysis.resolver","c":"AnalysisResolver","l":"AnalysisResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.analysis","c":"AnalysisResult","l":"AnalysisResult(AnalysisResult.Builder)","url":"%3Cinit%3E(org.tensorics.core.analysis.AnalysisResult.Builder)"},{"p":"org.tensorics.core.booleans.operations","c":"BooleanOperations","l":"and()"},{"p":"org.tensorics.core.booleans.operations","c":"BooleanTensorOperationsRepository","l":"and()"},{"p":"org.tensorics.core.booleans.operations","c":"And","l":"And()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.math","c":"BinaryPredicates","l":"and(BinaryPredicate<T>, BinaryPredicate<T>)","url":"and(org.tensorics.core.math.predicates.BinaryPredicate,org.tensorics.core.math.predicates.BinaryPredicate)"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingBooleanScalarOperation","l":"and(Boolean)","url":"and(java.lang.Boolean)"},{"p":"org.tensorics.core.lang","c":"TensoricBooleanExpressions","l":"and(Expression<? extends Iterable<Boolean>>)","url":"and(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricBooleanExpressions","l":"and(Expression<Boolean>...)","url":"and(org.tensorics.core.tree.domain.Expression...)"},{"p":"org.tensorics.core.lang","c":"TensoricBooleanExpressions","l":"and(Iterable<? extends Expression<Boolean>>)","url":"and(java.lang.Iterable)"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingBooleanTensorOperation","l":"and(Tensor<Boolean>)","url":"and(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.iterable.expressions","c":"AnyIterableConversionExpression","l":"AnyIterableConversionExpression(Conversion<Iterable<?>, T>, Expression<? extends Iterable<?>>)","url":"%3Cinit%3E(org.tensorics.core.commons.operations.Conversion,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.function","c":"CoordinateToPositionFunction","l":"apply(C)"},{"p":"org.tensorics.core.function.operations","c":"CodomainExtraction","l":"apply(DiscreteFunction<?, Y>)","url":"apply(org.tensorics.core.function.DiscreteFunction)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableSize","l":"apply(Iterable<?>)","url":"apply(java.lang.Iterable)"},{"p":"org.tensorics.core.booleans.operations","c":"And","l":"apply(Iterable<Boolean>)","url":"apply(java.lang.Iterable)"},{"p":"org.tensorics.core.booleans.operations","c":"Or","l":"apply(Iterable<Boolean>)","url":"apply(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableAverage","l":"apply(Iterable<V>)","url":"apply(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableRms","l":"apply(Iterable<V>)","url":"apply(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableStd","l":"apply(Iterable<V>)","url":"apply(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableSum","l":"apply(Iterable<V>)","url":"apply(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableSumOfSquares","l":"apply(Iterable<V>)","url":"apply(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableVar","l":"apply(Iterable<V>)","url":"apply(java.lang.Iterable)"},{"p":"org.tensorics.core.util.chains","c":"Chain","l":"apply(Object, int)","url":"apply(java.lang.Object,int)"},{"p":"org.tensorics.core.functional","c":"FuncN","l":"apply(Object...)","url":"apply(java.lang.Object...)"},{"p":"org.tensorics.core.util.chains","c":"Chain","l":"apply(Object)","url":"apply(java.lang.Object)"},{"p":"org.tensorics.core.tensor","c":"Positions.DimensionStripper","l":"apply(Position)","url":"apply(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.util.chains","c":"CaseMatchings.ClassDispatcher","l":"apply(T, Function<Object, R>)","url":"apply(T,java.util.function.Function)"},{"p":"org.tensorics.core.commons.operations","c":"Conversion","l":"apply(T)"},{"p":"org.tensorics.core.functional","c":"Func1","l":"apply(T)"},{"p":"org.tensorics.core.functional","c":"Func9","l":"apply(T1, T2, T3, T4, T5, T6, T7, T8, T9)","url":"apply(T1,T2,T3,T4,T5,T6,T7,T8,T9)"},{"p":"org.tensorics.core.functional","c":"Func8","l":"apply(T1, T2, T3, T4, T5, T6, T7, T8)","url":"apply(T1,T2,T3,T4,T5,T6,T7,T8)"},{"p":"org.tensorics.core.functional","c":"Func7","l":"apply(T1, T2, T3, T4, T5, T6, T7)","url":"apply(T1,T2,T3,T4,T5,T6,T7)"},{"p":"org.tensorics.core.functional","c":"Func6","l":"apply(T1, T2, T3, T4, T5, T6)","url":"apply(T1,T2,T3,T4,T5,T6)"},{"p":"org.tensorics.core.functional","c":"Func5","l":"apply(T1, T2, T3, T4, T5)","url":"apply(T1,T2,T3,T4,T5)"},{"p":"org.tensorics.core.functional","c":"Func4","l":"apply(T1, T2, T3, T4)","url":"apply(T1,T2,T3,T4)"},{"p":"org.tensorics.core.functional","c":"Func3","l":"apply(T1, T2, T3)","url":"apply(T1,T2,T3)"},{"p":"org.tensorics.core.functional","c":"Func2","l":"apply(T1, T2)","url":"apply(T1,T2)"},{"p":"org.tensorics.core.tensorbacked.operations","c":"TensorExtractionOperation","l":"apply(TB)"},{"p":"org.tensorics.core.booleans.operations","c":"TensorChangeDetectionOperation","l":"apply(Tensor<Boolean>)","url":"apply(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.operations","c":"TensorReduction","l":"apply(Tensor<E>)","url":"apply(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked.operations","c":"TensorWrappingOperation","l":"apply(Tensor<V>)","url":"apply(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.function","c":"DefaultInterpolatedFunction","l":"apply(X)"},{"p":"org.tensorics.core.function","c":"DiscreteFunction","l":"apply(X)"},{"p":"org.tensorics.core.function","c":"MapBackedDiscreteFunction","l":"apply(X)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"areDimensionsConsistent(Set<Class<?>>, Set<Class<?>>)","url":"areDimensionsConsistent(java.util.Set,java.util.Set)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"areDimensionsConsistentWithCoordinates(Set<Class<?>>, Position)","url":"areDimensionsConsistentWithCoordinates(java.util.Set,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAllBooleanCondition","l":"areTrue()"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAllBooleanExcludableCondition","l":"areTrue()"},{"p":"org.tensorics.core.tensor.specific","c":"PositionIndexer","l":"arraySize()"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor","l":"asMap()"},{"p":"org.tensorics.core.tensor","c":"Mappable","l":"asMap()"},{"p":"org.tensorics.core.tensor","c":"MappableTensor","l":"asMap()"},{"p":"org.tensorics.core.quantity.options","c":"JScienceQuantificationStrategy","l":"asSameUnit(S, S)","url":"asSameUnit(S,S)"},{"p":"org.tensorics.core.quantity.options","c":"QuantificationStrategy","l":"asSameUnit(V, V)","url":"asSameUnit(V,V)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"assertAllBoolean(Expression<? extends Iterable<Boolean>>)","url":"assertAllBoolean(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"assertAllBoolean(Set<? extends Expression<Boolean>>)","url":"assertAllBoolean(java.util.Set)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"assertAtLeastOneBooleanOf(Expression<? extends Iterable<Boolean>>)","url":"assertAtLeastOneBooleanOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"assertBoolean(Boolean)","url":"assertBoolean(java.lang.Boolean)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"assertBoolean(Expression<Boolean>)","url":"assertBoolean(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"assertConsistentDimensions(Position, Set<Class<?>>)","url":"assertConsistentDimensions(org.tensorics.core.tensor.Position,java.util.Set)"},{"p":"org.tensorics.core.analysis","c":"AssertionBuilder","l":"AssertionBuilder()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"assertionBuilders()"},{"p":"org.tensorics.core.analysis.expression","c":"AssertionExpression","l":"AssertionExpression(AssertionBuilder)","url":"%3Cinit%3E(org.tensorics.core.analysis.AssertionBuilder)"},{"p":"org.tensorics.core.analysis.resolver","c":"AssertionResolver","l":"AssertionResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.analysis","c":"AnalysisResult","l":"assertions()"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"assertLatestBooleanOf(Expression<? extends Iterable<Boolean>>)","url":"assertLatestBooleanOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"assertThat(Expression<T1>)","url":"assertThat(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"assertThat(T1)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"at(Iterable<?>)","url":"at(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"at(Object...)","url":"at(java.lang.Object...)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"avarageOf(Iterable<Double>)","url":"avarageOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"avarageOf(Iterable<V>)","url":"avarageOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"IterableOperationRepository","l":"average()"},{"p":"org.tensorics.core.function.lang","c":"FunctionSupportWithConversionAndComparator","l":"averageOf(DiscreteFunction<Z, Y>)","url":"averageOf(org.tensorics.core.function.DiscreteFunction)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"averageOf(Expression<? extends Iterable<Double>>)","url":"averageOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"averageOf(Expression<? extends Iterable<V>>)","url":"averageOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"averageOf(Expression<? extends Iterable<V>>)","url":"averageOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"averageOf(Iterable<Double>)","url":"averageOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"averageOf(Iterable<Double>)","url":"averageOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"QuantityIterableSupport","l":"averageOf(Iterable<QuantifiedValue<V>>)","url":"averageOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"averageOf(Iterable<V>)","url":"averageOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableSupport","l":"averageOf(Iterable<V>)","url":"averageOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"averageOf(Iterable<V>)","url":"averageOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"averageOf(Iterable<V>)","url":"averageOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"averageOfF(Expression<DiscreteFunction<Double, Double>>)","url":"averageOfF(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"averageOfF(Expression<DiscreteFunction<X, V>>)","url":"averageOfF(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.function.lang","c":"FunctionExpressionSupportWithConversionAndComparator","l":"averageOfF(Expression<DiscreteFunction<Z, Y>>)","url":"averageOfF(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"averageOfQ(Iterable<QuantifiedValue<Double>>)","url":"averageOfQ(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"averageOfQ(Iterable<QuantifiedValue<V>>)","url":"averageOfQ(java.lang.Iterable)"},{"p":"org.tensorics.core.reduction","c":"Averaging","l":"Averaging(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.tensorbacked","c":"AbstractTensorbacked","l":"backingTensor"},{"p":"org.tensorics.core.resolve.engine","c":"BiggestSubTreeDispatcher","l":"BiggestSubTreeDispatcher(ResolverRepository)","url":"%3Cinit%3E(org.tensorics.core.resolve.resolvers.ResolverRepository)"},{"p":"org.tensorics.core.expressions","c":"BinaryOperationExpression","l":"BinaryOperationExpression(BinaryOperation<T>, Expression<T>, Expression<T>)","url":"%3Cinit%3E(org.tensorics.core.math.operations.BinaryOperation,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.resolve.resolvers","c":"BinaryOperationResolver","l":"BinaryOperationResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.expressions","c":"BinaryPredicateExpression","l":"BinaryPredicateExpression(BinaryPredicate<T>, Expression<T>, Expression<T>)","url":"%3Cinit%3E(org.tensorics.core.math.predicates.BinaryPredicate,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.iterable.expressions","c":"BinaryPredicateIterableExpression","l":"BinaryPredicateIterableExpression(BinaryPredicate<T>, Expression<Iterable<T>>, Expression<T>)","url":"%3Cinit%3E(org.tensorics.core.math.predicates.BinaryPredicate,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.resolve.resolvers","c":"BinaryPredicateIterableResolver","l":"BinaryPredicateIterableResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.resolve.resolvers","c":"BinaryPredicateResolver","l":"BinaryPredicateResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.booleans","c":"BooleanSupport","l":"BooleanSupport()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.booleans","c":"BooleanSupport","l":"BooleanSupport(OptionRegistry<ManipulationOption>)","url":"%3Cinit%3E(org.tensorics.core.commons.options.OptionRegistry)"},{"p":"org.tensorics.core.booleans.operations","c":"BooleanTensorOperationsRepository","l":"BooleanTensorOperationsRepository(OptionRegistry<ManipulationOption>)","url":"%3Cinit%3E(org.tensorics.core.commons.options.OptionRegistry)"},{"p":"org.tensorics.core.util.chains","c":"Chains.AbstractOngoingChain","l":"branchCase(Class<T1>)","url":"branchCase(java.lang.Class)"},{"p":"org.tensorics.core.util.chains","c":"Chains.AbstractOngoingChain","l":"branchIf(Predicate<T>, Function<T, T1>)","url":"branchIf(java.util.function.Predicate,java.util.function.Function)"},{"p":"org.tensorics.core.util.chains","c":"Chains.AbstractOngoingChain","l":"branchIf(Predicate<T>)","url":"branchIf(java.util.function.Predicate)"},{"p":"org.tensorics.core.tensor.options","c":"BroadcastMissingDimensionsStrategy","l":"broadcast(Tensor<V>, Tensor<V>, Set<Class<?>>)","url":"broadcast(org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor,java.util.Set)"},{"p":"org.tensorics.core.tensor.options","c":"BroadcastingStrategy","l":"broadcast(Tensor<V>, Tensor<V>, Set<Class<?>>)","url":"broadcast(org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor,java.util.Set)"},{"p":"org.tensorics.core.tensor","c":"BroadcastedTensorView","l":"BroadcastedTensorView(Tensor<V>, Shape)","url":"%3Cinit%3E(org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.tensor.options","c":"BroadcastMissingDimensionsStrategy","l":"BroadcastMissingDimensionsStrategy()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.analysis","c":"AnalysisResult.Builder","l":"build()"},{"p":"org.tensorics.core.analysis","c":"EnablingConditionBuilder","l":"build()"},{"p":"org.tensorics.core.function","c":"DiscreteFunctionBuilder","l":"build()"},{"p":"org.tensorics.core.function","c":"MapBackedDiscreteFunction.Builder","l":"build()"},{"p":"org.tensorics.core.resolve.domain","c":"ExceptionHandlingRequest.Builder","l":"build()"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor.Builder","l":"build()"},{"p":"org.tensorics.core.tensor","c":"Shape.Builder","l":"build()"},{"p":"org.tensorics.core.tensor","c":"TensorBuilder","l":"build()"},{"p":"org.tensorics.core.tensor.specific","c":"ImmutableDoubleArrayBackedTensor.Builder","l":"build()"},{"p":"org.tensorics.core.tensor.specific","c":"PositionIndexer.Builder","l":"build()"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"build()"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"build()"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"build()"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"build()"},{"p":"org.tensorics.incubate.function","c":"DiscreteFunctionBuilder","l":"build()"},{"p":"org.tensorics.incubate.function","c":"ExponentialFunction.Builder","l":"build()"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction.Builder","l":"build()"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingNamedCondition","l":"builder"},{"p":"org.tensorics.core.function","c":"MapBackedDiscreteFunction","l":"builder()"},{"p":"org.tensorics.core.resolve.domain","c":"ExceptionHandlingRequest","l":"builder()"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"builder()"},{"p":"org.tensorics.core.tensor.specific","c":"PositionIndexer","l":"builder()"},{"p":"org.tensorics.incubate.function","c":"ExponentialFunction","l":"builder()"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction","l":"builder()"},{"p":"org.tensorics.core.analysis","c":"AnalysisResult","l":"builder(AssertionStatus)","url":"builder(org.tensorics.core.analysis.AssertionStatus)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builder(Class<?>...)","url":"builder(java.lang.Class...)"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor","l":"builder(Class<?>...)","url":"builder(java.lang.Class...)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builder(Iterable<Class<?>>)","url":"builder(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor","l":"builder(Iterable<Class<?>>)","url":"builder(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor.specific","c":"ImmutableDoubleArrayBackedTensor","l":"builder(PositionIndexer)","url":"builder(org.tensorics.core.tensor.specific.PositionIndexer)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"builder(Set<? extends Class<?>>)","url":"builder(java.util.Set)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderBacked()"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderBacked(Class<C1>, Class<C2>, Class<C3>, Class<C4>, Class<C5>)","url":"builderBacked(java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderBacked(Class<C1>, Class<C2>, Class<C3>, Class<C4>)","url":"builderBacked(java.lang.Class,java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderBacked(Class<C1>, Class<C2>, Class<C3>)","url":"builderBacked(java.lang.Class,java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderBacked(Class<C1>, Class<C2>)","url":"builderBacked(java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderBacked(Class<C1>)","url":"builderBacked(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderFor(Class<TB>)","url":"builderFor(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"builderFor(Class<TB>)","url":"builderFor(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderFor1D(Class<TB>)","url":"builderFor1D(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"builderFor1D(Class<TB>)","url":"builderFor1D(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderFor2D(Class<TB>)","url":"builderFor2D(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"builderFor2D(Class<TB>)","url":"builderFor2D(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderFor3D(Class<TB>)","url":"builderFor3D(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"builderFor3D(Class<TB>)","url":"builderFor3D(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderFor4D(Class<TB>)","url":"builderFor4D(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"builderFor4D(Class<TB>)","url":"builderFor4D(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderFor5D(Class<TB>)","url":"builderFor5D(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"builderFor5D(Class<TB>)","url":"builderFor5D(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderForScalar(Class<TB>)","url":"builderForScalar(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"builderForScalar(Class<TB>)","url":"builderForScalar(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"builderFrom(Tensor<T>)","url":"builderFrom(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor","l":"builderFrom(Tensor<T>)","url":"builderFrom(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"buildExpression()"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorFiltering","l":"by(Class<C>, Range<C>)","url":"by(java.lang.Class,com.google.common.collect.Range)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorbackedFiltering","l":"by(Class<C>, Range<C>)","url":"by(java.lang.Class,com.google.common.collect.Range)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingStructuralReduction","l":"by(ReductionStrategy<? super C, E, R>)","url":"by(org.tensorics.core.reduction.ReductionStrategy)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorReduction","l":"by(ReductionStrategy<C, V, R>)","url":"by(org.tensorics.core.reduction.ReductionStrategy)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDimensionReduction","l":"byAveragingIn(ExtendedField<S>)","url":"byAveragingIn(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreamFilters","l":"byCoordinateOfType(Class<C>, Predicate<C>)","url":"byCoordinateOfType(java.lang.Class,java.util.function.Predicate)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingStructuralReduction","l":"byInterpolatedSlicingAt(C)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorbackedConstruction","l":"byMerging(Iterable<Tensor<V>>)","url":"byMerging(java.lang.Iterable)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorbackedConstruction","l":"byMergingTb(Iterable<? extends Tensorbacked<V>>)","url":"byMergingTb(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreamFilters","l":"byPosition(Predicate<Position>)","url":"byPosition(java.util.function.Predicate)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreamFilters","l":"byPositionValue(BiPredicate<Position, T>)","url":"byPositionValue(java.util.function.BiPredicate)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDimensionReduction","l":"byRmsIn(ExtendedField<S>)","url":"byRmsIn(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingStructuralReduction","l":"bySlicingAt(C)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreamFilters","l":"byValue(Predicate<T>)","url":"byValue(java.util.function.Predicate)"},{"p":"org.tensorics.core.booleans","c":"BooleanSupport","l":"calcLogical(Boolean)","url":"calcLogical(java.lang.Boolean)"},{"p":"org.tensorics.core.booleans","c":"ScalarBooleanSupport","l":"calcLogical(Boolean)","url":"calcLogical(java.lang.Boolean)"},{"p":"org.tensorics.core.booleans","c":"BooleanSupport","l":"calcLogical(Tensor<Boolean>)","url":"calcLogical(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.booleans","c":"TensorBooleanSupport","l":"calcLogical(Tensor<Boolean>)","url":"calcLogical(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.resample.impl","c":"FieldInterpolator","l":"calculate()"},{"p":"org.tensorics.core.function.lang","c":"FunctionSupportWithConversionAndComparator","l":"calculate(DiscreteFunction<X, Y>)","url":"calculate(org.tensorics.core.function.DiscreteFunction)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"calculate(Double, Unit<?>)","url":"calculate(java.lang.Double,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"calculate(Double)","url":"calculate(java.lang.Double)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"calculate(Expression<Double>)","url":"calculate(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantityExpressionSupport","l":"calculate(Expression<QuantifiedValue<V>>)","url":"calculate(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"calculate(Expression<V>)","url":"calculate(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"calculate(Expression<V>)","url":"calculate(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"QuantityTensorbackedSupport","l":"calculate(QTB)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"calculate(QuantifiedValue<Double>)","url":"calculate(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"calculate(QuantifiedValue<V>)","url":"calculate(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"calculate(QuantifiedValue<V>)","url":"calculate(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.commons.lang","c":"BasicOperationSupport","l":"calculate(S)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"calculate(TB)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"calculate(TB)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"TensorbackedSupport","l":"calculate(TB)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"calculate(Tensor<Double>)","url":"calculate(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensorSupport","l":"calculate(Tensor<QuantifiedValue<S>>)","url":"calculate(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"calculate(Tensor<QuantifiedValue<V>>)","url":"calculate(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"calculate(Tensor<V>)","url":"calculate(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorSupport","l":"calculate(Tensor<V>)","url":"calculate(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"calculate(V, Unit<?>)","url":"calculate(V,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"calculate(V, Unit<?>)","url":"calculate(V,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantityExpressionSupport","l":"calculate(V, Unit<?>)","url":"calculate(V,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"calculate(V, Unit<?>)","url":"calculate(V,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"calculate(V)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"calculate(V)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"calculate(V)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"calculate(V)"},{"p":"org.tensorics.core.function.lang","c":"FunctionExpressionSupportWithConversionAndComparator","l":"calculateF(Expression<DiscreteFunction<X, Y>>)","url":"calculateF(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"calculateQ(Expression<QuantifiedValue<Double>>)","url":"calculateQ(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"calculateQ(Expression<QuantifiedValue<V>>)","url":"calculateQ(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"calculateQ(QTB)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"calculateQ(QTB)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"calculateQ(Tensor<QuantifiedValue<Double>>)","url":"calculateQ(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"calculateQ(Tensor<QuantifiedValue<V>>)","url":"calculateQ(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"calculateQT(Tensor<QuantifiedValue<Double>>)","url":"calculateQT(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"calculateQTB(Class<TB>, Expression<TB>)","url":"calculateQTB(java.lang.Class,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"calculateQTB(Class<TB>, Expression<TB>)","url":"calculateQTB(java.lang.Class,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"calculateT(Expression<Tensor<Double>>)","url":"calculateT(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensorExpressionSupport","l":"calculateT(Expression<Tensor<QuantifiedValue<V>>>)","url":"calculateT(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"calculateT(Expression<Tensor<V>>)","url":"calculateT(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorExpressionSupport","l":"calculateT(Expression<Tensor<V>>)","url":"calculateT(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"calculateTB(Class<TB>, Expression<TB>)","url":"calculateTB(java.lang.Class,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"calculateTB(Class<TB>, Expression<TB>)","url":"calculateTB(java.lang.Class,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"QuantityTensorbackedExpressionSupport","l":"calculateTB(Class<TB>, Expression<TB>)","url":"calculateTB(java.lang.Class,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"TensorbackedExpressionSupport","l":"calculateTB(Class<TB>, Expression<TB>)","url":"calculateTB(java.lang.Class,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensorExpressionSupport","l":"calculateV(Tensor<QuantifiedValue<V>>)","url":"calculateV(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricTask","l":"call()"},{"p":"org.tensorics.core.tensor.resample","c":"SingleDimensionResampler","l":"canResample(Set<C>, C)","url":"canResample(java.util.Set,C)"},{"p":"org.tensorics.core.tensor.resample.impl","c":"LinearInterpolationResampler","l":"canResample(Set<C>, C)","url":"canResample(java.util.Set,C)"},{"p":"org.tensorics.core.tensor.resample.impl","c":"RepeatingResampler","l":"canResample(Set<C>, C)","url":"canResample(java.util.Set,C)"},{"p":"org.tensorics.core.analysis.resolver","c":"AnalysisResolver","l":"canResolve(AnalysisExpression, ResolvingContext)","url":"canResolve(org.tensorics.core.analysis.expression.AnalysisExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.analysis.resolver","c":"AssertionResolver","l":"canResolve(AssertionExpression, ResolvingContext)","url":"canResolve(org.tensorics.core.analysis.expression.AssertionExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"BinaryOperationResolver","l":"canResolve(BinaryOperationExpression<R>, ResolvingContext)","url":"canResolve(org.tensorics.core.expressions.BinaryOperationExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"BinaryPredicateResolver","l":"canResolve(BinaryPredicateExpression<T>, ResolvingContext)","url":"canResolve(org.tensorics.core.expressions.BinaryPredicateExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"BinaryPredicateIterableResolver","l":"canResolve(BinaryPredicateIterableExpression<T>, ResolvingContext)","url":"canResolve(org.tensorics.core.iterable.expressions.BinaryPredicateIterableExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"ConversionOperationResolver","l":"canResolve(ConversionOperationExpression<T, R>, ResolvingContext)","url":"canResolve(org.tensorics.core.expressions.ConversionOperationExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"CreationOperationResolver","l":"canResolve(CreationOperationExpression<R>, ResolvingContext)","url":"canResolve(org.tensorics.core.expressions.CreationOperationExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"Resolver","l":"canResolve(E, ResolvingContext)","url":"canResolve(E,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"FunctionalExpressionResolver","l":"canResolve(FunctionalExpression<R>, ResolvingContext)","url":"canResolve(org.tensorics.core.functional.expressions.FunctionalExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"IterableExpressionToIterableResolver","l":"canResolve(IterableExpressionToIterable<T>, ResolvingContext)","url":"canResolve(org.tensorics.core.iterable.expressions.IterableExpressionToIterable,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"IterableResolvingExpressionResolver","l":"canResolve(IterableResolvingExpression<T>, ResolvingContext)","url":"canResolve(org.tensorics.core.expressions.IterableResolvingExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"PickResolver","l":"canResolve(PickExpression<T>, ResolvingContext)","url":"canResolve(org.tensorics.core.iterable.expressions.PickExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"PredicateConditionResolver","l":"canResolve(PredicateExpression<T>, ResolvingContext)","url":"canResolve(org.tensorics.core.expressions.PredicateExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"TensoricScriptResolver","l":"canResolve(TensoricScript<V, R>, ResolvingContext)","url":"canResolve(org.tensorics.core.lang.TensoricScript,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"UnaryOperationResolver","l":"canResolve(UnaryOperationExpression<R>, ResolvingContext)","url":"canResolve(org.tensorics.core.expressions.UnaryOperationExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"cartesianEnumProduct(Class<?>...)","url":"cartesianEnumProduct(java.lang.Class...)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"cartesianEnumProduct(Set<Class<?>>)","url":"cartesianEnumProduct(java.util.Set)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"cartesianProduct(Class<? extends Enum<?>>...)","url":"cartesianProduct(java.lang.Class...)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"cartesianProduct(Iterable<Set<?>>)","url":"cartesianProduct(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"cartesianProduct(Set<Class<? extends Enum<?>>>)","url":"cartesianProduct(java.util.Set)"},{"p":"org.tensorics.core.util.chains","c":"Chain","l":"Chain(BiFunction<Object, Function<Object, R>, R>, Function<Object, R>, int)","url":"%3Cinit%3E(java.util.function.BiFunction,java.util.function.Function,int)"},{"p":"org.tensorics.core.util.chains","c":"Chains","l":"chainFor(Class<R>)","url":"chainFor(java.lang.Class)"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingDetection","l":"changesAlong(Class<C>, Comparator<C>)","url":"changesAlong(java.lang.Class,java.util.Comparator)"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingDetection","l":"changesAlong(Class<C>)","url":"changesAlong(java.lang.Class)"},{"p":"org.tensorics.core.tensor.stream","c":"AbstractTensoricCollector","l":"characteristics()"},{"p":"org.tensorics.core.math","c":"ExtendedField","l":"cheating()"},{"p":"org.tensorics.core.math.impl","c":"ExtendedFieldImpl","l":"cheating()"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"checkClassesRelations(Iterable<Class<?>>)","url":"checkClassesRelations(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"checkClassRelations(Class<?>, Iterable<Class<?>>)","url":"checkClassRelations(java.lang.Class,java.lang.Iterable)"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPairs","l":"chooseOnePerContravariantPart(List<CoContraDimensionPair>)","url":"chooseOnePerContravariantPart(java.util.List)"},{"p":"org.tensorics.core.util.chains","c":"CaseMatchings.ClassDispatcher","l":"ClassDispatcher(Class<CT>, Supplier<CT>, SortedMap<Class<?>, Invokable<CT, R>>)","url":"%3Cinit%3E(java.lang.Class,java.util.function.Supplier,java.util.SortedMap)"},{"p":"org.tensorics.core.util","c":"Classes","l":"classesOf(Iterable<?>)","url":"classesOf(java.lang.Iterable)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedInternals","l":"classOf(TB)"},{"p":"org.tensorics.core.util.names","c":"ClasspathConstantScanner","l":"ClasspathConstantScanner(Set<String>)","url":"%3Cinit%3E(java.util.Set)"},{"p":"org.tensorics.core.testing.lang","c":"OngoingCloseToMatcherCreation","l":"closeTo(S)"},{"p":"org.tensorics.core.testing.lang","c":"OngoingCloseToMatcherCreation","l":"closeTo(Tensor<S>)","url":"closeTo(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPairs","l":"coContraPairsOf(Shape, Shape)","url":"coContraPairsOf(org.tensorics.core.tensor.Shape,org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.function.operations","c":"CodomainExtraction","l":"CodomainExtraction()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"combineAll(Set<PositionPair>, Set<Class<?>>)","url":"combineAll(java.util.Set,java.util.Set)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"combineDimensions(Position, Position, Set<Class<?>>)","url":"combineDimensions(org.tensorics.core.tensor.Position,org.tensorics.core.tensor.Position,java.util.Set)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"combineDimensions(PositionPair, Set<Class<?>>)","url":"combineDimensions(org.tensorics.core.tensor.PositionPair,java.util.Set)"},{"p":"org.tensorics.core.tensor.stream","c":"AbstractTensoricCollector","l":"combiner()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"comparator()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"comparator()"},{"p":"org.tensorics.core.tensor.coordinates","c":"PositionOrdering","l":"comparatorFor(Class<T>)","url":"comparatorFor(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"complete(TB)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"complete(TB)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"complete(Tensor<S>)","url":"complete(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"complete(Tensor<S>)","url":"complete(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"completeWith(Tensor<V>, Tensor<V>)","url":"completeWith(org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.analysis","c":"ConditionBuilder","l":"condition()"},{"p":"org.tensorics.core.analysis.expression","c":"AssertionExpression","l":"condition()"},{"p":"org.tensorics.core.analysis","c":"ConditionBuilder","l":"ConditionBuilder()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.lang","c":"EnvironmentImpl","l":"confidenceLevel()"},{"p":"org.tensorics.core.quantity.options","c":"ConfidenceLevel","l":"confidenceLevel()"},{"p":"org.tensorics.core.quantity.options","c":"ImmutableConfidenceLevel","l":"confidenceLevel()"},{"p":"org.tensorics.core.quantity.options","c":"QuantityEnvironment","l":"confidenceLevel()"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"confidenceLevelOf(Double)","url":"confidenceLevelOf(java.lang.Double)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"confidenceLevelOf(V)"},{"p":"org.tensorics.core.tensor.operations","c":"PositionFunctions","l":"constant(V)"},{"p":"org.tensorics.core.util","c":"Reflections","l":"constantsFrom(Class<?>)","url":"constantsFrom(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"construct(Class<TB>)","url":"construct(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"construct(Class<TB>)","url":"construct(java.lang.Class)"},{"p":"org.tensorics.core.util","c":"InstantiatorType","l":"CONSTRUCTOR"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"consumeScalars(Tensor<S>, BiConsumer<Position, S>)","url":"consumeScalars(org.tensorics.core.tensor.Tensor,java.util.function.BiConsumer)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"consumeScalars(Tensor<S>, Consumer<S>)","url":"consumeScalars(org.tensorics.core.tensor.Tensor,java.util.function.Consumer)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked5d","l":"contains(C1, C2, C3, C4, C5)","url":"contains(C1,C2,C3,C4,C5)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked4d","l":"contains(C1, C2, C3, C4)","url":"contains(C1,C2,C3,C4)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked3d","l":"contains(C1, C2, C3)","url":"contains(C1,C2,C3)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked2d","l":"contains(C1, C2)","url":"contains(C1,C2)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked1d","l":"contains(C1)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"contains(Object...)","url":"contains(java.lang.Object...)"},{"p":"org.tensorics.core.tensor","c":"Tensoric","l":"contains(Object...)","url":"contains(java.lang.Object...)"},{"p":"org.tensorics.core.tensor","c":"AbstractScalar","l":"contains(Position)","url":"contains(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"BroadcastedTensorView","l":"contains(Position)","url":"contains(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor","l":"contains(Position)","url":"contains(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"contains(Position)","url":"contains(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"Tensoric","l":"contains(Position)","url":"contains(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.resample","c":"ResamplingStage","l":"contains(Position)","url":"contains(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.specific","c":"ImmutableDoubleArrayBackedTensor","l":"contains(Position)","url":"contains(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.util","c":"MoreMultisets","l":"containsNonUniqueElements(Multiset<?>)","url":"containsNonUniqueElements(com.google.common.collect.Multiset)"},{"p":"org.tensorics.core.tree.domain","c":"RebuildingContext","l":"containsUpdated(Node)","url":"containsUpdated(org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.tree.domain","c":"RebuildingContextImpl","l":"containsUpdated(Node)","url":"containsUpdated(org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.util.names","c":"ImmutableNameRepository","l":"content()"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"context()"},{"p":"org.tensorics.core.tensor","c":"BroadcastedTensorView","l":"context()"},{"p":"org.tensorics.core.tensor","c":"ImmutableScalar","l":"context()"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor","l":"context()"},{"p":"org.tensorics.core.tensor","c":"Tensor","l":"context()"},{"p":"org.tensorics.core.tensor.specific","c":"ImmutableDoubleArrayBackedTensor","l":"context()"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"context(Object...)","url":"context(java.lang.Object...)"},{"p":"org.tensorics.core.tensor","c":"TensorBuilder","l":"context(Object...)","url":"context(java.lang.Object...)"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"context(Object...)","url":"context(java.lang.Object...)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"context(Object...)","url":"context(java.lang.Object...)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"context(Object...)","url":"context(java.lang.Object...)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"context(Object...)","url":"context(java.lang.Object...)"},{"p":"org.tensorics.core.reduction","c":"ReductionStrategy","l":"context(Position)","url":"context(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.reduction","c":"Slicing","l":"context(Position)","url":"context(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"context(Position)","url":"context(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"TensorBuilder","l":"context(Position)","url":"context(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"context(Position)","url":"context(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"context(Position)","url":"context(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"context(Position)","url":"context(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"context(Position)","url":"context(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.options","c":"ContextPropagationStrategy","l":"contextForLeftRight(Position, Position)","url":"contextForLeftRight(org.tensorics.core.tensor.Position,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.options","c":"LeftContextPreservedStrategy","l":"contextForLeftRight(Position, Position)","url":"contextForLeftRight(org.tensorics.core.tensor.Position,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.resolve.resolvers","c":"Resolvers","l":"contextResolvesAll(List<? extends Expression<?>>, ResolvingContext)","url":"contextResolvesAll(java.util.List,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"Resolvers","l":"contextResolvesAllNodes(List<? extends Node>, ResolvingContext)","url":"contextResolvesAllNodes(java.util.List,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPair","l":"contravariant()"},{"p":"org.tensorics.core.tensor.variance","c":"Covariants","l":"contravariantOf(Class<?>)","url":"contravariantOf(java.lang.Class)"},{"p":"org.tensorics.core.expressions","c":"ConversionOperationExpression","l":"ConversionOperationExpression(Conversion<T, R>, Expression<? extends T>)","url":"%3Cinit%3E(org.tensorics.core.commons.operations.Conversion,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.resolve.resolvers","c":"ConversionOperationResolver","l":"ConversionOperationResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.commons.operations","c":"Conversions","l":"Conversions()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"convert(QuantifiedValue<Double>)","url":"convert(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"convert(QuantifiedValue<V>)","url":"convert(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"convert(QuantifiedValue<V>)","url":"convert(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.incubate.function","c":"Functions","l":"convertToDiscreteFunctionFrom(double[], double[], double[])","url":"convertToDiscreteFunctionFrom(double[],double[],double[])"},{"p":"org.tensorics.incubate.function","c":"Functions","l":"convertToDiscreteFunctionFrom(double[], double[])","url":"convertToDiscreteFunctionFrom(double[],double[])"},{"p":"org.tensorics.incubate.function","c":"Functions","l":"convertToDiscreteFunctionFrom(Map<Double, Double>, String)","url":"convertToDiscreteFunctionFrom(java.util.Map,java.lang.String)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"convertToQuantified(Tensor<S>, Unit)","url":"convertToQuantified(org.tensorics.core.tensor.Tensor,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPairs","l":"convertToRight(Position, List<CoContraDimensionPair>)","url":"convertToRight(org.tensorics.core.tensor.Position,java.util.List)"},{"p":"org.tensorics.core.quantity.options","c":"JScienceQuantificationStrategy","l":"convertValueToUnit(V, Unit)","url":"convertValueToUnit(V,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.quantity.options","c":"QuantificationStrategy","l":"convertValueToUnit(V, Unit)","url":"convertValueToUnit(V,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.tensor.variance","c":"Covariants","l":"coordinateClassFor(Class<? extends Covariant<C>>)","url":"coordinateClassFor(java.lang.Class)"},{"p":"org.tensorics.core.tensor","c":"Position","l":"coordinateFor(Class<CS>)","url":"coordinateFor(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTypes","l":"coordinateParametrizedSubtypeOf(Class<? extends DimtypedTensorbacked>)","url":"coordinateParametrizedSubtypeOf(java.lang.Class)"},{"p":"org.tensorics.core.tensor","c":"Position","l":"coordinates()"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreamMappers","l":"coordinatesOfType(Class<CI>, Function<CI, CO>)","url":"coordinatesOfType(java.lang.Class,java.util.function.Function)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreams","l":"coordinatesOfType(Class<CI>, Function<CI, CO>)","url":"coordinatesOfType(java.lang.Class,java.util.function.Function)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"coordinatesOfType(Class<T>)","url":"coordinatesOfType(java.lang.Class)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"coordinatesOfType(Set<Position>, Class<T>)","url":"coordinatesOfType(java.util.Set,java.lang.Class)"},{"p":"org.tensorics.core.function","c":"CoordinateToPositionFunction","l":"CoordinateToPositionFunction()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"copyOf(Tensor<T>)","url":"copyOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor","l":"copyOf(Tensor<T>)","url":"copyOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"countOf(int)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"countOf(int)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"countOf(int)"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPair","l":"covariant()"},{"p":"org.tensorics.core.tensor.variance","c":"Covariant","l":"Covariant(C)","url":"%3Cinit%3E(C)"},{"p":"org.tensorics.core.tensor","c":"Position","l":"covers(Position)","url":"covers(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"covers(Shape)","url":"covers(org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.util","c":"Instantiator","l":"create(A1)"},{"p":"org.tensorics.core.util","c":"SingleArgumentInvokableInstantiator","l":"create(A1)"},{"p":"org.tensorics.core.tensorbacked","c":"ProxiedInterfaceTensorbackeds","l":"create(Class<T>, Tensor<V>)","url":"create(java.lang.Class,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedInternals","l":"createBackedByTensor(Class<T>, Tensor<V>)","url":"createBackedByTensor(java.lang.Class,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor.Builder","l":"createEntriesMap()"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"createFrom(Shape, Function<Position, S>)","url":"createFrom(org.tensorics.core.tensor.Shape,java.util.function.Function)"},{"p":"org.tensorics.core.tensor.operations","c":"TensorInternals","l":"createFrom(Shape, Function<Position, S>)","url":"createFrom(org.tensorics.core.tensor.Shape,java.util.function.Function)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"createFrom(Shape, Supplier<S>)","url":"createFrom(org.tensorics.core.tensor.Shape,java.util.function.Supplier)"},{"p":"org.tensorics.core.tensor.operations","c":"TensorInternals","l":"createFrom(Shape, Supplier<S>)","url":"createFrom(org.tensorics.core.tensor.Shape,java.util.function.Supplier)"},{"p":"org.tensorics.core.util","c":"InstantiatorType","l":"createInstantiator(Class<R>, Class<A>)","url":"createInstantiator(java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.incubate.function","c":"Functions","l":"createInterpolatedFunctionFromTwoPoints(double, double, double)","url":"createInterpolatedFunctionFromTwoPoints(double,double,double)"},{"p":"org.tensorics.core.tensor.specific","c":"PositionIndexer.Builder","l":"createMapping()"},{"p":"org.tensorics.core.resolve.options","c":"ResolvingOptions","l":"createRegistryWithDefaultsExcept(ResolvingOption...)","url":"createRegistryWithDefaultsExcept(org.tensorics.core.resolve.options.ResolvingOption...)"},{"p":"org.tensorics.core.tensor.expressions","c":"TensorExpressions","l":"creationOfShapeValue(Shape, V)","url":"creationOfShapeValue(org.tensorics.core.tensor.Shape,V)"},{"p":"org.tensorics.core.expressions","c":"CreationOperationExpression","l":"CreationOperationExpression(CreationOperation<T>)","url":"%3Cinit%3E(org.tensorics.core.math.operations.CreationOperation)"},{"p":"org.tensorics.core.resolve.resolvers","c":"CreationOperationResolver","l":"CreationOperationResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.util","c":"SystemState","l":"currentTimeAfterGc()"},{"p":"org.tensorics.core.util","c":"SystemState","l":"currentTimeBeforeGc()"},{"p":"org.tensorics.incubate.function","c":"Functions","l":"cutBeginingOfExp(DiscreteFunction<Double, Double>, double)","url":"cutBeginingOfExp(org.tensorics.incubate.function.DiscreteFunction,double)"},{"p":"org.tensorics.core.util","c":"Reflections","l":"declaredGetters(Object)","url":"declaredGetters(java.lang.Object)"},{"p":"org.tensorics.core.booleans","c":"BooleanSupport","l":"DEFAULT_REGISTRY"},{"p":"org.tensorics.core.resolve.engine","c":"ResolvingEngines","l":"defaultEngine()"},{"p":"org.tensorics.core.resolve.engine","c":"ResolvingEngines","l":"defaultEngineWithAdditional(Resolver<?, ?>...)","url":"defaultEngineWithAdditional(org.tensorics.core.resolve.resolvers.Resolver...)"},{"p":"org.tensorics.core.function","c":"DefaultInterpolatedFunction","l":"DefaultInterpolatedFunction(DiscreteFunction<X, Y>, InterpolationStrategy<Y>, Conversion<X, Y>, Comparator<X>)","url":"%3Cinit%3E(org.tensorics.core.function.DiscreteFunction,org.tensorics.core.function.interpolation.InterpolationStrategy,org.tensorics.core.commons.operations.Conversion,java.util.Comparator)"},{"p":"org.tensorics.core.resolve.options","c":"ResolvingOptions","l":"defaultOptions()"},{"p":"org.tensorics.core.lang","c":"ManipulationOptions","l":"defaultOptions(ExtendedField<T>)","url":"defaultOptions(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.resolve.resolvers","c":"Resolvers","l":"defaultRepository()"},{"p":"org.tensorics.core.resolve.resolvers","c":"Resolvers","l":"defaultRepositoryWithAdditional(Resolver<?, ?>...)","url":"defaultRepositoryWithAdditional(org.tensorics.core.resolve.resolvers.Resolver...)"},{"p":"org.tensorics.core.resolve.engine","c":"DefaultResolvingEngine","l":"DefaultResolvingEngine()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.lang","c":"ManipulationOptions","l":"defaultStructuralOnly()"},{"p":"org.tensorics.core.function","c":"DefaultInterpolatedFunction","l":"definedXValues()"},{"p":"org.tensorics.core.function","c":"DiscreteFunction","l":"definedXValues()"},{"p":"org.tensorics.core.function","c":"MapBackedDiscreteFunction","l":"definedXValues()"},{"p":"org.tensorics.core.lang","c":"TensoricScript","l":"describe()"},{"p":"org.tensorics.core.testing.hamcrest","c":"AllElementsEqualTo","l":"describeTo(Description)","url":"describeTo(org.hamcrest.Description)"},{"p":"org.tensorics.core.testing.hamcrest","c":"ScalarIsCloseTo","l":"describeTo(Description)","url":"describeTo(org.hamcrest.Description)"},{"p":"org.tensorics.core.testing.hamcrest","c":"TensorIsCloseTo","l":"describeTo(Description)","url":"describeTo(org.hamcrest.Description)"},{"p":"org.tensorics.core.resolve.domain","c":"DetailedExpressionResult","l":"DetailedExpressionResult(E, R, ResolvingContext)","url":"%3Cinit%3E(E,R,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.booleans","c":"BooleanSupport","l":"detectWhere(Tensor<Boolean>)","url":"detectWhere(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.booleans","c":"TensorBooleanSupport","l":"detectWhere(Tensor<Boolean>)","url":"detectWhere(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"difference(Position, Position)","url":"difference(org.tensorics.core.tensor.Position,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"Shapes","l":"dimensionalIntersection(Shape, Shape)","url":"dimensionalIntersection(org.tensorics.core.tensor.Shape,org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"dimensionality()"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"dimensionalityOf(TB)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"dimensionalityOf(TB)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTypes","l":"dimensionListFrom(Class<? extends DimtypedTensorbacked>)","url":"dimensionListFrom(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedInternals","l":"dimensionListFrom(Class<T>)","url":"dimensionListFrom(java.lang.Class)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"dimensions()"},{"p":"org.tensorics.core.tensor.coordinates","c":"PositionOrdering","l":"dimensions()"},{"p":"org.tensorics.core.tensor.specific","c":"PositionIndexer","l":"dimensions()"},{"p":"org.tensorics.core.tensor","c":"Position","l":"dimensionSet()"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"dimensionSet()"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTypes","l":"dimensionsFrom(Class<? extends DimtypedTensorbacked>)","url":"dimensionsFrom(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedInternals","l":"dimensionsOf(Class<T>)","url":"dimensionsOf(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"dimensionsOf(Class<T>)","url":"dimensionsOf(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"dimensionsOf(Tensor<?>)","url":"dimensionsOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"dimensionsOf(Tensorbacked<?>)","url":"dimensionsOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensor","c":"Shapes","l":"dimensionStripped(Shape, Set<? extends Class<?>>)","url":"dimensionStripped(org.tensorics.core.tensor.Shape,java.util.Set)"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"dimensionsWithoutClassPath(Position)","url":"dimensionsWithoutClassPath(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"dimensionsWithoutClassPath(Set<Class<?>>)","url":"dimensionsWithoutClassPath(java.util.Set)"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"dimensionsWithoutClassPath(Tensor<?>)","url":"dimensionsWithoutClassPath(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.function.operations","c":"DiscreteFunctionOperationRepository","l":"DiscreteFunctionOperationRepository(Environment<Y>, Conversion<X, Y>, Comparator<X>)","url":"%3Cinit%3E(org.tensorics.core.commons.options.Environment,org.tensorics.core.commons.operations.Conversion,java.util.Comparator)"},{"p":"org.tensorics.core.function.expressions","c":"DiscreteFunctionToIterableExpression","l":"DiscreteFunctionToIterableExpression(Conversion<DiscreteFunction<?, Y>, Iterable<Y>>, Expression<DiscreteFunction<?, Y>>)","url":"%3Cinit%3E(org.tensorics.core.commons.operations.Conversion,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.incubate.spaces","c":"Metric","l":"distance(T, T)","url":"distance(T,T)"},{"p":"org.tensorics.core.quantity.options","c":"JScienceQuantificationStrategy","l":"divide(Unit, Unit)","url":"divide(org.tensorics.core.units.Unit,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.quantity.options","c":"QuantificationStrategy","l":"divide(Unit, Unit)","url":"divide(org.tensorics.core.units.Unit,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.function.lang","c":"OngoingDiscreteFunctionBinaryOperation","l":"dividedBy(DiscreteFunction<X, Y>)","url":"dividedBy(org.tensorics.core.function.DiscreteFunction)"},{"p":"org.tensorics.core.function.lang","c":"OngoingDeferredDiscreteFunctionBinaryOperation","l":"dividedBy(Expression<DiscreteFunction<X, Y>>)","url":"dividedBy(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"dividedBy(Expression<QuantifiedValue<S>>)","url":"dividedBy(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"dividedBy(Expression<S>)","url":"dividedBy(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"dividedBy(QuantifiedValue<S>)","url":"dividedBy(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"dividedBy(QuantifiedValue<S>)","url":"dividedBy(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"dividedBy(S, Unit<?>)","url":"dividedBy(S,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"dividedBy(S, Unit<?>)","url":"dividedBy(S,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"dividedBy(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingScalarBinaryOperation","l":"dividedBy(S)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingBinaryOperation","l":"dividedBy(T)"},{"p":"org.tensorics.core.function.operations","c":"DiscreteFunctionOperationRepository","l":"division()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"division()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"division()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"division()"},{"p":"org.tensorics.core.fields.doubles","c":"DoubleCheating","l":"DoubleCheating()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.fields.doubles","c":"DoubleMath","l":"DoubleMath()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.fields.doubles","c":"Structures","l":"doubles()"},{"p":"org.tensorics.core.lang","c":"DoubleScript","l":"DoubleScript()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.util.chains","c":"Chains.OngoingMainChain","l":"either(BiFunction<Object, Function<Object, R>, R>)","url":"either(java.util.function.BiFunction)"},{"p":"org.tensorics.core.util.chains","c":"Chains.OngoingMainChain","l":"either(Function<Object, R>)","url":"either(java.util.function.Function)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"either(V)"},{"p":"org.tensorics.core.tensor.operations","c":"ElementBinaryFunction","l":"ElementBinaryFunction(BinaryFunction<V, R>, OptionRegistry<ManipulationOption>)","url":"%3Cinit%3E(org.tensorics.core.math.operations.BinaryFunction,org.tensorics.core.commons.options.OptionRegistry)"},{"p":"org.tensorics.core.tensor.operations","c":"ElementBinaryOperation","l":"ElementBinaryOperation(BinaryOperation<V>, OptionRegistry<ManipulationOption>)","url":"%3Cinit%3E(org.tensorics.core.math.operations.BinaryOperation,org.tensorics.core.commons.options.OptionRegistry)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredQuantifiedTensorOperation","l":"elementDividedBy(Expression<Tensor<QuantifiedValue<S>>>)","url":"elementDividedBy(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredTensorOperation","l":"elementDividedBy(Expression<Tensor<V>>)","url":"elementDividedBy(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"elementDividedBy(QTB)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingOperation","l":"elementDividedBy(T)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorBackedOperation","l":"elementDividedBy(TB)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingQuantifiedTensorOperation","l":"elementDividedBy(Tensor<QuantifiedValue<S>>)","url":"elementDividedBy(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorOperation","l":"elementDividedBy(Tensor<V>)","url":"elementDividedBy(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredQuantifiedTensorOperation","l":"elementDividedByQT(Tensor<QuantifiedValue<S>>)","url":"elementDividedByQT(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"elementDividedByQT(Tensor<QuantifiedValue<S>>)","url":"elementDividedByQT(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredQuantifiedTensorOperation","l":"elementDividedByV(QuantifiedValue<S>)","url":"elementDividedByV(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingQuantifiedTensorOperation","l":"elementDividedByV(QuantifiedValue<S>)","url":"elementDividedByV(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"elementDividedByV(QuantifiedValue<S>)","url":"elementDividedByV(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingOperation","l":"elementDividedByV(V)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredTensorOperation","l":"elementDividedByV(V)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorOperation","l":"elementDividedByV(V)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorBackedOperation","l":"elementDividedByV(V)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"elementInverseOf(Expression<Tensor<Double>>)","url":"elementInverseOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"elementInverseOf(Expression<Tensor<V>>)","url":"elementInverseOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorExpressionSupport","l":"elementInverseOf(Expression<Tensor<V>>)","url":"elementInverseOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"elementInverseOf(Tensor<Double>)","url":"elementInverseOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"elementInverseOf(Tensor<V>)","url":"elementInverseOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorSupport","l":"elementInverseOf(Tensor<V>)","url":"elementInverseOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"elementNegativeOf(Expression<Tensor<Double>>)","url":"elementNegativeOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"elementNegativeOf(Expression<Tensor<V>>)","url":"elementNegativeOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorExpressionSupport","l":"elementNegativeOf(Expression<Tensor<V>>)","url":"elementNegativeOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"elementNegativeOfQTB(Class<QTB>, Expression<QTB>)","url":"elementNegativeOfQTB(java.lang.Class,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"elementNegativeOfQTB(Class<QTB>, Expression<QTB>)","url":"elementNegativeOfQTB(java.lang.Class,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"QuantityTensorbackedExpressionSupport","l":"elementNegativeOfTB(Class<QTB>, Expression<QTB>)","url":"elementNegativeOfTB(java.lang.Class,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"elementNegativeOfTB(Expression<TB>)","url":"elementNegativeOfTB(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"elementNegativeOfTB(Expression<TB>)","url":"elementNegativeOfTB(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"TensorbackedExpressionSupport","l":"elementNegativeOfTB(Expression<TB>)","url":"elementNegativeOfTB(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.math.structures.grouplike","c":"FiniteStructure","l":"elements()"},{"p":"org.tensorics.core.tensorbacked.operations","c":"ElementTensorBackedUnaryOperation","l":"ElementTensorBackedUnaryOperation(UnaryOperation<V>)","url":"%3Cinit%3E(org.tensorics.core.math.operations.UnaryOperation)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredQuantifiedTensorOperation","l":"elementTimes(Expression<Tensor<QuantifiedValue<S>>>)","url":"elementTimes(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredTensorOperation","l":"elementTimes(Expression<Tensor<V>>)","url":"elementTimes(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"elementTimes(QTB)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingOperation","l":"elementTimes(T)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorBackedOperation","l":"elementTimes(TB)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingQuantifiedTensorOperation","l":"elementTimes(Tensor<QuantifiedValue<S>>)","url":"elementTimes(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorOperation","l":"elementTimes(Tensor<V>)","url":"elementTimes(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"elementTimesQT(Tensor<QuantifiedValue<S>>)","url":"elementTimesQT(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredQuantifiedTensorOperation","l":"elementTimesV(QuantifiedValue<S>)","url":"elementTimesV(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingQuantifiedTensorOperation","l":"elementTimesV(QuantifiedValue<S>)","url":"elementTimesV(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"elementTimesV(QuantifiedValue<S>)","url":"elementTimesV(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingOperation","l":"elementTimesV(V)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredTensorOperation","l":"elementTimesV(V)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorOperation","l":"elementTimesV(V)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorBackedOperation","l":"elementTimesV(V)"},{"p":"org.tensorics.core.tensor.operations","c":"ElementUnaryOperation","l":"ElementUnaryOperation(UnaryOperation<V>)","url":"%3Cinit%3E(org.tensorics.core.math.operations.UnaryOperation)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"elementwise(BinaryFunction<S, R>, Tensor<S>, Tensor<S>)","url":"elementwise(org.tensorics.core.math.operations.BinaryFunction,org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"elementwise(BinaryFunction<S, R>, Tensor<S>, Tensor<S>)","url":"elementwise(org.tensorics.core.math.operations.BinaryFunction,org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorSupport","l":"elementwise(BinaryFunction<S, R>, Tensor<S>, Tensor<S>)","url":"elementwise(org.tensorics.core.math.operations.BinaryFunction,org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"elementwise(BinaryOperation<Double>, Tensor<Double>, Tensor<Double>)","url":"elementwise(org.tensorics.core.math.operations.BinaryOperation,org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorSupport","l":"elementwise(BinaryOperation<S>, Tensor<S>, Tensor<S>)","url":"elementwise(org.tensorics.core.math.operations.BinaryOperation,org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.expressions","c":"TensorExpressions","l":"elementwise(BinaryOperation<V>, Expression<Tensor<V>>, Expression<Tensor<V>>, OptionRegistry<ManipulationOption>)","url":"elementwise(org.tensorics.core.math.operations.BinaryOperation,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.commons.options.OptionRegistry)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"elementwise(BinaryOperation<V>, Tensor<V>, Tensor<V>)","url":"elementwise(org.tensorics.core.math.operations.BinaryOperation,org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.expressions","c":"TensorExpressions","l":"elementwise(UnaryOperation<V>, Expression<Tensor<V>>)","url":"elementwise(org.tensorics.core.math.operations.UnaryOperation,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.resolve.engine","c":"EmergencyAbortLimitReachedException","l":"EmergencyAbortLimitReachedException(int)","url":"%3Cinit%3E(int)"},{"p":"org.tensorics.core.tensor","c":"Position","l":"empty()"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"empty()"},{"p":"org.tensorics.core.util.names","c":"ImmutableNameRepository","l":"empty()"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"empty(Class<?>...)","url":"empty(java.lang.Class...)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"empty(Class<TB>)","url":"empty(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"empty(Class<TB>)","url":"empty(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"empty(Iterable<Class<?>>)","url":"empty(java.lang.Iterable)"},{"p":"org.tensorics.incubate.function","c":"Functions","l":"emptyDiscreteFunction()"},{"p":"org.tensorics.core.tree.domain","c":"Contexts","l":"emptyRebuildingContext()"},{"p":"org.tensorics.core.analysis","c":"EnablingConditionBuilder","l":"EnablingConditionBuilder()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.util.chains","c":"Chains.OngoingMainChain","l":"endRecursionDefaultDepth(int)"},{"p":"org.tensorics.core.util.chains","c":"Chains.OngoingMainChain","l":"endRecursionWith(Function<Object, R>)","url":"endRecursionWith(java.util.function.Function)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedInternals","l":"ensureExactTensorbackedDimensions(Class<TB>, Tensor<E>)","url":"ensureExactTensorbackedDimensions(java.lang.Class,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.operations","c":"TensorInternals","l":"entrySetOf(Tensor<T>)","url":"entrySetOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.function.lang","c":"FunctionExpressionSupportWithConversionAndComparator","l":"environment()"},{"p":"org.tensorics.core.function.lang","c":"FunctionSupportWithConversionAndComparator","l":"environment()"},{"p":"org.tensorics.core.quantity.operations","c":"AbstractQuantityOperation","l":"environment()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"environment()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"equal()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"equal()"},{"p":"org.tensorics.core.analysis","c":"AnalysisResult","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.analysis","c":"AssertionResult","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.analysis.expression","c":"AnalysisExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.analysis.expression","c":"AssertionExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.commons.util","c":"AbstractPair","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.expressions","c":"BinaryOperationExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.expressions","c":"BinaryPredicateExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.expressions","c":"ConversionOperationExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.expressions","c":"CreationOperationExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.expressions","c":"IterableResolvingExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.expressions","c":"LatestOfExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.expressions","c":"Placeholder","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.expressions","c":"PredicateExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.expressions","c":"UnaryOperationExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.fields.doubles","c":"AbstractOrderedField","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.function","c":"MapBackedDiscreteFunction","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.function.operations","c":"AbstractDiscreteFunctionBinaryOperation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.functional.expressions","c":"FunctionalExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.iterable.expressions","c":"BinaryPredicateIterableExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.iterable.expressions","c":"IterableExpressionToIterable","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.lang","c":"EnvironmentImpl","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.lang","c":"TensoricScript","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.math.structures.grouplike","c":"AbstractAbelianGroup","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.quantity","c":"ImmutableErronousValue","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.quantity","c":"ImmutableQuantifiedValue","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.quantity.conditions","c":"AbstractQuantityStatisticPredicate","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityGreaterPredicate","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityLessPredicate","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.quantity.operations","c":"AbstractQuantityOperation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityBinaryOperation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.quantity.options","c":"ImmutableConfidenceLevel","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.quantity.options","c":"JScienceQuantificationStrategy","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.quantity.options","c":"OperandPair","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.resolve.domain","c":"DetailedExpressionResult","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensor","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.tensor","c":"Position","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.tensor.coordinates","c":"PositionOrdering","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.tensor.operations","c":"ElementBinaryFunction","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.tensor.operations","c":"ElementUnaryOperation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.tensor.operations","c":"FunctionTensorCreationOperation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.tensor.operations","c":"InnerTensorOperation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.tensor.variance","c":"Covariant","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.tensorbacked","c":"AbstractTensorbacked","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.tensorbacked.operations","c":"ElementTensorBackedUnaryOperation","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.tree.domain","c":"ResolvedExpression","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.units","c":"JScienceUnit","l":"equals(Object)","url":"equals(java.lang.Object)"},{"p":"org.tensorics.core.analysis","c":"AssertionStatus","l":"ERROR"},{"p":"org.tensorics.core.quantity","c":"ErronousValue","l":"error()"},{"p":"org.tensorics.core.quantity","c":"ImmutableErronousValue","l":"error()"},{"p":"org.tensorics.core.quantity","c":"ImmutableQuantifiedValue","l":"error()"},{"p":"org.tensorics.core.quantity.options","c":"ErrorPropagationStrategy","l":"errorForProductAndDivision(ErronousValue<V>, ErronousValue<V>)","url":"errorForProductAndDivision(org.tensorics.core.quantity.ErronousValue,org.tensorics.core.quantity.ErronousValue)"},{"p":"org.tensorics.core.quantity.options","c":"UncorrelatedErrorPropagationStrategy","l":"errorForProductAndDivision(ErronousValue<V>, ErronousValue<V>)","url":"errorForProductAndDivision(org.tensorics.core.quantity.ErronousValue,org.tensorics.core.quantity.ErronousValue)"},{"p":"org.tensorics.core.quantity.options","c":"ErrorPropagationStrategy","l":"errorForSumAndDifference(ErronousValue<V>, ErronousValue<V>)","url":"errorForSumAndDifference(org.tensorics.core.quantity.ErronousValue,org.tensorics.core.quantity.ErronousValue)"},{"p":"org.tensorics.core.quantity.options","c":"UncorrelatedErrorPropagationStrategy","l":"errorForSumAndDifference(ErronousValue<V>, ErronousValue<V>)","url":"errorForSumAndDifference(org.tensorics.core.quantity.ErronousValue,org.tensorics.core.quantity.ErronousValue)"},{"p":"org.tensorics.core.lang","c":"EnvironmentImpl","l":"errorPropagation()"},{"p":"org.tensorics.core.quantity.options","c":"QuantityEnvironment","l":"errorPropagation()"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"errorsOf(Tensor<QuantifiedValue<S>>)","url":"errorsOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensors","l":"errorsOf(Tensor<QuantifiedValue<S>>)","url":"errorsOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"errorsOf(Tensorbacked<QuantifiedValue<S>>)","url":"errorsOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"errorsOf(Tensorbacked<QuantifiedValue<S>>)","url":"errorsOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"errorsOfOr(Tensor<QuantifiedValue<S>>, S)","url":"errorsOfOr(org.tensorics.core.tensor.Tensor,S)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensors","l":"errorsOfOr(Tensor<QuantifiedValue<S>>, S)","url":"errorsOfOr(org.tensorics.core.tensor.Tensor,S)"},{"p":"org.tensorics.core.tensor.options","c":"ExactShapesOrOneZeroStrategy","l":"ExactShapesOrOneZeroStrategy()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.resolve.domain","c":"ExceptionHandlingRequest","l":"ExceptionHandlingRequest(ExceptionHandlingRequest.Builder)","url":"%3Cinit%3E(org.tensorics.core.resolve.domain.ExceptionHandlingRequest.Builder)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAllBooleanExcludableCondition","l":"excluding(Expression<Boolean>...)","url":"excluding(org.tensorics.core.tree.domain.Expression...)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAllBooleanExcludableCondition","l":"excluding(Set<Expression<Boolean>>)","url":"excluding(java.util.Set)"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"ExplicitFieldImpl(OrderedField<T>)","url":"%3Cinit%3E(org.tensorics.core.math.structures.ringlike.OrderedField)"},{"p":"org.tensorics.core.tree.domain","c":"ExpressionIsUnresolvedException","l":"ExpressionIsUnresolvedException()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tree.domain","c":"ExpressionIsUnresolvedException","l":"ExpressionIsUnresolvedException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.tensorics.core.tree.domain","c":"ExpressionIsUnresolvedException","l":"ExpressionIsUnresolvedException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.tensorics.core.tree.domain","c":"ExpressionIsUnresolvedException","l":"ExpressionIsUnresolvedException(Throwable)","url":"%3Cinit%3E(java.lang.Throwable)"},{"p":"org.tensorics.core.expressions","c":"IterableResolvingExpression","l":"expressions()"},{"p":"org.tensorics.core.fields.doubles","c":"Structures","l":"extended(OrderedField<T>, Math<T>, Cheating<T>)","url":"extended(org.tensorics.core.math.structures.ringlike.OrderedField,org.tensorics.core.math.Math,org.tensorics.core.math.Cheating)"},{"p":"org.tensorics.core.math.impl","c":"ExtendedFieldImpl","l":"ExtendedFieldImpl(OrderedField<T>, Math<T>, Cheating<T>)","url":"%3Cinit%3E(org.tensorics.core.math.structures.ringlike.OrderedField,org.tensorics.core.math.Math,org.tensorics.core.math.Cheating)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"extract(Object...)","url":"extract(java.lang.Object...)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"extract(Position)","url":"extract(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"extractCoordinatesOfType(Class<C1>)","url":"extractCoordinatesOfType(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked.expressions","c":"TensorbackedExpressions","l":"extracted(Expression<TB>)","url":"extracted(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"extractWhereTrue(Tensor<Boolean>)","url":"extractWhereTrue(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.util","c":"InstantiatorType","l":"FACTORY_METHOD"},{"p":"org.tensorics.core.analysis","c":"AssertionStatus","l":"FAILURE"},{"p":"org.tensorics.core.commons.options","c":"Environment","l":"field()"},{"p":"org.tensorics.core.lang","c":"EnvironmentImpl","l":"field()"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"field()"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"field()"},{"p":"org.tensorics.core.tensor.resample.impl","c":"FieldInterpolator","l":"FieldInterpolator(ExtendedField<V>, Collection<C>, Function<C, V>, Function<C, V>, C)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField,java.util.Collection,java.util.function.Function,java.util.function.Function,C)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"filter(TB)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"filter(TB)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"filter(Tensor<S>)","url":"filter(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"filter(Tensor<V>)","url":"filter(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tree.walking","c":"Trees","l":"findBottomNodes(Node)","url":"findBottomNodes(org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.tree.walking","c":"Trees","l":"findClosestAncestorNodeFromNodesToRootOfType(Node, Node, TypeToken<T>)","url":"findClosestAncestorNodeFromNodesToRootOfType(org.tensorics.core.tree.domain.Node,org.tensorics.core.tree.domain.Node,com.google.common.reflect.TypeToken)"},{"p":"org.tensorics.core.util","c":"Classes","l":"findGenericSuperclassOfType(Class<?>, Class<?>)","url":"findGenericSuperclassOfType(java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.tree.walking","c":"Trees","l":"findHighestNodeOfClass(Node, Class<T>)","url":"findHighestNodeOfClass(org.tensorics.core.tree.domain.Node,java.lang.Class)"},{"p":"org.tensorics.core.reduction","c":"AbstractInterpolationStrategy","l":"findIndex(List<C>, C, int)","url":"findIndex(java.util.List,C,int)"},{"p":"org.tensorics.core.tree.walking","c":"Trees","l":"findNodesOfClass(Node, Class<T>)","url":"findNodesOfClass(org.tensorics.core.tree.domain.Node,java.lang.Class)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorCollector","l":"finisher()"},{"p":"org.tensorics.core.tensor.stream","c":"TensorbackedCollector","l":"finisher()"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"firstCoordinateOfTyp(Set<?>, Class<C>)","url":"firstCoordinateOfTyp(java.util.Set,java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"flatten(Tensor<S>)","url":"flatten(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"flatten(Tensor<S>)","url":"flatten(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"flatten(Tensorbacked<S>)","url":"flatten(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"flatten(Tensorbacked<S>)","url":"flatten(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"forEach(Tensor<S>, BiConsumer<Position, S>)","url":"forEach(org.tensorics.core.tensor.Tensor,java.util.function.BiConsumer)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"forEach(Tensor<S>, Consumer<S>)","url":"forEach(org.tensorics.core.tensor.Tensor,java.util.function.Consumer)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"forEach(Tensorbacked<S>, BiConsumer<Position, S>)","url":"forEach(org.tensorics.core.tensorbacked.Tensorbacked,java.util.function.BiConsumer)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"forEach(Tensorbacked<S>, Consumer<S>)","url":"forEach(org.tensorics.core.tensorbacked.Tensorbacked,java.util.function.Consumer)"},{"p":"org.tensorics.core.tensor.operations","c":"PositionFunctions","l":"forSupplier(Supplier<V>)","url":"forSupplier(java.util.function.Supplier)"},{"p":"org.tensorics.core.function","c":"TensoricFunctions","l":"forTensor(Tensor<S>)","url":"forTensor(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.function","c":"TensoricFunctions","l":"forTensorbacked(Tensorbacked<S>)","url":"forTensorbacked(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression.Mode","l":"FROM_END"},{"p":"org.tensorics.core.util.names","c":"Names","l":"FROM_GET_NAME_METHOD"},{"p":"org.tensorics.core.util.names","c":"Names","l":"FROM_NAME_METHOD"},{"p":"org.tensorics.core.util.names","c":"Names","l":"FROM_OVERRIDDEN_TOSTRING"},{"p":"org.tensorics.core.util.names","c":"Names","l":"FROM_SIMPLE_CLASSNAME"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression.Mode","l":"FROM_START"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"from(Class<? extends Enum<?>>)","url":"from(java.lang.Class)"},{"p":"org.tensorics.core.util.chains","c":"CaseMatchings","l":"from(Class<R>, Class<CT>, Supplier<CT>)","url":"from(java.lang.Class,java.lang.Class,java.util.function.Supplier)"},{"p":"org.tensorics.core.util.chains","c":"CaseMatchings","l":"from(Class<R>, Class<CT>)","url":"from(java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"from(Collection<T>)","url":"from(java.util.Collection)"},{"p":"org.tensorics.core.tensor","c":"Positions.DimensionStripper","l":"from(Position)","url":"from(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"from(T...)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"from(Tensor<V>)","url":"from(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"from(Tensor<V>)","url":"from(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorbackedConstruction","l":"from(Tensor<V>)","url":"from(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"from(Tensorbacked<V>)","url":"from(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"from(TensorBuilder<V>, Class<B>, Class<T>)","url":"from(org.tensorics.core.tensor.TensorBuilder,java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.analysis","c":"AssertionStatus","l":"fromBooleanSuccessful(boolean)"},{"p":"org.tensorics.core.fields.doubles","c":"DoubleCheating","l":"fromDouble(double)"},{"p":"org.tensorics.core.math","c":"Cheating","l":"fromDouble(double)"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression","l":"fromFirst(Expression<? extends Iterable<T>>, int)","url":"fromFirst(org.tensorics.core.tree.domain.Expression,int)"},{"p":"org.tensorics.core.util.names","c":"Names","l":"fromGetNameMethod(Object)","url":"fromGetNameMethod(java.lang.Object)"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression","l":"fromLast(Expression<? extends Iterable<T>>, int)","url":"fromLast(org.tensorics.core.tree.domain.Expression,int)"},{"p":"org.tensorics.core.tensor","c":"PositionPair","l":"fromLeftRight(Position, Position)","url":"fromLeftRight(org.tensorics.core.tensor.Position,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"TensorPair","l":"fromLeftRight(Tensor<V>, Tensor<V>)","url":"fromLeftRight(org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.commons.util","c":"ValuePair","l":"fromLeftRight(V, V)","url":"fromLeftRight(V,V)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"fromMap(Iterable<Class<?>>, Map<Position, T>)","url":"fromMap(java.lang.Iterable,java.util.Map)"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor","l":"fromMap(Iterable<Class<?>>, Map<Position, T>)","url":"fromMap(java.lang.Iterable,java.util.Map)"},{"p":"org.tensorics.core.function","c":"MapBackedDiscreteFunction","l":"fromMap(Map<? extends X, ? extends Y>)","url":"fromMap(java.util.Map)"},{"p":"org.tensorics.core.util.names","c":"ImmutableNameRepository","l":"fromMap(Map<Object, String>)","url":"fromMap(java.util.Map)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorbackedConstruction","l":"fromMap(Map<Position, V>)","url":"fromMap(java.util.Map)"},{"p":"org.tensorics.core.util.names","c":"Names","l":"fromNameMethod(Object)","url":"fromNameMethod(java.lang.Object)"},{"p":"org.tensorics.core.util.names","c":"Names","l":"fromOverriddenToString(Object)","url":"fromOverriddenToString(java.lang.Object)"},{"p":"org.tensorics.core.util.names","c":"Names","l":"fromSimpleClassName(Object)","url":"fromSimpleClassName(java.lang.Object)"},{"p":"org.tensorics.core.util.names","c":"Names","l":"fromToString(Object)","url":"fromToString(java.lang.Object)"},{"p":"org.tensorics.core.functional.expressions","c":"FunctionalExpression","l":"function()"},{"p":"org.tensorics.core.functional.expressions","c":"FunctionalExpression","l":"FunctionalExpression(List<Expression<?>>, FuncN<R>)","url":"%3Cinit%3E(java.util.List,org.tensorics.core.functional.FuncN)"},{"p":"org.tensorics.core.resolve.resolvers","c":"FunctionalExpressionResolver","l":"FunctionalExpressionResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.function.lang","c":"FunctionExpressionSupport","l":"FunctionExpressionSupport(Environment<Y>)","url":"%3Cinit%3E(org.tensorics.core.commons.options.Environment)"},{"p":"org.tensorics.core.function","c":"MathFunctions","l":"functionFrom1DTensor(Tensor<Y>, Class<X>)","url":"functionFrom1DTensor(org.tensorics.core.tensor.Tensor,java.lang.Class)"},{"p":"org.tensorics.core.function","c":"MathFunctions","l":"functionsFrom(Tensor<Y>, Class<X>)","url":"functionsFrom(org.tensorics.core.tensor.Tensor,java.lang.Class)"},{"p":"org.tensorics.core.tensor.operations","c":"FunctionTensorCreationOperation","l":"FunctionTensorCreationOperation(Shape, Function<Position, V>)","url":"%3Cinit%3E(org.tensorics.core.tensor.Shape,java.util.function.Function)"},{"p":"org.tensorics.core.lang","c":"TensoricScript","l":"get()"},{"p":"org.tensorics.core.tensor.options","c":"BroadcastMissingDimensionsStrategy","l":"get()"},{"p":"org.tensorics.core.tensor.options","c":"ExactShapesOrOneZeroStrategy","l":"get()"},{"p":"org.tensorics.core.tensor.options","c":"IntersectionShapingStrategy","l":"get()"},{"p":"org.tensorics.core.tensor.options","c":"LeftContextPreservedStrategy","l":"get()"},{"p":"org.tensorics.core.tensor.variance","c":"Covariant","l":"get()"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"TensorbackedScalar","l":"get()"},{"p":"org.tensorics.core.tree.domain","c":"AbstractDeferredExpression","l":"get()"},{"p":"org.tensorics.core.tree.domain","c":"Expression","l":"get()"},{"p":"org.tensorics.core.tree.domain","c":"ResolvedExpression","l":"get()"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked5d","l":"get(C1, C2, C3, C4, C5)","url":"get(C1,C2,C3,C4,C5)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked4d","l":"get(C1, C2, C3, C4)","url":"get(C1,C2,C3,C4)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked3d","l":"get(C1, C2, C3)","url":"get(C1,C2,C3)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked2d","l":"get(C1, C2)","url":"get(C1,C2)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked1d","l":"get(C1)"},{"p":"org.tensorics.core.commons.options","c":"ImmutableOptionRegistry","l":"get(Class<T1>)","url":"get(java.lang.Class)"},{"p":"org.tensorics.core.commons.options","c":"OptionRegistry","l":"get(Class<T1>)","url":"get(java.lang.Class)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResampling","l":"get(Iterable<?>)","url":"get(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingResampling","l":"get(Iterable<?>)","url":"get(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor","c":"AbstractScalar","l":"get(Object...)","url":"get(java.lang.Object...)"},{"p":"org.tensorics.core.tensor","c":"BroadcastedTensorView","l":"get(Object...)","url":"get(java.lang.Object...)"},{"p":"org.tensorics.core.tensor","c":"Tensoric","l":"get(Object...)","url":"get(java.lang.Object...)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResampling","l":"get(Object...)","url":"get(java.lang.Object...)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingResampling","l":"get(Object...)","url":"get(java.lang.Object...)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"get(Object...)","url":"get(java.lang.Object...)"},{"p":"org.tensorics.core.tensor.specific","c":"ImmutableDoubleArrayBackedTensor","l":"get(Object...)","url":"get(java.lang.Object...)"},{"p":"org.tensorics.core.tensor","c":"AbstractScalar","l":"get(Position)","url":"get(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"BroadcastedTensorView","l":"get(Position)","url":"get(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor","l":"get(Position)","url":"get(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"Tensoric","l":"get(Position)","url":"get(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResampling","l":"get(Position)","url":"get(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingResampling","l":"get(Position)","url":"get(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"get(Position)","url":"get(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.resample","c":"ResamplingStage","l":"get(Position)","url":"get(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.specific","c":"ImmutableDoubleArrayBackedTensor","l":"get(Position)","url":"get(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"TensorPair","l":"get(PositionPair)","url":"get(org.tensorics.core.tensor.PositionPair)"},{"p":"org.tensorics.core.tensor","c":"TensorPair","l":"getAll(Iterable<PositionPair>)","url":"getAll(java.lang.Iterable)"},{"p":"org.tensorics.incubate.function","c":"ExponentialFunction","l":"getAmplitude()"},{"p":"org.tensorics.core.analysis.expression","c":"AnalysisExpression","l":"getChildren()"},{"p":"org.tensorics.core.analysis.expression","c":"AssertionExpression","l":"getChildren()"},{"p":"org.tensorics.core.expressions","c":"BinaryOperationExpression","l":"getChildren()"},{"p":"org.tensorics.core.expressions","c":"BinaryPredicateExpression","l":"getChildren()"},{"p":"org.tensorics.core.expressions","c":"ConversionOperationExpression","l":"getChildren()"},{"p":"org.tensorics.core.expressions","c":"CreationOperationExpression","l":"getChildren()"},{"p":"org.tensorics.core.expressions","c":"IterableResolvingExpression","l":"getChildren()"},{"p":"org.tensorics.core.expressions","c":"Placeholder","l":"getChildren()"},{"p":"org.tensorics.core.expressions","c":"PredicateExpression","l":"getChildren()"},{"p":"org.tensorics.core.expressions","c":"UnaryOperationExpression","l":"getChildren()"},{"p":"org.tensorics.core.functional.expressions","c":"FunctionalExpression","l":"getChildren()"},{"p":"org.tensorics.core.iterable.expressions","c":"BinaryPredicateIterableExpression","l":"getChildren()"},{"p":"org.tensorics.core.iterable.expressions","c":"IterableExpressionToIterable","l":"getChildren()"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression","l":"getChildren()"},{"p":"org.tensorics.core.lang","c":"TensoricScript","l":"getChildren()"},{"p":"org.tensorics.core.tree.domain","c":"Node","l":"getChildren()"},{"p":"org.tensorics.core.tree.domain","c":"ResolvedExpression","l":"getChildren()"},{"p":"org.tensorics.incubate.function","c":"ConstantFunction","l":"getConstant()"},{"p":"org.tensorics.core.resolve.domain","c":"ExceptionHandlingRequest","l":"getContext()"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"getDimensionsFrom(Set<?>)","url":"getDimensionsFrom(java.util.Set)"},{"p":"org.tensorics.core.resolve.domain","c":"ExceptionHandlingRequest","l":"getException()"},{"p":"org.tensorics.core.resolve.resolvers","c":"AbstractResolver","l":"getExpressionClass()"},{"p":"org.tensorics.core.resolve.resolvers","c":"Resolver","l":"getExpressionClass()"},{"p":"org.tensorics.core.lang","c":"TensoricScript","l":"getInternalExpression()"},{"p":"org.tensorics.core.reduction","c":"AbstractLinearDoubleInterpolationStrategy","l":"getInterpolatedValue(Tensor<Double>, C)","url":"getInterpolatedValue(org.tensorics.core.tensor.Tensor,C)"},{"p":"org.tensorics.core.reduction","c":"InterpolationStrategy","l":"getInterpolatedValue(Tensor<V>, C)","url":"getInterpolatedValue(org.tensorics.core.tensor.Tensor,C)"},{"p":"org.tensorics.core.reduction","c":"LinearInterpolation","l":"getInterpolatedValue(Tensor<V>, C)","url":"getInterpolatedValue(org.tensorics.core.tensor.Tensor,C)"},{"p":"org.tensorics.incubate.function","c":"ExponentialFunction","l":"getInverseExponentialConstant()"},{"p":"org.tensorics.core.expressions","c":"BinaryOperationExpression","l":"getLeft()"},{"p":"org.tensorics.core.expressions","c":"BinaryPredicateExpression","l":"getLeft()"},{"p":"org.tensorics.core.iterable.expressions","c":"BinaryPredicateIterableExpression","l":"getLeft()"},{"p":"org.tensorics.core.commons.options","c":"Option","l":"getMarkerInterface()"},{"p":"org.tensorics.core.function.interpolation","c":"InterpolationStrategy","l":"getMarkerInterface()"},{"p":"org.tensorics.core.quantity.options","c":"ImmutableConfidenceLevel","l":"getMarkerInterface()"},{"p":"org.tensorics.core.quantity.options","c":"JScienceQuantificationStrategy","l":"getMarkerInterface()"},{"p":"org.tensorics.core.quantity.options","c":"RequireBothValidStrategy","l":"getMarkerInterface()"},{"p":"org.tensorics.core.quantity.options","c":"ThrowIfOneInvalidStrategy","l":"getMarkerInterface()"},{"p":"org.tensorics.core.quantity.options","c":"UncorrelatedErrorPropagationStrategy","l":"getMarkerInterface()"},{"p":"org.tensorics.core.resolve.options","c":"AbstractExceptionHandlingStrategy","l":"getMarkerInterface()"},{"p":"org.tensorics.core.resolve.options","c":"TakeFirstResolverSelectionStrategy","l":"getMarkerInterface()"},{"p":"org.tensorics.core.tensor.options","c":"BroadcastMissingDimensionsStrategy","l":"getMarkerInterface()"},{"p":"org.tensorics.core.tensor.options","c":"ExactShapesOrOneZeroStrategy","l":"getMarkerInterface()"},{"p":"org.tensorics.core.tensor.options","c":"IntersectionShapingStrategy","l":"getMarkerInterface()"},{"p":"org.tensorics.core.tensor.options","c":"LeftContextPreservedStrategy","l":"getMarkerInterface()"},{"p":"org.tensorics.core.util","c":"SystemState","l":"getMemoryUsageInB()"},{"p":"org.tensorics.core.util","c":"SystemState","l":"getMemoryUsageInKB()"},{"p":"org.tensorics.incubate.function","c":"DiscreteFunction","l":"getName()"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction","l":"getName()"},{"p":"org.tensorics.core.expressions","c":"UnaryOperationExpression","l":"getOperand()"},{"p":"org.tensorics.core.expressions","c":"BinaryOperationExpression","l":"getOperation()"},{"p":"org.tensorics.core.expressions","c":"ConversionOperationExpression","l":"getOperation()"},{"p":"org.tensorics.core.expressions","c":"CreationOperationExpression","l":"getOperation()"},{"p":"org.tensorics.core.expressions","c":"UnaryOperationExpression","l":"getOperation()"},{"p":"org.tensorics.core.reduction","c":"AbstractInterpolationStrategy","l":"getOrderedListOfComparableCoordinate(Tensor<V>, C)","url":"getOrderedListOfComparableCoordinate(org.tensorics.core.tensor.Tensor,C)"},{"p":"org.tensorics.core.tree.domain","c":"Path","l":"getPath()"},{"p":"org.tensorics.core.tree.walking","c":"Trees","l":"getPathsFromChildToAncestor(Node, Node)","url":"getPathsFromChildToAncestor(org.tensorics.core.tree.domain.Node,org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.expressions","c":"BinaryPredicateExpression","l":"getPredicate()"},{"p":"org.tensorics.core.iterable.expressions","c":"BinaryPredicateIterableExpression","l":"getPredicate()"},{"p":"org.tensorics.core.tree.domain","c":"RebuildingContext","l":"getRebuildingMap()"},{"p":"org.tensorics.core.tree.domain","c":"RebuildingContextImpl","l":"getRebuildingMap()"},{"p":"org.tensorics.core.expressions","c":"BinaryOperationExpression","l":"getRight()"},{"p":"org.tensorics.core.expressions","c":"BinaryPredicateExpression","l":"getRight()"},{"p":"org.tensorics.core.iterable.expressions","c":"BinaryPredicateIterableExpression","l":"getRight()"},{"p":"org.tensorics.core.resolve.domain","c":"ExceptionHandlingRequest","l":"getRootNode()"},{"p":"org.tensorics.core.expressions","c":"ConversionOperationExpression","l":"getSource()"},{"p":"org.tensorics.core.resolve.domain","c":"ExceptionHandlingRequest","l":"getThrowingNode()"},{"p":"org.tensorics.core.util","c":"SystemState","l":"getTimeInMillis()"},{"p":"org.tensorics.core.units","c":"JScienceUnit","l":"getUnit()"},{"p":"org.tensorics.core.tree.domain","c":"RebuildingContext","l":"getUpdated(T)"},{"p":"org.tensorics.core.tree.domain","c":"RebuildingContextImpl","l":"getUpdated(T)"},{"p":"org.tensorics.core.tree.domain","c":"RebuildingContext","l":"getUpdatedOrSame(T)"},{"p":"org.tensorics.core.tree.domain","c":"RebuildingContextImpl","l":"getUpdatedOrSame(T)"},{"p":"org.tensorics.incubate.function","c":"DiscreteFunction","l":"getXs()"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction","l":"getXs()"},{"p":"org.tensorics.incubate.function","c":"Functions","l":"getXsIntersection(DiscreteFunction<Double, ?>, DiscreteFunction<Double, ?>)","url":"getXsIntersection(org.tensorics.incubate.function.DiscreteFunction,org.tensorics.incubate.function.DiscreteFunction)"},{"p":"org.tensorics.incubate.function","c":"ConstantFunction","l":"getY(Amount<QX>)","url":"getY(org.jscience.physics.amount.Amount)"},{"p":"org.tensorics.incubate.function","c":"ExponentialFunction","l":"getY(Amount<QX>)","url":"getY(org.jscience.physics.amount.Amount)"},{"p":"org.tensorics.incubate.function","c":"InterpolatedFunction","l":"getY(X)"},{"p":"org.tensorics.incubate.function","c":"KeyValueFunction","l":"getY(X)"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction","l":"getY(X)"},{"p":"org.tensorics.incubate.function","c":"DiscreteFunction","l":"getYs()"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction","l":"getYs()"},{"p":"org.tensorics.incubate.function","c":"DiscreteFunction","l":"getYsErr()"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction","l":"getYsErr()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"greater()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"greater()"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityPedicateRepository","l":"greater()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"greaterOrEqual()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"greaterOrEqual()"},{"p":"org.tensorics.core.analysis.expression","c":"AssertionExpression","l":"handle(Exception)","url":"handle(java.lang.Exception)"},{"p":"org.tensorics.core.tree.domain","c":"ExceptionHandlingNode","l":"handle(Exception)","url":"handle(java.lang.Exception)"},{"p":"org.tensorics.core.resolve.options","c":"ResolvingOptions","l":"handleExceptionsInFirstAncestor()"},{"p":"org.tensorics.core.resolve.options","c":"HandleWithFirstCapableAncestorStrategy","l":"HandleWithFirstCapableAncestorStrategy()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.resolve.options","c":"ExceptionHandlingStrategy","l":"handleWithRootNodeFailingNodeException(ExceptionHandlingRequest)","url":"handleWithRootNodeFailingNodeException(org.tensorics.core.resolve.domain.ExceptionHandlingRequest)"},{"p":"org.tensorics.core.resolve.options","c":"HandleWithFirstCapableAncestorStrategy","l":"handleWithRootNodeFailingNodeException(ExceptionHandlingRequest)","url":"handleWithRootNodeFailingNodeException(org.tensorics.core.resolve.domain.ExceptionHandlingRequest)"},{"p":"org.tensorics.core.resolve.options","c":"RethrowExceptionHandlingStrategy","l":"handleWithRootNodeFailingNodeException(ExceptionHandlingRequest)","url":"handleWithRootNodeFailingNodeException(org.tensorics.core.resolve.domain.ExceptionHandlingRequest)"},{"p":"org.tensorics.core.analysis","c":"AnalysisResult","l":"hashCode()"},{"p":"org.tensorics.core.analysis","c":"AssertionResult","l":"hashCode()"},{"p":"org.tensorics.core.analysis.expression","c":"AnalysisExpression","l":"hashCode()"},{"p":"org.tensorics.core.analysis.expression","c":"AssertionExpression","l":"hashCode()"},{"p":"org.tensorics.core.commons.util","c":"AbstractPair","l":"hashCode()"},{"p":"org.tensorics.core.expressions","c":"BinaryOperationExpression","l":"hashCode()"},{"p":"org.tensorics.core.expressions","c":"BinaryPredicateExpression","l":"hashCode()"},{"p":"org.tensorics.core.expressions","c":"ConversionOperationExpression","l":"hashCode()"},{"p":"org.tensorics.core.expressions","c":"CreationOperationExpression","l":"hashCode()"},{"p":"org.tensorics.core.expressions","c":"IterableResolvingExpression","l":"hashCode()"},{"p":"org.tensorics.core.expressions","c":"LatestOfExpression","l":"hashCode()"},{"p":"org.tensorics.core.expressions","c":"Placeholder","l":"hashCode()"},{"p":"org.tensorics.core.expressions","c":"PredicateExpression","l":"hashCode()"},{"p":"org.tensorics.core.expressions","c":"UnaryOperationExpression","l":"hashCode()"},{"p":"org.tensorics.core.fields.doubles","c":"AbstractOrderedField","l":"hashCode()"},{"p":"org.tensorics.core.function","c":"MapBackedDiscreteFunction","l":"hashCode()"},{"p":"org.tensorics.core.function.operations","c":"AbstractDiscreteFunctionBinaryOperation","l":"hashCode()"},{"p":"org.tensorics.core.functional.expressions","c":"FunctionalExpression","l":"hashCode()"},{"p":"org.tensorics.core.iterable.expressions","c":"BinaryPredicateIterableExpression","l":"hashCode()"},{"p":"org.tensorics.core.iterable.expressions","c":"IterableExpressionToIterable","l":"hashCode()"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression","l":"hashCode()"},{"p":"org.tensorics.core.lang","c":"EnvironmentImpl","l":"hashCode()"},{"p":"org.tensorics.core.lang","c":"TensoricScript","l":"hashCode()"},{"p":"org.tensorics.core.math.structures.grouplike","c":"AbstractAbelianGroup","l":"hashCode()"},{"p":"org.tensorics.core.quantity","c":"ImmutableErronousValue","l":"hashCode()"},{"p":"org.tensorics.core.quantity","c":"ImmutableQuantifiedValue","l":"hashCode()"},{"p":"org.tensorics.core.quantity.conditions","c":"AbstractQuantityStatisticPredicate","l":"hashCode()"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityGreaterPredicate","l":"hashCode()"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityLessPredicate","l":"hashCode()"},{"p":"org.tensorics.core.quantity.operations","c":"AbstractQuantityOperation","l":"hashCode()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityBinaryOperation","l":"hashCode()"},{"p":"org.tensorics.core.quantity.options","c":"ImmutableConfidenceLevel","l":"hashCode()"},{"p":"org.tensorics.core.quantity.options","c":"JScienceQuantificationStrategy","l":"hashCode()"},{"p":"org.tensorics.core.quantity.options","c":"OperandPair","l":"hashCode()"},{"p":"org.tensorics.core.resolve.domain","c":"DetailedExpressionResult","l":"hashCode()"},{"p":"org.tensorics.core.tensor","c":"AbstractTensor","l":"hashCode()"},{"p":"org.tensorics.core.tensor","c":"Position","l":"hashCode()"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"hashCode()"},{"p":"org.tensorics.core.tensor.coordinates","c":"PositionOrdering","l":"hashCode()"},{"p":"org.tensorics.core.tensor.operations","c":"ElementBinaryFunction","l":"hashCode()"},{"p":"org.tensorics.core.tensor.operations","c":"ElementUnaryOperation","l":"hashCode()"},{"p":"org.tensorics.core.tensor.operations","c":"FunctionTensorCreationOperation","l":"hashCode()"},{"p":"org.tensorics.core.tensor.operations","c":"InnerTensorOperation","l":"hashCode()"},{"p":"org.tensorics.core.tensor.variance","c":"Covariant","l":"hashCode()"},{"p":"org.tensorics.core.tensorbacked","c":"AbstractTensorbacked","l":"hashCode()"},{"p":"org.tensorics.core.tensorbacked.operations","c":"ElementTensorBackedUnaryOperation","l":"hashCode()"},{"p":"org.tensorics.core.tree.domain","c":"ResolvedExpression","l":"hashCode()"},{"p":"org.tensorics.core.units","c":"JScienceUnit","l":"hashCode()"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"hasSameDimensionsAs(Shape)","url":"hasSameDimensionsAs(org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.commons.operations","c":"Conversions","l":"identity()"},{"p":"org.tensorics.core.math.structures.grouplike","c":"AbstractAbelianGroup","l":"identity()"},{"p":"org.tensorics.core.math.structures.grouplike","c":"Monoid","l":"identity()"},{"p":"org.tensorics.core.function","c":"IllegalDiscreteFunctionUsageException","l":"IllegalDiscreteFunctionUsageException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.tensorics.incubate.function","c":"IllegalDiscreteFunctionUsageException","l":"IllegalDiscreteFunctionUsageException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"immutableBuilderFrom(Class<TB>, Class<B>)","url":"immutableBuilderFrom(java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.quantity.options","c":"ImmutableConfidenceLevel","l":"ImmutableConfidenceLevel(S)","url":"%3Cinit%3E(S)"},{"p":"org.tensorics.core.tensor.specific","c":"ImmutableDoubleArrayBackedTensor","l":"ImmutableDoubleArrayBackedTensor(ImmutableDoubleArrayBackedTensor.Builder)","url":"%3Cinit%3E(org.tensorics.core.tensor.specific.ImmutableDoubleArrayBackedTensor.Builder)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions.OngoingLambdaExpressionCreation","l":"in(F)"},{"p":"org.tensorics.core.tensor.specific","c":"PositionIndexer","l":"indexFor(Position)","url":"indexFor(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFlattening","l":"inDirectionOf(Class<?>)","url":"inDirectionOf(java.lang.Class)"},{"p":"org.tensorics.core.tensor.operations","c":"OngoingMapOut","l":"inDirectionOf(Class<? extends C1>)","url":"inDirectionOf(java.lang.Class)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFlattening","l":"inDirectionsOf(Class<?>...)","url":"inDirectionsOf(java.lang.Class...)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFlattening","l":"inDirectionsOf(Set<Class<?>>)","url":"inDirectionsOf(java.util.Set)"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"initialCheckForClassRelations(Class<?>, Iterable<Class<?>>)","url":"initialCheckForClassRelations(java.lang.Class,java.lang.Iterable)"},{"p":"org.tensorics.core.tensor.operations","c":"InnerTensorOperation","l":"InnerTensorOperation(BinaryOperation<V>, IterableOperation<V>, OptionRegistry<ManipulationOption>)","url":"%3Cinit%3E(org.tensorics.core.math.operations.BinaryOperation,org.tensorics.core.iterable.operations.IterableOperation,org.tensorics.core.commons.options.OptionRegistry)"},{"p":"org.tensorics.core.util","c":"SingleArgumentInvokableInstantiator","l":"instanceClass"},{"p":"org.tensorics.core.tensor.variance","c":"Covariants","l":"instantiatorFor(Class<CC>)","url":"instantiatorFor(java.lang.Class)"},{"p":"org.tensorics.core.util","c":"Instantiators","l":"instantiatorFor(Class<T>)","url":"instantiatorFor(java.lang.Class)"},{"p":"org.tensorics.incubate.function","c":"Functions","l":"integrate(DiscreteFunction<Double, Double>, double, double)","url":"integrate(org.tensorics.incubate.function.DiscreteFunction,double,double)"},{"p":"org.tensorics.incubate.function","c":"Functions","l":"integrate(DiscreteFunction<Double, Double>)","url":"integrate(org.tensorics.incubate.function.DiscreteFunction)"},{"p":"org.tensorics.incubate.function","c":"LinearInterpolationStrategy","l":"interpolate(Double, DiscreteFunction<Double, Double>)","url":"interpolate(java.lang.Double,org.tensorics.incubate.function.DiscreteFunction)"},{"p":"org.tensorics.core.function.interpolation","c":"InterpolationStrategy","l":"interpolate(X, DiscreteFunction<X, Y>, Conversion<X, Y>, Comparator<X>)","url":"interpolate(X,org.tensorics.core.function.DiscreteFunction,org.tensorics.core.commons.operations.Conversion,java.util.Comparator)"},{"p":"org.tensorics.core.function.interpolation","c":"LinearInterpolationStrategy","l":"interpolate(X, DiscreteFunction<X, Y>, Conversion<X, Y>, Comparator<X>)","url":"interpolate(X,org.tensorics.core.function.DiscreteFunction,org.tensorics.core.commons.operations.Conversion,java.util.Comparator)"},{"p":"org.tensorics.incubate.function","c":"InterpolationStrategy","l":"interpolate(X, DiscreteFunction<X, Y>)","url":"interpolate(X,org.tensorics.incubate.function.DiscreteFunction)"},{"p":"org.tensorics.core.function","c":"MathFunctions","l":"interpolated(DiscreteFunction<X, Y>, InterpolationStrategy<Y>, Conversion<X, Y>, Comparator<X>)","url":"interpolated(org.tensorics.core.function.DiscreteFunction,org.tensorics.core.function.interpolation.InterpolationStrategy,org.tensorics.core.commons.operations.Conversion,java.util.Comparator)"},{"p":"org.tensorics.core.reduction","c":"InterpolatedSlicing","l":"InterpolatedSlicing(C, InterpolationStrategy<C, E>, Tensor<E>)","url":"%3Cinit%3E(C,org.tensorics.core.reduction.InterpolationStrategy,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingInterpolation","l":"interpolatingWith(InterpolationStrategy<C, E>)","url":"interpolatingWith(org.tensorics.core.reduction.InterpolationStrategy)"},{"p":"org.tensorics.core.tensor","c":"Shapes","l":"intersection(Iterable<Shape>)","url":"intersection(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor","c":"Shapes","l":"intersection(Shape, Shape)","url":"intersection(org.tensorics.core.tensor.Shape,org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingOrderedFlattening","l":"intoTensorOfKeyLists()"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingOrderedFlattening","l":"intoTensorOfLists()"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDimensionFlattening","l":"intoTensorOfSets()"},{"p":"org.tensorics.core.iterable.lang","c":"OngoingQuantityIterableValueExtraction","l":"inUnitsOf(Unit)","url":"inUnitsOf(org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantityValueExtraction","l":"inUnitsOf(Unit)","url":"inUnitsOf(org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingQuantityTensorValueExtraction","l":"inUnitsOf(Unit)","url":"inUnitsOf(org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.iterable.lang","c":"OngoingQuantityIterableValueExtraction","l":"inUnitsOf(Unit<?>)","url":"inUnitsOf(javax.measure.unit.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantityValueExtraction","l":"inUnitsOf(Unit<?>)","url":"inUnitsOf(javax.measure.unit.Unit)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingQuantityTensorValueExtraction","l":"inUnitsOf(Unit<?>)","url":"inUnitsOf(javax.measure.unit.Unit)"},{"p":"org.tensorics.core.math","c":"Operations","l":"inverseBinaryFor(Group<T>)","url":"inverseBinaryFor(org.tensorics.core.math.structures.grouplike.Group)"},{"p":"org.tensorics.core.fields.doubles","c":"DoubleStatistics","l":"inverseGaussianCumulativeDistributionFunction(double)"},{"p":"org.tensorics.core.quantity.conditions","c":"AbstractQuantityStatisticPredicate","l":"inverseGaussianCumulativeDistributionFunction(S)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"inverseOf(Double)","url":"inverseOf(java.lang.Double)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"inverseOf(Expression<Double>)","url":"inverseOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantityExpressionSupport","l":"inverseOf(Expression<QuantifiedValue<V>>)","url":"inverseOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"inverseOf(Expression<V>)","url":"inverseOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"inverseOf(Expression<V>)","url":"inverseOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"inverseOf(QuantifiedValue<Double>)","url":"inverseOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"inverseOf(QuantifiedValue<V>)","url":"inverseOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"inverseOf(QuantifiedValue<V>)","url":"inverseOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantityExpressionSupport","l":"inverseOf(QuantifiedValue<V>)","url":"inverseOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"inverseOf(QuantifiedValue<V>)","url":"inverseOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.commons.lang","c":"BasicOperationSupport","l":"inverseOf(S)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"inverseOf(V)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"inverseOf(V)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"inverseOf(V)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"inverseOf(V)"},{"p":"org.tensorics.core.math.structures.grouplike","c":"AbstractAbelianGroup","l":"inversion()"},{"p":"org.tensorics.core.math.structures.grouplike","c":"Group","l":"inversion()"},{"p":"org.tensorics.core.math","c":"BinaryPredicates","l":"invert(BinaryPredicate<T>)","url":"invert(org.tensorics.core.math.predicates.BinaryPredicate)"},{"p":"org.tensorics.core.util","c":"SingleArgumentConstructorInstantiator","l":"invokableFor(Class<A>)","url":"invokableFor(java.lang.Class)"},{"p":"org.tensorics.core.util","c":"SingleArgumentFactoryMethodInstantiator","l":"invokableFor(Class<A>)","url":"invokableFor(java.lang.Class)"},{"p":"org.tensorics.core.util","c":"SingleArgumentInvokableInstantiator","l":"invokableFor(Class<A>)","url":"invokableFor(java.lang.Class)"},{"p":"org.tensorics.core.util","c":"Reflections","l":"invokeUnchecked(Object, Method)","url":"invokeUnchecked(java.lang.Object,java.lang.reflect.Method)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingCondition","l":"is(Expression<Predicate<T>>)","url":"is(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingCondition","l":"is(Predicate<T>)","url":"is(java.util.function.Predicate)"},{"p":"org.tensorics.core.util","c":"JavaVersions","l":"isAtLeastJava11()"},{"p":"org.tensorics.core.tensor.variance","c":"Covariants","l":"isCoContraPair(Class<?>, Class<?>)","url":"isCoContraPair(java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.tensor","c":"Position","l":"isConsistentWith(Set<Class<?>>)","url":"isConsistentWith(java.util.Set)"},{"p":"org.tensorics.core.tensor.variance","c":"Covariants","l":"isContravariant(Class<?>)","url":"isContravariant(java.lang.Class)"},{"p":"org.tensorics.core.tensor.variance","c":"Covariants","l":"isCovariant(Class<?>)","url":"isCovariant(java.lang.Class)"},{"p":"org.tensorics.core.math.predicates","c":"IsEqualTo","l":"isEqualTo()"},{"p":"org.tensorics.core.math.predicates","c":"IsEqualTo","l":"IsEqualTo()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryPredicate","l":"isEqualTo(Expression<S>)","url":"isEqualTo(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingCondition","l":"isEqualTo(Expression<T>)","url":"isEqualTo(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingPrecondition","l":"isEqualTo(Expression<T>)","url":"isEqualTo(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"OngoingBasicDeferredBinaryPredicate","l":"isEqualTo(Expression<T>)","url":"isEqualTo(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryPredicate","l":"isEqualTo(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingScalarBinaryPredicate","l":"isEqualTo(S)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingCondition","l":"isEqualTo(T)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingPrecondition","l":"isEqualTo(T)"},{"p":"org.tensorics.core.lang","c":"OngoingBasicDeferredBinaryPredicate","l":"isEqualTo(T)"},{"p":"org.tensorics.core.expressions","c":"IsEqualToExpression","l":"IsEqualToExpression(Expression<T>, Expression<T>)","url":"%3Cinit%3E(org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingBooleanCondition","l":"isFalse()"},{"p":"org.tensorics.core.util","c":"Reflections","l":"isFinalField(Field)","url":"isFinalField(java.lang.reflect.Field)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryPredicate","l":"isGreaterOrEqualThan(Expression<S>)","url":"isGreaterOrEqualThan(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryPredicate","l":"isGreaterOrEqualThan(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingScalarBinaryPredicate","l":"isGreaterOrEqualTo(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryPredicate","l":"isGreaterThan(Expression<S>)","url":"isGreaterThan(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarBinaryPredicate","l":"isGreaterThan(QuantifiedValue<S>)","url":"isGreaterThan(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryPredicate","l":"isGreaterThan(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingScalarBinaryPredicate","l":"isGreaterThan(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryPredicate","l":"isLessOrEqualThan(Expression<S>)","url":"isLessOrEqualThan(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryPredicate","l":"isLessOrEqualThan(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingScalarBinaryPredicate","l":"isLessOrEqualTo(S)"},{"p":"org.tensorics.core.iterable.lang","c":"OngoingDeferredIterableBinaryPredicate","l":"isLessThan(Expression<S>)","url":"isLessThan(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryPredicate","l":"isLessThan(Expression<S>)","url":"isLessThan(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarBinaryPredicate","l":"isLessThan(QuantifiedValue<S>)","url":"isLessThan(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.iterable.lang","c":"OngoingDeferredIterableBinaryPredicate","l":"isLessThan(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryPredicate","l":"isLessThan(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingScalarBinaryPredicate","l":"isLessThan(S)"},{"p":"org.tensorics.core.expressions","c":"IsNotEqualExpression","l":"IsNotEqualExpression(Expression<T>, Expression<T>)","url":"%3Cinit%3E(org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.math.predicates","c":"IsNotEqualTo","l":"isNotEqualTo()"},{"p":"org.tensorics.core.math.predicates","c":"IsNotEqualTo","l":"IsNotEqualTo()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingCondition","l":"isNotEqualTo(Expression<T>)","url":"isNotEqualTo(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"OngoingBasicDeferredBinaryPredicate","l":"isNotEqualTo(Expression<T>)","url":"isNotEqualTo(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingCondition","l":"isNotEqualTo(T)"},{"p":"org.tensorics.core.lang","c":"OngoingBasicDeferredBinaryPredicate","l":"isNotEqualTo(T)"},{"p":"org.tensorics.core.util","c":"Reflections","l":"isPublicConstant(Field)","url":"isPublicConstant(java.lang.reflect.Field)"},{"p":"org.tensorics.core.util","c":"Reflections","l":"isPublicField(Field)","url":"isPublicField(java.lang.reflect.Field)"},{"p":"org.tensorics.core.lang","c":"TensoricScript","l":"isResolved()"},{"p":"org.tensorics.core.tree.domain","c":"AbstractDeferredExpression","l":"isResolved()"},{"p":"org.tensorics.core.tree.domain","c":"Expression","l":"isResolved()"},{"p":"org.tensorics.core.tree.domain","c":"ResolvedExpression","l":"isResolved()"},{"p":"org.tensorics.core.util","c":"Reflections","l":"isSerialVersionUid(Field)","url":"isSerialVersionUid(java.lang.reflect.Field)"},{"p":"org.tensorics.core.util","c":"Reflections","l":"isStaticField(Field)","url":"isStaticField(java.lang.reflect.Field)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAnyBooleanCondition","l":"isTrue()"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingBooleanCondition","l":"isTrue()"},{"p":"org.tensorics.core.iterable.operations","c":"IterableAverage","l":"IterableAverage(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression","l":"iterableExpression()"},{"p":"org.tensorics.core.iterable.expressions","c":"IterableExpressionToIterable","l":"IterableExpressionToIterable(Iterable<? extends Expression<T>>)","url":"%3Cinit%3E(java.lang.Iterable)"},{"p":"org.tensorics.core.resolve.resolvers","c":"IterableExpressionToIterableResolver","l":"IterableExpressionToIterableResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.iterable.expressions","c":"IterableOperationExpression","l":"IterableOperationExpression(Conversion<Iterable<T>, T>, Expression<? extends Iterable<T>>)","url":"%3Cinit%3E(org.tensorics.core.commons.operations.Conversion,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.iterable.lang","c":"IterableOperationRepository","l":"IterableOperationRepository(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.expressions","c":"IterableResolvingExpression","l":"IterableResolvingExpression(Iterable<Expression<T>>)","url":"%3Cinit%3E(java.lang.Iterable)"},{"p":"org.tensorics.core.resolve.resolvers","c":"IterableResolvingExpressionResolver","l":"IterableResolvingExpressionResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.iterable.operations","c":"IterableRms","l":"IterableRms(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableSize","l":"IterableSize(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableStd","l":"IterableStd(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableSum","l":"IterableSum(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableSumOfSquares","l":"IterableSumOfSquares(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableVar","l":"IterableVar(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.quantity.options","c":"JScienceQuantificationStrategy","l":"JScienceQuantificationStrategy(Cheating<T>)","url":"%3Cinit%3E(org.tensorics.core.math.Cheating)"},{"p":"org.tensorics.core.analysis","c":"ConditionBuilder","l":"key()"},{"p":"org.tensorics.core.analysis.expression","c":"AssertionExpression","l":"key()"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions","l":"lastOf(Expression<? extends Iterable<T>>)","url":"lastOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.expressions","c":"LatestOfExpression","l":"latestOf(Expression<? extends Iterable<T>>)","url":"latestOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.commons.util","c":"AbstractPair","l":"left()"},{"p":"org.tensorics.core.quantity.options","c":"OperandPair","l":"left()"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPair","l":"left()"},{"p":"org.tensorics.core.tensor.options","c":"LeftContextPreservedStrategy","l":"LeftContextPreservedStrategy()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPairs","l":"leftDimensionsIn(Iterable<CoContraDimensionPair>)","url":"leftDimensionsIn(java.lang.Iterable)"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"less()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"less()"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityPedicateRepository","l":"less()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"lessOrEqual()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"lessOrEqual()"},{"p":"org.tensorics.core.fields.doubles","c":"AbstractOrderedField","l":"lessOrEqualPredicate()"},{"p":"org.tensorics.core.math.structures.ringlike","c":"OrderedField","l":"lessOrEqualPredicate()"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResampling","l":"linear(Class<C>, Function<C, V>)","url":"linear(java.lang.Class,java.util.function.Function)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResamplingStart","l":"linear(Class<C>, Function<C, V>)","url":"linear(java.lang.Class,java.util.function.Function)"},{"p":"org.tensorics.core.reduction","c":"LinearInterpolation","l":"LinearInterpolation(ExtendedField<V>, Function<C, V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField,java.util.function.Function)"},{"p":"org.tensorics.core.tensor.resample.impl","c":"LinearInterpolationResampler","l":"LinearInterpolationResampler(ExtendedField<V>, Function<C, V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField,java.util.function.Function)"},{"p":"org.tensorics.incubate.function","c":"LinearInterpolationStrategy","l":"LinearInterpolationStrategy()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.function.interpolation","c":"LinearInterpolationStrategy","l":"LinearInterpolationStrategy(ExtendedField<Y>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"list(List<C>, Object...)","url":"list(java.util.List,java.lang.Object...)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"list(List<C>, Position)","url":"list(java.util.List,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.resolve.resolvers","c":"ListBackedResolverRepository","l":"ListBackedResolverRepository()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tree.walking","c":"LoopDetectedException","l":"LoopDetectedException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"map(Class<C>, Object...)","url":"map(java.lang.Class,java.lang.Object...)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"map(Class<C>, Position)","url":"map(java.lang.Class,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"map(Tensor<S>, BiFunction<Position, S, T>)","url":"map(org.tensorics.core.tensor.Tensor,java.util.function.BiFunction)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"map(Tensor<S>, Function<S, T>)","url":"map(org.tensorics.core.tensor.Tensor,java.util.function.Function)"},{"p":"org.tensorics.core.math","c":"Operations","l":"mapAll(Multimap<K, ValuePair<V>>, BinaryOperation<V>)","url":"mapAll(com.google.common.collect.Multimap,org.tensorics.core.math.operations.BinaryOperation)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"mapByStripping(Iterable<Position>, Set<Class<?>>)","url":"mapByStripping(java.lang.Iterable,java.util.Set)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"mapFrom(Tensor<V>)","url":"mapFrom(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.operations","c":"TensorInternals","l":"mapFrom(Tensor<V>)","url":"mapFrom(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"mapOf(Iterable<? extends C>)","url":"mapOf(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor.operations","c":"TensorInternals","l":"mapOut(Tensor<T>)","url":"mapOut(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPairs","l":"mapOutByContravariantPart(List<CoContraDimensionPair>)","url":"mapOutByContravariantPart(java.util.List)"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"mapToAnEntry(Class<C>, Iterable<Class<?>>)","url":"mapToAnEntry(java.lang.Class,java.lang.Iterable)"},{"p":"org.tensorics.core.tensor","c":"TensorPair","l":"mapValues(Multimap<K, PositionPair>)","url":"mapValues(com.google.common.collect.Multimap)"},{"p":"org.tensorics.core.util.chains","c":"Chains.AbstractOngoingChain","l":"matchCasesFrom(Class<?>)","url":"matchCasesFrom(java.lang.Class)"},{"p":"org.tensorics.core.util.chains","c":"Chains.AbstractOngoingChain","l":"matchCasesFrom(Class<CT>, Supplier<CT>)","url":"matchCasesFrom(java.lang.Class,java.util.function.Supplier)"},{"p":"org.tensorics.core.testing.hamcrest","c":"ScalarIsCloseTo","l":"matchesSafely(S)"},{"p":"org.tensorics.core.testing.hamcrest","c":"TensorIsCloseTo","l":"matchesSafely(Tensor<S>, Description)","url":"matchesSafely(org.tensorics.core.tensor.Tensor,org.hamcrest.Description)"},{"p":"org.tensorics.core.testing.hamcrest","c":"AllElementsEqualTo","l":"matchesSafely(Tensor<V>)","url":"matchesSafely(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.function","c":"MathFunctions","l":"MathFunctions()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.quantity.conditions","c":"AbstractQuantityStatisticPredicate","l":"mathsEnvironment"},{"p":"org.tensorics.core.util","c":"SystemState","l":"memoryUsageInByte()"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"merge(Iterable<Tensor<E>>)","url":"merge(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"merge(Iterable<Tensor<E>>)","url":"merge(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"mergeContextIntoShape(Tensor<E>)","url":"mergeContextIntoShape(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"mergeContextIntoShape(Tensor<V>)","url":"mergeContextIntoShape(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tree.domain","c":"Contexts","l":"mergeContextsOrdered(Iterable<ResolvingContext>)","url":"mergeContextsOrdered(java.lang.Iterable)"},{"p":"org.tensorics.core.tree.domain","c":"Contexts","l":"mergeContextsOrdered(ResolvingContext...)","url":"mergeContextsOrdered(org.tensorics.core.tree.domain.ResolvingContext...)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"mergeTo(Iterable<TB>, Class<TBOUT>)","url":"mergeTo(java.lang.Iterable,java.lang.Class)"},{"p":"org.tensorics.core.function.lang","c":"OngoingDiscreteFunctionBinaryOperation","l":"minus(DiscreteFunction<X, Y>)","url":"minus(org.tensorics.core.function.DiscreteFunction)"},{"p":"org.tensorics.core.function.lang","c":"OngoingDeferredDiscreteFunctionBinaryOperation","l":"minus(Expression<DiscreteFunction<X, Y>>)","url":"minus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"minus(Expression<QuantifiedValue<S>>)","url":"minus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"minus(Expression<S>)","url":"minus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingDeferredQuantifiedTensorBackedOperation","l":"minus(Expression<TB>)","url":"minus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingDeferredTensorBackedOperation","l":"minus(Expression<TB>)","url":"minus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredQuantifiedTensorOperation","l":"minus(Expression<Tensor<QuantifiedValue<S>>>)","url":"minus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredTensorOperation","l":"minus(Expression<Tensor<V>>)","url":"minus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"minus(QTB)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"minus(QuantifiedValue<S>)","url":"minus(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"minus(QuantifiedValue<S>)","url":"minus(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"minus(S, Unit)","url":"minus(S,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"minus(S, Unit)","url":"minus(S,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"minus(S, Unit<?>)","url":"minus(S,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"minus(S, Unit<?>)","url":"minus(S,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"minus(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingScalarBinaryOperation","l":"minus(S)"},{"p":"org.tensorics.core.util","c":"SystemState","l":"minus(SystemState)","url":"minus(org.tensorics.core.util.SystemState)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingBinaryOperation","l":"minus(T)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingOperation","l":"minus(T)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingDeferredQuantifiedTensorBackedOperation","l":"minus(TB)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingDeferredTensorBackedOperation","l":"minus(TB)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorBackedOperation","l":"minus(TB)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredQuantifiedTensorOperation","l":"minus(Tensor<QuantifiedValue<S>>)","url":"minus(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingQuantifiedTensorOperation","l":"minus(Tensor<QuantifiedValue<S>>)","url":"minus(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorOperation","l":"minus(Tensor<V>)","url":"minus(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"minusQT(Tensor<QuantifiedValue<S>>)","url":"minusQT(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorBackedOperation","l":"minusT(Tensor<V>)","url":"minusT(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredQuantifiedTensorOperation","l":"minusV(QuantifiedValue<S>)","url":"minusV(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingQuantifiedTensorOperation","l":"minusV(QuantifiedValue<S>)","url":"minusV(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"minusV(QuantifiedValue<S>)","url":"minusV(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingOperation","l":"minusV(V)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredTensorOperation","l":"minusV(V)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorOperation","l":"minusV(V)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorBackedOperation","l":"minusV(V)"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression","l":"mode()"},{"p":"org.tensorics.core.function.operations","c":"DiscreteFunctionOperationRepository","l":"multiplication()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"multiplication()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"multiplication()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"multiplication()"},{"p":"org.tensorics.core.fields.doubles","c":"AbstractOrderedField","l":"multiplicationStructure()"},{"p":"org.tensorics.core.math.structures.ringlike","c":"Field","l":"multiplicationStructure()"},{"p":"org.tensorics.core.math.structures.ringlike","c":"RinglikeStructure","l":"multiplicationStructure()"},{"p":"org.tensorics.core.math.structures.ringlike","c":"Semiring","l":"multiplicationStructure()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"multiplicativeInversion()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"multiplicativeInversion()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"multiplicativeInversion()"},{"p":"org.tensorics.core.quantity.options","c":"JScienceQuantificationStrategy","l":"multiply(Unit, Unit)","url":"multiply(org.tensorics.core.units.Unit,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.quantity.options","c":"QuantificationStrategy","l":"multiply(Unit, Unit)","url":"multiply(org.tensorics.core.units.Unit,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.analysis","c":"ConditionBuilder","l":"name()"},{"p":"org.tensorics.core.analysis.expression","c":"AssertionExpression","l":"name()"},{"p":"org.tensorics.core.commons.util","c":"Named","l":"name()"},{"p":"org.tensorics.core.expressions","c":"Placeholder","l":"name()"},{"p":"org.tensorics.core.util.names","c":"ImmutableNameRepository","l":"nameFor(Object)","url":"nameFor(java.lang.Object)"},{"p":"org.tensorics.core.util.names","c":"NameRepository","l":"nameFor(Object)","url":"nameFor(java.lang.Object)"},{"p":"org.tensorics.core.util.names","c":"Names","l":"Names()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.booleans.operations","c":"BooleanOperations","l":"nand()"},{"p":"org.tensorics.core.booleans.operations","c":"BooleanTensorOperationsRepository","l":"nand()"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingBooleanScalarOperation","l":"nand(Boolean)","url":"nand(java.lang.Boolean)"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingBooleanTensorOperation","l":"nand(Tensor<Boolean>)","url":"nand(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"negativeOf(Double)","url":"negativeOf(java.lang.Double)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"negativeOf(Expression<Double>)","url":"negativeOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantityExpressionSupport","l":"negativeOf(Expression<QuantifiedValue<V>>)","url":"negativeOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"negativeOf(Expression<V>)","url":"negativeOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"negativeOf(Expression<V>)","url":"negativeOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"QuantityTensorbackedSupport","l":"negativeOf(QTB)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"negativeOf(QuantifiedValue<Double>)","url":"negativeOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"negativeOf(QuantifiedValue<V>)","url":"negativeOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"negativeOf(QuantifiedValue<V>)","url":"negativeOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantityExpressionSupport","l":"negativeOf(QuantifiedValue<V>)","url":"negativeOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"negativeOf(QuantifiedValue<V>)","url":"negativeOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.commons.lang","c":"BasicOperationSupport","l":"negativeOf(S)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"negativeOf(TB)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"negativeOf(TB)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"TensorbackedSupport","l":"negativeOf(TB)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"negativeOf(Tensor<Double>)","url":"negativeOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"negativeOf(Tensor<V>)","url":"negativeOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorSupport","l":"negativeOf(Tensor<V>)","url":"negativeOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"negativeOf(V)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"negativeOf(V)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"negativeOf(V)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"negativeOf(V)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"negativeOfQ(TB)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"negativeOfQ(TB)"},{"p":"org.tensorics.core.tree.domain","c":"Contexts","l":"newRebuildingContext()"},{"p":"org.tensorics.core.tree.domain","c":"Contexts","l":"newResolvingContext()"},{"p":"org.tensorics.core.tree.walking","c":"NoMatchingNodeFoundException","l":"NoMatchingNodeFoundException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.tensorics.core.analysis","c":"AssertionStatus","l":"NONAPPLICABLE"},{"p":"org.tensorics.core.util","c":"MoreMultisets","l":"nonUniqueElementsOf(Multiset<T>)","url":"nonUniqueElementsOf(com.google.common.collect.Multiset)"},{"p":"org.tensorics.core.math","c":"BinaryPredicates","l":"not(BinaryPredicate<T>)","url":"not(org.tensorics.core.math.predicates.BinaryPredicate)"},{"p":"org.tensorics.core.analysis.util","c":"Predicates","l":"not(Predicate<T>)","url":"not(java.util.function.Predicate)"},{"p":"org.tensorics.core.functional","c":"FiniteArgumentFunction","l":"numberOfArgs()"},{"p":"org.tensorics.core.functional","c":"Func1","l":"numberOfArgs()"},{"p":"org.tensorics.core.functional","c":"Func2","l":"numberOfArgs()"},{"p":"org.tensorics.core.functional","c":"Func3","l":"numberOfArgs()"},{"p":"org.tensorics.core.functional","c":"Func4","l":"numberOfArgs()"},{"p":"org.tensorics.core.functional","c":"Func5","l":"numberOfArgs()"},{"p":"org.tensorics.core.functional","c":"Func6","l":"numberOfArgs()"},{"p":"org.tensorics.core.functional","c":"Func7","l":"numberOfArgs()"},{"p":"org.tensorics.core.functional","c":"Func8","l":"numberOfArgs()"},{"p":"org.tensorics.core.functional","c":"Func9","l":"numberOfArgs()"},{"p":"org.tensorics.incubate.function","c":"ConstantFunction","l":"of(Amount<QY>)","url":"of(org.jscience.physics.amount.Amount)"},{"p":"org.tensorics.core.analysis","c":"AssertionResult","l":"of(AssertionStatus)","url":"of(org.tensorics.core.analysis.AssertionStatus)"},{"p":"org.tensorics.core.booleans.operations","c":"TensorChangeDetectionOperation","l":"of(Class<C>, Comparator<? super C>)","url":"of(java.lang.Class,java.util.Comparator)"},{"p":"org.tensorics.core.booleans.operations","c":"TensorChangeDetectionOperation","l":"of(Class<C>)","url":"of(java.lang.Class)"},{"p":"org.tensorics.core.tensor.coordinates","c":"PositionOrdering","l":"of(Class<T>, Comparator<T>)","url":"of(java.lang.Class,java.util.Comparator)"},{"p":"org.tensorics.core.tensor.coordinates","c":"PositionOrdering","l":"of(Class<T>)","url":"of(java.lang.Class)"},{"p":"org.tensorics.core.commons.options","c":"ImmutableOptionRegistry","l":"of(Collection<T>)","url":"of(java.util.Collection)"},{"p":"org.tensorics.incubate.function","c":"InterpolatedFunction","l":"of(DiscreteFunction<X, Y>, InterpolationStrategy<X, Y>)","url":"of(org.tensorics.incubate.function.DiscreteFunction,org.tensorics.incubate.function.InterpolationStrategy)"},{"p":"org.tensorics.core.resolve.domain","c":"DetailedExpressionResult","l":"of(E, R, ResolvingContext)","url":"of(E,R,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.lang","c":"EnvironmentImpl","l":"of(ExtendedField<V>, OptionRegistry<ManipulationOption>)","url":"of(org.tensorics.core.math.ExtendedField,org.tensorics.core.commons.options.OptionRegistry)"},{"p":"org.tensorics.core.tensor","c":"Position","l":"of(Iterable<?>)","url":"of(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"of(Iterable<Position>)","url":"of(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor","c":"Position","l":"of(Object...)","url":"of(java.lang.Object...)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"of(Position...)","url":"of(org.tensorics.core.tensor.Position...)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"of(Set<Class<?>>, Iterable<Position>)","url":"of(java.util.Set,java.lang.Iterable)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"of(Set<Class<?>>, Position...)","url":"of(java.util.Set,org.tensorics.core.tensor.Position...)"},{"p":"org.tensorics.core.tree.domain","c":"ResolvedExpression","l":"of(T)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResampling","l":"of(Tensor<V>, Class<C>, SingleDimensionResampler<C, V>, ExtendedField<V>)","url":"of(org.tensorics.core.tensor.Tensor,java.lang.Class,org.tensorics.core.tensor.resample.SingleDimensionResampler,org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingResampling","l":"of(Tensor<V>, Class<C>, SingleDimensionResampler<C, V>)","url":"of(org.tensorics.core.tensor.Tensor,java.lang.Class,org.tensorics.core.tensor.resample.SingleDimensionResampler)"},{"p":"org.tensorics.core.units","c":"JScienceUnit","l":"of(Unit<?>)","url":"of(javax.measure.unit.Unit)"},{"p":"org.tensorics.core.quantity","c":"ImmutableQuantifiedValue","l":"of(V, Unit)","url":"of(V,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.tensor","c":"ImmutableScalar","l":"of(V)"},{"p":"org.tensorics.core.expressions","c":"Placeholder","l":"ofClass(Class<R>)","url":"ofClass(java.lang.Class)"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression","l":"offset()"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPair","l":"ofLeftRight(Class<?>, Class<?>)","url":"ofLeftRight(java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.quantity.options","c":"OperandPair","l":"ofLeftRightUnit(ErronousValue<V>, ErronousValue<V>, U)","url":"ofLeftRightUnit(org.tensorics.core.quantity.ErronousValue,org.tensorics.core.quantity.ErronousValue,U)"},{"p":"org.tensorics.core.expressions","c":"Placeholder","l":"ofName(String)","url":"ofName(java.lang.String)"},{"p":"org.tensorics.core.expressions","c":"PredicateExpression","l":"ofSourceAndPredicate(Expression<T>, Expression<Predicate<T>>)","url":"ofSourceAndPredicate(org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.util","c":"Instantiators.OngoingInstantiatorCreation","l":"ofType(InstantiatorType)","url":"ofType(org.tensorics.core.util.InstantiatorType)"},{"p":"org.tensorics.core.quantity","c":"ImmutableErronousValue","l":"ofValue(V)"},{"p":"org.tensorics.core.quantity","c":"ImmutableErronousValue","l":"ofValueAndError(V, Optional<V>)","url":"ofValueAndError(V,com.google.common.base.Optional)"},{"p":"org.tensorics.core.quantity","c":"ImmutableErronousValue","l":"ofValueAndError(V, V)","url":"ofValueAndError(V,V)"},{"p":"org.tensorics.core.tree.walking","c":"BottomNodeCallback","l":"onBottom(Node)","url":"onBottom(org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.units","c":"JScienceUnit","l":"ONE"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"one()"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"one()"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"one()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"one()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"one()"},{"p":"org.tensorics.core.quantity.lang","c":"QuantityExpressionSupport","l":"one()"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"one()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"one()"},{"p":"org.tensorics.core.quantity.options","c":"JScienceQuantificationStrategy","l":"one()"},{"p":"org.tensorics.core.quantity.options","c":"QuantificationStrategy","l":"one()"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"one()"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"one()"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"oneIsNull(T, T)","url":"oneIsNull(T,T)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"ones(Shape)","url":"ones(org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"ones(Shape)","url":"ones(org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"ones(Shape)","url":"ones(org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorExpressionSupport","l":"ones(Shape)","url":"ones(org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorSupport","l":"ones(Shape)","url":"ones(org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.tree.walking","c":"EveryNodeCallback","l":"onEvery(Node)","url":"onEvery(org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAllBooleanCondition","l":"OngoingAllBooleanCondition(ConditionBuilder, Expression<? extends Iterable<Boolean>>)","url":"%3Cinit%3E(org.tensorics.core.analysis.ConditionBuilder,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAllBooleanExcludableCondition","l":"OngoingAllBooleanExcludableCondition(ConditionBuilder, Set<? extends Expression<Boolean>>)","url":"%3Cinit%3E(org.tensorics.core.analysis.ConditionBuilder,java.util.Set)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAnalysisEnabler","l":"OngoingAnalysisEnabler(ConditionBuilder)","url":"%3Cinit%3E(org.tensorics.core.analysis.ConditionBuilder)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAnyBooleanCondition","l":"OngoingAnyBooleanCondition(ConditionBuilder, Expression<? extends Iterable<Boolean>>)","url":"%3Cinit%3E(org.tensorics.core.analysis.ConditionBuilder,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"OngoingBasicDeferredBinaryPredicate","l":"OngoingBasicDeferredBinaryPredicate(Expression<T>)","url":"%3Cinit%3E(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingBooleanCondition","l":"OngoingBooleanCondition(ConditionBuilder, Expression<Boolean>)","url":"%3Cinit%3E(org.tensorics.core.analysis.ConditionBuilder,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingBooleanScalarOperation","l":"OngoingBooleanScalarOperation(Boolean)","url":"%3Cinit%3E(java.lang.Boolean)"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingBooleanTensorOperation","l":"OngoingBooleanTensorOperation(OptionRegistry<ManipulationOption>, Tensor<Boolean>)","url":"%3Cinit%3E(org.tensorics.core.commons.options.OptionRegistry,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.testing.lang","c":"OngoingCloseToMatcherCreation","l":"OngoingCloseToMatcherCreation(Environment<S>, S)","url":"%3Cinit%3E(org.tensorics.core.commons.options.Environment,S)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingCondition","l":"OngoingCondition(ConditionBuilder, Expression<T>)","url":"%3Cinit%3E(org.tensorics.core.analysis.ConditionBuilder,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"OngoingDeferredBinaryOperation(ExtendedField<S>, Expression<S>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryPredicate","l":"OngoingDeferredBinaryPredicate(ExtendedField<S>, Expression<S>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.iterable.lang","c":"OngoingDeferredIterableBinaryPredicate","l":"OngoingDeferredIterableBinaryPredicate(ExtendedField<S>, Expression<Iterable<S>>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"OngoingDeferredQuantifiedScalarOperation(Expression<QuantifiedValue<S>>, QuantityOperationRepository<S>)","url":"%3Cinit%3E(org.tensorics.core.tree.domain.Expression,org.tensorics.core.quantity.operations.QuantityOperationRepository)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingDeferredQuantifiedTensorBackedOperation","l":"OngoingDeferredQuantifiedTensorBackedOperation(QuantityOperationRepository<S>, Class<TB>, Expression<TB>)","url":"%3Cinit%3E(org.tensorics.core.quantity.operations.QuantityOperationRepository,java.lang.Class,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredQuantifiedTensorOperation","l":"OngoingDeferredQuantifiedTensorOperation(QuantityOperationRepository<S>, Expression<Tensor<QuantifiedValue<S>>>)","url":"%3Cinit%3E(org.tensorics.core.quantity.operations.QuantityOperationRepository,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingDeferredTensorBackedOperation","l":"OngoingDeferredTensorBackedOperation(Environment<V>, Class<TB>, Expression<TB>)","url":"%3Cinit%3E(org.tensorics.core.commons.options.Environment,java.lang.Class,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredTensorOperation","l":"OngoingDeferredTensorOperation(ExplicitField<V>, OptionRegistry<ManipulationOption>, Expression<Tensor<V>>)","url":"%3Cinit%3E(org.tensorics.core.math.ExplicitField,org.tensorics.core.commons.options.OptionRegistry,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingDetection","l":"OngoingDetection(Tensor<Boolean>)","url":"%3Cinit%3E(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDimensionFlattening","l":"OngoingDimensionFlattening(Tensor<S>, Set<Class<?>>)","url":"%3Cinit%3E(org.tensorics.core.tensor.Tensor,java.util.Set)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDimensionReduction","l":"OngoingDimensionReduction(Tensor<S>, Class<C>)","url":"%3Cinit%3E(org.tensorics.core.tensor.Tensor,java.lang.Class)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingEitherGet","l":"OngoingEitherGet(Tensor<S>, S)","url":"%3Cinit%3E(org.tensorics.core.tensor.Tensor,S)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResamplingStart","l":"OngoingFieldAwareResamplingStart(Tensor<V>, ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.tensor.Tensor,org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingInterpolation","l":"OngoingInterpolation(C, Tensor<E>, Class<C>)","url":"%3Cinit%3E(C,org.tensorics.core.tensor.Tensor,java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions.OngoingLambdaExpressionCreation","l":"OngoingLambdaExpressionCreation(Expression<?>...)","url":"%3Cinit%3E(org.tensorics.core.tree.domain.Expression...)"},{"p":"org.tensorics.core.tensor.operations","c":"OngoingMapOut","l":"OngoingMapOut(Tensor<V>)","url":"%3Cinit%3E(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingNamedCondition","l":"OngoingNamedCondition(ConditionBuilder, Expression<T>)","url":"%3Cinit%3E(org.tensorics.core.analysis.ConditionBuilder,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingOrderedFlattening","l":"OngoingOrderedFlattening(Tensor<S>, Class<C>)","url":"%3Cinit%3E(org.tensorics.core.tensor.Tensor,java.lang.Class)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingPrecondition","l":"OngoingPrecondition(AssertionBuilder, Expression<T>)","url":"%3Cinit%3E(org.tensorics.core.analysis.AssertionBuilder,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingPrecondition","l":"OngoingPrecondition(AssertionBuilder, T)","url":"%3Cinit%3E(org.tensorics.core.analysis.AssertionBuilder,T)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarBinaryPredicate","l":"OngoingQuantifiedScalarBinaryPredicate(QuantityPedicateRepository<S>, QuantifiedValue<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.conditions.QuantityPedicateRepository,org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarConversion","l":"OngoingQuantifiedScalarConversion(QuantifiedValue<S>, QuantificationStrategy<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.QuantifiedValue,org.tensorics.core.quantity.options.QuantificationStrategy)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"OngoingQuantifiedScalarOperation(QuantifiedValue<S>, QuantityOperationRepository<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.QuantifiedValue,org.tensorics.core.quantity.operations.QuantityOperationRepository)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"OngoingQuantifiedTensorBackedOperation(QuantityOperationRepository<S>, QTB)","url":"%3Cinit%3E(org.tensorics.core.quantity.operations.QuantityOperationRepository,QTB)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingQuantifiedTensorOperation","l":"OngoingQuantifiedTensorOperation(QuantityOperationRepository<S>, Tensor<QuantifiedValue<S>>)","url":"%3Cinit%3E(org.tensorics.core.quantity.operations.QuantityOperationRepository,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.iterable.lang","c":"OngoingQuantityIterableValueExtraction","l":"OngoingQuantityIterableValueExtraction(Iterable<QuantifiedValue<V>>, QuantityOperationRepository<V>)","url":"%3Cinit%3E(java.lang.Iterable,org.tensorics.core.quantity.operations.QuantityOperationRepository)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantityValueExtraction","l":"OngoingQuantityValueExtraction(QuantifiedValue<V>, QuantityOperationRepository<V>)","url":"%3Cinit%3E(org.tensorics.core.quantity.QuantifiedValue,org.tensorics.core.quantity.operations.QuantityOperationRepository)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingResamplingStart","l":"OngoingResamplingStart(Tensor<V>)","url":"%3Cinit%3E(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingScalarBinaryOperation","l":"OngoingScalarBinaryOperation(ExtendedField<S>, S)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField,S)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingStructuralReduction","l":"OngoingStructuralReduction(Tensor<E>, Class<C>)","url":"%3Cinit%3E(org.tensorics.core.tensor.Tensor,java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorbackedConstruction","l":"OngoingTensorbackedConstruction(Class<TB>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorbackedFiltering","l":"OngoingTensorbackedFiltering(TB)","url":"%3Cinit%3E(TB)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorBackedOperation","l":"OngoingTensorBackedOperation(Environment<V>, TB)","url":"%3Cinit%3E(org.tensorics.core.commons.options.Environment,TB)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorFiltering","l":"OngoingTensorFiltering(Tensor<E>)","url":"%3Cinit%3E(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorOperation","l":"OngoingTensorOperation(Environment<V>, Tensor<V>)","url":"%3Cinit%3E(org.tensorics.core.commons.options.Environment,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorReduction","l":"OngoingTensorReduction()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tree.walking","c":"StepUpCallback","l":"onStepUpFromChildToParent(Node, Node)","url":"onStepUpFromChildToParent(org.tensorics.core.tree.domain.Node,org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.tensor.operations","c":"ElementBinaryFunction","l":"operation"},{"p":"org.tensorics.core.math.structures.grouplike","c":"AbstractAbelianGroup","l":"operation()"},{"p":"org.tensorics.core.math.structures.grouplike","c":"CommutativeSemigroup","l":"operation()"},{"p":"org.tensorics.core.math.structures.grouplike","c":"GrouplikeStructure","l":"operation()"},{"p":"org.tensorics.core.math.structures.grouplike","c":"Semigroup","l":"operation()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityBinaryOperation","l":"operation()"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"operationRepository()"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"optional(Object...)","url":"optional(java.lang.Object...)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"optional(Position)","url":"optional(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.util","c":"Reflections","l":"optionalValueOfStaticField(Field)","url":"optionalValueOfStaticField(java.lang.reflect.Field)"},{"p":"org.tensorics.core.tensor.operations","c":"ElementBinaryFunction","l":"optionRegistry"},{"p":"org.tensorics.core.commons.options","c":"Environment","l":"options()"},{"p":"org.tensorics.core.lang","c":"EnvironmentImpl","l":"options()"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingPrecondition","l":"or()"},{"p":"org.tensorics.core.booleans.operations","c":"BooleanOperations","l":"or()"},{"p":"org.tensorics.core.booleans.operations","c":"BooleanTensorOperationsRepository","l":"or()"},{"p":"org.tensorics.core.booleans.operations","c":"Or","l":"Or()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.util.chains","c":"Chains.AbstractOngoingChain","l":"or(BiFunction<? super T, Function<Object, R>, R>)","url":"or(java.util.function.BiFunction)"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingBooleanScalarOperation","l":"or(Boolean)","url":"or(java.lang.Boolean)"},{"p":"org.tensorics.core.lang","c":"TensoricBooleanExpressions","l":"or(Expression<? extends Iterable<Boolean>>)","url":"or(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricBooleanExpressions","l":"or(Expression<Boolean>...)","url":"or(org.tensorics.core.tree.domain.Expression...)"},{"p":"org.tensorics.core.util.chains","c":"Chains.AbstractOngoingChain","l":"or(Function<? super T, R>)","url":"or(java.util.function.Function)"},{"p":"org.tensorics.core.lang","c":"TensoricBooleanExpressions","l":"or(Iterable<? extends Expression<Boolean>>)","url":"or(java.lang.Iterable)"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingBooleanTensorOperation","l":"or(Tensor<Boolean>)","url":"or(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFlattening","l":"orderedInDirectionOf(Class<C>)","url":"orderedInDirectionOf(java.lang.Class)"},{"p":"org.tensorics.core.util.chains","c":"Chains.OngoingMainChain","l":"orElse(R)"},{"p":"org.tensorics.core.util.chains","c":"Chains.OngoingBranch","l":"orElseBreakWith(R)"},{"p":"org.tensorics.core.util.chains","c":"Chains.OngoingBranch","l":"orElseFallThrough()"},{"p":"org.tensorics.core.util.chains","c":"Chains.OngoingMainChain","l":"orElseNull()"},{"p":"org.tensorics.core.util.chains","c":"Chains.OngoingBranch","l":"orElseThrow()"},{"p":"org.tensorics.core.util.chains","c":"Chains.OngoingMainChain","l":"orElseThrow()"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingEitherGet","l":"orGet(Object...)","url":"orGet(java.lang.Object...)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingEitherGet","l":"orGet(Position)","url":"orGet(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"Shapes","l":"outerProduct(Shape, Shape)","url":"outerProduct(org.tensorics.core.tensor.Shape,org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.analysis","c":"AnalysisResult","l":"overallStatus()"},{"p":"org.tensorics.core.tree.walking","c":"ParentAfterChildrenWalker","l":"ParentAfterChildrenWalker()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"parentClassDifference(Set<Class<?>>, Set<? extends Class<?>>)","url":"parentClassDifference(java.util.Set,java.util.Set)"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"parentClassIntersection(Set<Class<?>>, Set<Class<?>>)","url":"parentClassIntersection(java.util.Set,java.util.Set)"},{"p":"org.tensorics.core.tensor","c":"Shapes","l":"parentDimensionalIntersection(Shape, Shape)","url":"parentDimensionalIntersection(org.tensorics.core.tensor.Shape,org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.tree.domain","c":"Path","l":"Path()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tree.domain","c":"Path","l":"Path(List<Node>)","url":"%3Cinit%3E(java.util.List)"},{"p":"org.tensorics.core.tree.walking","c":"PathDoesNotExistException","l":"PathDoesNotExistException(Node, Node)","url":"%3Cinit%3E(org.tensorics.core.tree.domain.Node,org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.math.operations","c":"CreationOperation","l":"perform()"},{"p":"org.tensorics.core.tensor.operations","c":"FunctionTensorCreationOperation","l":"perform()"},{"p":"org.tensorics.core.function.operations","c":"AbstractDiscreteFunctionBinaryOperation","l":"perform(DiscreteFunction<X, Y>, DiscreteFunction<X, Y>)","url":"perform(org.tensorics.core.function.DiscreteFunction,org.tensorics.core.function.DiscreteFunction)"},{"p":"org.tensorics.core.tensorbacked.operations","c":"QuantifiedElementTensorBackedUnaryOperation","l":"perform(QTB)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityDivision","l":"perform(QuantifiedValue<S>, QuantifiedValue<S>)","url":"perform(org.tensorics.core.quantity.QuantifiedValue,org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityMultiplication","l":"perform(QuantifiedValue<S>, QuantifiedValue<S>)","url":"perform(org.tensorics.core.quantity.QuantifiedValue,org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantitySumOrDifferenceOperation","l":"perform(QuantifiedValue<S>, QuantifiedValue<S>)","url":"perform(org.tensorics.core.quantity.QuantifiedValue,org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityAbsoluteValue","l":"perform(QuantifiedValue<S>)","url":"perform(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityAdditiveInversion","l":"perform(QuantifiedValue<S>)","url":"perform(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityMultiplicativeInversion","l":"perform(QuantifiedValue<S>)","url":"perform(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.math.operations","c":"BinaryFunction","l":"perform(T, T)","url":"perform(T,T)"},{"p":"org.tensorics.core.math.predicates","c":"BinaryPredicate","l":"perform(T, T)","url":"perform(T,T)"},{"p":"org.tensorics.core.math.predicates","c":"IsEqualTo","l":"perform(T, T)","url":"perform(T,T)"},{"p":"org.tensorics.core.math.predicates","c":"IsNotEqualTo","l":"perform(T, T)","url":"perform(T,T)"},{"p":"org.tensorics.core.math.operations","c":"UnaryOperation","l":"perform(T)"},{"p":"org.tensorics.core.tensorbacked.operations","c":"ElementTensorBackedUnaryOperation","l":"perform(TB)"},{"p":"org.tensorics.core.tensor.operations","c":"ElementBinaryFunction","l":"perform(Tensor<V>, Tensor<V>)","url":"perform(org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.operations","c":"InnerTensorOperation","l":"perform(Tensor<V>, Tensor<V>)","url":"perform(org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.operations","c":"ElementUnaryOperation","l":"perform(Tensor<V>)","url":"perform(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.math","c":"Operations","l":"performOnAll(Iterable<ValuePair<V>>, BinaryOperation<V>)","url":"performOnAll(java.lang.Iterable,org.tensorics.core.math.operations.BinaryOperation)"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression.Mode","l":"pick(Iterable<T>, int)","url":"pick(java.lang.Iterable,int)"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression","l":"PickExpression(Expression<? extends Iterable<T>>, int, PickExpression.Mode)","url":"%3Cinit%3E(org.tensorics.core.tree.domain.Expression,int,org.tensorics.core.iterable.expressions.PickExpression.Mode)"},{"p":"org.tensorics.core.resolve.resolvers","c":"PickResolver","l":"PickResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.function.lang","c":"OngoingDiscreteFunctionBinaryOperation","l":"plus(DiscreteFunction<X, Y>)","url":"plus(org.tensorics.core.function.DiscreteFunction)"},{"p":"org.tensorics.core.function.lang","c":"OngoingDeferredDiscreteFunctionBinaryOperation","l":"plus(Expression<DiscreteFunction<X, Y>>)","url":"plus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"plus(Expression<QuantifiedValue<S>>)","url":"plus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"plus(Expression<S>)","url":"plus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingDeferredQuantifiedTensorBackedOperation","l":"plus(Expression<TB>)","url":"plus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingDeferredTensorBackedOperation","l":"plus(Expression<TB>)","url":"plus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredQuantifiedTensorOperation","l":"plus(Expression<Tensor<QuantifiedValue<S>>>)","url":"plus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredTensorOperation","l":"plus(Expression<Tensor<V>>)","url":"plus(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"plus(QTB)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"plus(QuantifiedValue<S>)","url":"plus(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"plus(QuantifiedValue<S>)","url":"plus(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"plus(S, Unit)","url":"plus(S,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"plus(S, Unit)","url":"plus(S,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"plus(S, Unit<?>)","url":"plus(S,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"plus(S, Unit<?>)","url":"plus(S,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"plus(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingScalarBinaryOperation","l":"plus(S)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingBinaryOperation","l":"plus(T)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingOperation","l":"plus(T)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingDeferredQuantifiedTensorBackedOperation","l":"plus(TB)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingDeferredTensorBackedOperation","l":"plus(TB)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorBackedOperation","l":"plus(TB)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredQuantifiedTensorOperation","l":"plus(Tensor<QuantifiedValue<S>>)","url":"plus(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingQuantifiedTensorOperation","l":"plus(Tensor<QuantifiedValue<S>>)","url":"plus(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorOperation","l":"plus(Tensor<V>)","url":"plus(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"plusQT(Tensor<QuantifiedValue<S>>)","url":"plusQT(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorBackedOperation","l":"plusT(Tensor<V>)","url":"plusT(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredQuantifiedTensorOperation","l":"plusV(QuantifiedValue<S>)","url":"plusV(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingQuantifiedTensorOperation","l":"plusV(QuantifiedValue<S>)","url":"plusV(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingQuantifiedTensorBackedOperation","l":"plusV(QuantifiedValue<S>)","url":"plusV(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingOperation","l":"plusV(V)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingDeferredTensorOperation","l":"plusV(V)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorOperation","l":"plusV(V)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"OngoingTensorBackedOperation","l":"plusV(V)"},{"p":"org.tensorics.core.tensor","c":"Position","l":"Position(Set<?>)","url":"%3Cinit%3E(java.util.Set)"},{"p":"org.tensorics.core.tensor.coordinates","c":"PositionOrdering","l":"positionComparator()"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreamMappers","l":"positions(BiFunction<Position, T, Position>)","url":"positions(java.util.function.BiFunction)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreams","l":"positions(BiFunction<Position, T, Position>)","url":"positions(java.util.function.BiFunction)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreamMappers","l":"positions(Function<Position, Position>)","url":"positions(java.util.function.Function)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreams","l":"positions(Function<Position, Position>)","url":"positions(java.util.function.Function)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"positionSet()"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"positionsOf(Tensor<?>)","url":"positionsOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"positionsOf(Tensorbacked<?>)","url":"positionsOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"positionsOf(Tensorbacked<?>)","url":"positionsOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.fields.doubles","c":"DoubleMath","l":"pow(Double, Double)","url":"pow(java.lang.Double,java.lang.Double)"},{"p":"org.tensorics.core.math","c":"Math","l":"pow(T, T)","url":"pow(T,T)"},{"p":"org.tensorics.core.math","c":"ExtendedField","l":"power()"},{"p":"org.tensorics.core.math.impl","c":"ExtendedFieldImpl","l":"power()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"power()"},{"p":"org.tensorics.core.quantity.options","c":"JScienceQuantificationStrategy","l":"power(Unit, T)","url":"power(org.tensorics.core.units.Unit,T)"},{"p":"org.tensorics.core.quantity.options","c":"QuantificationStrategy","l":"power(Unit, T)","url":"power(org.tensorics.core.units.Unit,T)"},{"p":"org.tensorics.core.analysis.expression","c":"PreconditionExpression","l":"PreconditionExpression(Conversion<Iterable<Boolean>, Boolean>, Expression<Iterable<Boolean>>)","url":"%3Cinit%3E(org.tensorics.core.commons.operations.Conversion,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis","c":"AssertionBuilder","l":"preConditions()"},{"p":"org.tensorics.core.analysis.expression","c":"AssertionExpression","l":"preConditionsExpression()"},{"p":"org.tensorics.core.analysis","c":"AssertionBuilder","l":"preConditionsReducer()"},{"p":"org.tensorics.core.expressions","c":"PredicateExpression","l":"predicate()"},{"p":"org.tensorics.core.resolve.resolvers","c":"PredicateConditionResolver","l":"PredicateConditionResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"predicateRepository()"},{"p":"org.tensorics.core.util","c":"SystemState","l":"printStates(List<SystemState>)","url":"printStates(java.util.List)"},{"p":"org.tensorics.core.util","c":"SystemState","l":"printStatesTo(List<SystemState>, PrintStream)","url":"printStatesTo(java.util.List,java.io.PrintStream)"},{"p":"org.tensorics.core.util","c":"SystemState","l":"printTo(PrintStream)","url":"printTo(java.io.PrintStream)"},{"p":"org.tensorics.core.util","c":"SystemState","l":"printToStdOut()"},{"p":"org.tensorics.core.resolve.engine","c":"BiggestSubTreeDispatcher","l":"processTree(Node, ResolvingContext, OptionRegistry<ResolvingOption>)","url":"processTree(org.tensorics.core.tree.domain.Node,org.tensorics.core.tree.domain.ResolvingContext,org.tensorics.core.commons.options.OptionRegistry)"},{"p":"org.tensorics.core.resolve.engine","c":"Dispatcher","l":"processTree(Node, ResolvingContext, OptionRegistry<ResolvingOption>)","url":"processTree(org.tensorics.core.tree.domain.Node,org.tensorics.core.tree.domain.ResolvingContext,org.tensorics.core.commons.options.OptionRegistry)"},{"p":"org.tensorics.core.quantity.operations","c":"AbstractQuantityOperation","l":"productError(QuantifiedValue<V>, QuantifiedValue<V>)","url":"productError(org.tensorics.core.quantity.QuantifiedValue,org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.analysis","c":"AnalysisResult.Builder","l":"put(AssertionExpression, AssertionResult)","url":"put(org.tensorics.core.analysis.expression.AssertionExpression,org.tensorics.core.analysis.AssertionResult)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked5dBuilder","l":"put(C1, C2, C3, C4, C5, V)","url":"put(C1,C2,C3,C4,C5,V)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked4dBuilder","l":"put(C1, C2, C3, C4, V)","url":"put(C1,C2,C3,C4,V)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked3dBuilder","l":"put(C1, C2, C3, V)","url":"put(C1,C2,C3,V)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked2dBuilder","l":"put(C1, C2, V)","url":"put(C1,C2,V)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"Tensorbacked1dBuilder","l":"put(C1, V)","url":"put(C1,V)"},{"p":"org.tensorics.core.tensor.specific","c":"PositionIndexer.Builder","l":"put(Class<C>, Set<C>)","url":"put(java.lang.Class,java.util.Set)"},{"p":"org.tensorics.core.tree.domain","c":"EditableResolvingContext","l":"put(E, R)","url":"put(E,R)"},{"p":"org.tensorics.core.tree.domain","c":"ResolvingContextImpl","l":"put(E, R)","url":"put(E,R)"},{"p":"org.tensorics.core.function","c":"MapBackedDiscreteFunction.Builder","l":"put(Map.Entry<? extends X, ? extends Y>)","url":"put(java.util.Map.Entry)"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction.Builder","l":"put(Map.Entry<? extends X, ? extends Y>)","url":"put(java.util.Map.Entry)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"put(Map.Entry<Position, V>)","url":"put(java.util.Map.Entry)"},{"p":"org.tensorics.core.tensor","c":"TensorBuilder","l":"put(Map.Entry<Position, V>)","url":"put(java.util.Map.Entry)"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"put(Map.Entry<Position, V>)","url":"put(java.util.Map.Entry)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"put(Map.Entry<Position, V>)","url":"put(java.util.Map.Entry)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"put(Map.Entry<Position, V>)","url":"put(java.util.Map.Entry)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"put(Map.Entry<Position, V>)","url":"put(java.util.Map.Entry)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"put(Position, V)","url":"put(org.tensorics.core.tensor.Position,V)"},{"p":"org.tensorics.core.tensor","c":"TensorBuilder","l":"put(Position, V)","url":"put(org.tensorics.core.tensor.Position,V)"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"put(Position, V)","url":"put(org.tensorics.core.tensor.Position,V)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"put(Position, V)","url":"put(org.tensorics.core.tensor.Position,V)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"put(Position, V)","url":"put(org.tensorics.core.tensor.Position,V)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"put(Position, V)","url":"put(org.tensorics.core.tensor.Position,V)"},{"p":"org.tensorics.core.tree.domain","c":"RebuildingContext","l":"put(T, T)","url":"put(T,T)"},{"p":"org.tensorics.core.tree.domain","c":"RebuildingContextImpl","l":"put(T, T)","url":"put(T,T)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"TensorbackedScalarBuilder","l":"put(V)"},{"p":"org.tensorics.incubate.function","c":"DiscreteFunctionBuilder","l":"put(X, Y, Y)","url":"put(X,Y,Y)"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction.Builder","l":"put(X, Y, Y)","url":"put(X,Y,Y)"},{"p":"org.tensorics.core.function","c":"DiscreteFunctionBuilder","l":"put(X, Y)","url":"put(X,Y)"},{"p":"org.tensorics.core.function","c":"MapBackedDiscreteFunction.Builder","l":"put(X, Y)","url":"put(X,Y)"},{"p":"org.tensorics.incubate.function","c":"DiscreteFunctionBuilder","l":"put(X, Y)","url":"put(X,Y)"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction.Builder","l":"put(X, Y)","url":"put(X,Y)"},{"p":"org.tensorics.core.function","c":"MapBackedDiscreteFunction.Builder","l":"putAll(Map<? extends X, ? extends Y>)","url":"putAll(java.util.Map)"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction.Builder","l":"putAll(Map<? extends X, ? extends Y>)","url":"putAll(java.util.Map)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"putAll(Map<Position, V>)","url":"putAll(java.util.Map)"},{"p":"org.tensorics.core.tensor","c":"TensorBuilder","l":"putAll(Map<Position, V>)","url":"putAll(java.util.Map)"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"putAll(Map<Position, V>)","url":"putAll(java.util.Map)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"putAll(Map<Position, V>)","url":"putAll(java.util.Map)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"putAll(Map<Position, V>)","url":"putAll(java.util.Map)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"putAll(Map<Position, V>)","url":"putAll(java.util.Map)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"putAll(Position, Map<Position, V>)","url":"putAll(org.tensorics.core.tensor.Position,java.util.Map)"},{"p":"org.tensorics.core.tensor","c":"TensorBuilder","l":"putAll(Position, Map<Position, V>)","url":"putAll(org.tensorics.core.tensor.Position,java.util.Map)"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"putAll(Position, Map<Position, V>)","url":"putAll(org.tensorics.core.tensor.Position,java.util.Map)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"putAll(Position, Map<Position, V>)","url":"putAll(org.tensorics.core.tensor.Position,java.util.Map)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"putAll(Position, Map<Position, V>)","url":"putAll(org.tensorics.core.tensor.Position,java.util.Map)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"putAll(Position, Map<Position, V>)","url":"putAll(org.tensorics.core.tensor.Position,java.util.Map)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"putAll(Position, Tensor<V>)","url":"putAll(org.tensorics.core.tensor.Position,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor","c":"TensorBuilder","l":"putAll(Position, Tensor<V>)","url":"putAll(org.tensorics.core.tensor.Position,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"putAll(Position, Tensor<V>)","url":"putAll(org.tensorics.core.tensor.Position,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"putAll(Position, Tensor<V>)","url":"putAll(org.tensorics.core.tensor.Position,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"putAll(Position, Tensor<V>)","url":"putAll(org.tensorics.core.tensor.Position,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"putAll(Position, Tensor<V>)","url":"putAll(org.tensorics.core.tensor.Position,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"putAll(Position, Tensorbacked<V>)","url":"putAll(org.tensorics.core.tensor.Position,org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"putAll(Position, Tensorbacked<V>)","url":"putAll(org.tensorics.core.tensor.Position,org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"putAll(Position, Tensorbacked<V>)","url":"putAll(org.tensorics.core.tensor.Position,org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"putAll(Position, Tensorbacked<V>)","url":"putAll(org.tensorics.core.tensor.Position,org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"putAll(Set<Map.Entry<Position, V>>)","url":"putAll(java.util.Set)"},{"p":"org.tensorics.core.tensor","c":"TensorBuilder","l":"putAll(Set<Map.Entry<Position, V>>)","url":"putAll(java.util.Set)"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"putAll(Set<Map.Entry<Position, V>>)","url":"putAll(java.util.Set)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"putAll(Set<Map.Entry<Position, V>>)","url":"putAll(java.util.Set)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"putAll(Set<Map.Entry<Position, V>>)","url":"putAll(java.util.Set)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"putAll(Set<Map.Entry<Position, V>>)","url":"putAll(java.util.Set)"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"putAll(TB)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"putAll(TB)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"putAll(TB)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"putAll(TB)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"putAll(Tensor<V>)","url":"putAll(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor","c":"TensorBuilder","l":"putAll(Tensor<V>)","url":"putAll(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"putAll(Tensor<V>)","url":"putAll(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"putAll(Tensor<V>)","url":"putAll(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"putAll(Tensor<V>)","url":"putAll(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"putAll(Tensor<V>)","url":"putAll(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tree.domain","c":"EditableResolvingContext","l":"putAllNew(ResolvingContext)","url":"putAllNew(org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.tree.domain","c":"ResolvingContextImpl","l":"putAllNew(ResolvingContext)","url":"putAllNew(org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.tensor.specific","c":"ImmutableDoubleArrayBackedTensor.Builder","l":"putIt(Position, Double)","url":"putIt(org.tensorics.core.tensor.Position,java.lang.Double)"},{"p":"org.tensorics.core.tensor","c":"AbstractTensorBuilder","l":"putIt(Position, V)","url":"putIt(org.tensorics.core.tensor.Position,V)"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor.Builder","l":"putIt(Position, V)","url":"putIt(org.tensorics.core.tensor.Position,V)"},{"p":"org.tensorics.core.lang","c":"EnvironmentImpl","l":"quantification()"},{"p":"org.tensorics.core.quantity.options","c":"QuantityEnvironment","l":"quantification()"},{"p":"org.tensorics.core.tensorbacked.operations","c":"QuantifiedElementTensorBackedUnaryOperation","l":"QuantifiedElementTensorBackedUnaryOperation()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityAbsoluteValue","l":"QuantityAbsoluteValue(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityAddition","l":"QuantityAddition(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityAdditiveInversion","l":"QuantityAdditiveInversion(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityBinaryOperation","l":"QuantityBinaryOperation(QuantityEnvironment<V>, BinaryOperation<V>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment,org.tensorics.core.math.operations.BinaryOperation)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityDivision","l":"QuantityDivision(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.lang","c":"QuantityDoubleSupport","l":"QuantityDoubleSupport()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.quantity.lang","c":"QuantityExpressionSupport","l":"QuantityExpressionSupport(QuantityEnvironment<V>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityGreaterPredicate","l":"QuantityGreaterPredicate(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.iterable.lang","c":"QuantityIterableExpressionSupport","l":"QuantityIterableExpressionSupport(QuantityEnvironment<V>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.iterable.lang","c":"QuantityIterableSupport","l":"QuantityIterableSupport(QuantityEnvironment<V>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityLessPredicate","l":"QuantityLessPredicate(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityMultiplication","l":"QuantityMultiplication(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityMultiplicativeInversion","l":"QuantityMultiplicativeInversion(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"quantityOf(V, Unit)","url":"quantityOf(V,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"quantityOf(V, Unit<?>)","url":"quantityOf(V,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"QuantityOperationRepository(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityPedicateRepository","l":"QuantityPedicateRepository(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantitySubtraction","l":"QuantitySubtraction(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantitySumOrDifferenceOperation","l":"QuantitySumOrDifferenceOperation(QuantityEnvironment<S>, BinaryOperation<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment,org.tensorics.core.math.operations.BinaryOperation)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"QuantitySupport(QuantityEnvironment<V>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"QuantityTensorbackedExpressionSupport","l":"QuantityTensorbackedExpressionSupport(QuantityEnvironment<V>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"QuantityTensorbackedSupport","l":"QuantityTensorbackedSupport(QuantityEnvironment<V>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensorExpressionSupport","l":"QuantityTensorExpressionSupport(QuantityEnvironment<V>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"quantityTensorOf(Tensor<S>, Unit)","url":"quantityTensorOf(org.tensorics.core.tensor.Tensor,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensors","l":"quantityTensorOf(Tensor<S>, Unit)","url":"quantityTensorOf(org.tensorics.core.tensor.Tensor,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"quantityTensorOf(Tensor<S>, Unit<?>)","url":"quantityTensorOf(org.tensorics.core.tensor.Tensor,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensors","l":"quantityTensorOf(Tensor<S>, Unit<?>)","url":"quantityTensorOf(org.tensorics.core.tensor.Tensor,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensorSupport","l":"QuantityTensorSupport(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityUnaryOperation","l":"QuantityUnaryOperation(QuantityEnvironment<S>)","url":"%3Cinit%3E(org.tensorics.core.quantity.options.QuantityEnvironment)"},{"p":"org.tensorics.core.reduction","c":"AbstractLinearDoubleInterpolationStrategy","l":"ratio(C, C, C)","url":"ratio(C,C,C)"},{"p":"org.tensorics.core.tree.domain","c":"RebuildingContextImpl","l":"RebuildingContextImpl()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tree.domain","c":"RebuildingContextImpl","l":"RebuildingContextImpl(RebuildingContext)","url":"%3Cinit%3E(org.tensorics.core.tree.domain.RebuildingContext)"},{"p":"org.tensorics.core.tree.walking","c":"Trees","l":"rebuildTree(T, RebuildingContext)","url":"rebuildTree(T,org.tensorics.core.tree.domain.RebuildingContext)"},{"p":"org.tensorics.core.tree.domain","c":"RebuildableNode","l":"rebuildWithNewChildren(RebuildingContext)","url":"rebuildWithNewChildren(org.tensorics.core.tree.domain.RebuildingContext)"},{"p":"org.tensorics.core.util.chains","c":"AbstractRecursiveRepresenter","l":"recurse(Object)","url":"recurse(java.lang.Object)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorManipulation","l":"reduce(Class<C>)","url":"reduce(java.lang.Class)"},{"p":"org.tensorics.core.reduction","c":"Averaging","l":"reduce(Map<?, V>, Position)","url":"reduce(java.util.Map,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.reduction","c":"InterpolatedSlicing","l":"reduce(Map<? extends C, E>, Position)","url":"reduce(java.util.Map,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.reduction","c":"Slicing","l":"reduce(Map<? extends C, E>, Position)","url":"reduce(java.util.Map,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.reduction","c":"ReductionStrategy","l":"reduce(Map<? extends C, T>, Position)","url":"reduce(java.util.Map,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.reduction","c":"RootMeanSquare","l":"reduce(Map<? extends Object, S>, Position)","url":"reduce(java.util.Map,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.reduction","c":"ToFunctions","l":"reduce(Map<? extends X, Y>, Position)","url":"reduce(java.util.Map,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.iterable.operations","c":"IterableOperations","l":"reduce(Multimap<K, V>, IterableOperation<V>)","url":"reduce(com.google.common.collect.Multimap,org.tensorics.core.iterable.operations.IterableOperation)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingStructuralReduction","l":"reduceBy(ReductionStrategy<? super C, E, R>)","url":"reduceBy(org.tensorics.core.reduction.ReductionStrategy)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorReduction","l":"reduceBy(ReductionStrategy<C, V, R>)","url":"reduceBy(org.tensorics.core.reduction.ReductionStrategy)"},{"p":"org.tensorics.core.util","c":"Reflections","l":"Reflections()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor.Builder","l":"remove(Position)","url":"remove(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"TensorBuilder","l":"remove(Position)","url":"remove(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.specific","c":"ImmutableDoubleArrayBackedTensor.Builder","l":"remove(Position)","url":"remove(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensorbacked","c":"SimpleTensorbackedBuilder","l":"remove(Position)","url":"remove(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedBuilder","l":"remove(Position)","url":"remove(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilder","l":"remove(Position)","url":"remove(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"DimtypedTensorbackedBuilderImpl","l":"remove(Position)","url":"remove(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResampling","l":"repeat(Class<C>, Comparator<C>)","url":"repeat(java.lang.Class,java.util.Comparator)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResampling","l":"repeat(Class<C>)","url":"repeat(java.lang.Class)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResamplingStart","l":"repeat(Class<T>, Comparator<T>)","url":"repeat(java.lang.Class,java.util.Comparator)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingResamplingStart","l":"repeat(Class<T>, Comparator<T>)","url":"repeat(java.lang.Class,java.util.Comparator)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResamplingStart","l":"repeat(Class<T>)","url":"repeat(java.lang.Class)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingResampling","l":"repeat(Class<T>)","url":"repeat(java.lang.Class)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingResamplingStart","l":"repeat(Class<T>)","url":"repeat(java.lang.Class)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingResampling","l":"repeating(Class<T>, Comparator<T>)","url":"repeating(java.lang.Class,java.util.Comparator)"},{"p":"org.tensorics.core.tensor.resample.impl","c":"RepeatingResampler","l":"RepeatingResampler(Comparator<C>)","url":"%3Cinit%3E(java.util.Comparator)"},{"p":"org.tensorics.core.quantity.options","c":"RequireBothValidStrategy","l":"RequireBothValidStrategy()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"requireValidCoordinates(Iterable<?>)","url":"requireValidCoordinates(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor","c":"Coordinates","l":"requireValidDimensions(Multiset<Class<?>>)","url":"requireValidDimensions(com.google.common.collect.Multiset)"},{"p":"org.tensorics.core.tensor.resample","c":"MultiDimensionalResampling","l":"resample(Class<C>, SingleDimensionResampler<C, V>)","url":"resample(java.lang.Class,org.tensorics.core.tensor.resample.SingleDimensionResampler)"},{"p":"org.tensorics.core.tensor.resample","c":"SingleDimensionResampler","l":"resample(Set<C>, Function<C, V>, C)","url":"resample(java.util.Set,java.util.function.Function,C)"},{"p":"org.tensorics.core.tensor.resample.impl","c":"LinearInterpolationResampler","l":"resample(Set<C>, Function<C, V>, C)","url":"resample(java.util.Set,java.util.function.Function,C)"},{"p":"org.tensorics.core.tensor.resample.impl","c":"RepeatingResampler","l":"resample(Set<C>, Function<C, V>, C)","url":"resample(java.util.Set,java.util.function.Function,C)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"resample(Tensor<Double>)","url":"resample(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"resample(Tensor<V>)","url":"resample(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"resample(Tensor<V>)","url":"resample(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"resample(Tensor<V>)","url":"resample(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorSupport","l":"resample(Tensor<V>)","url":"resample(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.resample","c":"MultiDimensionalResampling","l":"resample(Tensor<V>)","url":"resample(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.resample","c":"ResamplingStage","l":"ResamplingStage(Shape, Tensoric<V>, SingleDimensionResampler<C, V>, Class<C>)","url":"%3Cinit%3E(org.tensorics.core.tensor.Shape,org.tensorics.core.tensor.Tensoric,org.tensorics.core.tensor.resample.SingleDimensionResampler,java.lang.Class)"},{"p":"org.tensorics.core.analysis.resolver","c":"AnalysisResolver","l":"resolve(AnalysisExpression, ResolvingContext)","url":"resolve(org.tensorics.core.analysis.expression.AnalysisExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.analysis.resolver","c":"AssertionResolver","l":"resolve(AssertionExpression, ResolvingContext)","url":"resolve(org.tensorics.core.analysis.expression.AssertionExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"BinaryOperationResolver","l":"resolve(BinaryOperationExpression<R>, ResolvingContext)","url":"resolve(org.tensorics.core.expressions.BinaryOperationExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"BinaryPredicateResolver","l":"resolve(BinaryPredicateExpression<T>, ResolvingContext)","url":"resolve(org.tensorics.core.expressions.BinaryPredicateExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"BinaryPredicateIterableResolver","l":"resolve(BinaryPredicateIterableExpression<T>, ResolvingContext)","url":"resolve(org.tensorics.core.iterable.expressions.BinaryPredicateIterableExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"ConversionOperationResolver","l":"resolve(ConversionOperationExpression<T, R>, ResolvingContext)","url":"resolve(org.tensorics.core.expressions.ConversionOperationExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"CreationOperationResolver","l":"resolve(CreationOperationExpression<R>, ResolvingContext)","url":"resolve(org.tensorics.core.expressions.CreationOperationExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.engine","c":"DefaultResolvingEngine","l":"resolve(E, ResolvingContext, ResolvingOption...)","url":"resolve(E,org.tensorics.core.tree.domain.ResolvingContext,org.tensorics.core.resolve.options.ResolvingOption...)"},{"p":"org.tensorics.core.resolve.engine","c":"ResolvingEngine","l":"resolve(E, ResolvingContext, ResolvingOption...)","url":"resolve(E,org.tensorics.core.tree.domain.ResolvingContext,org.tensorics.core.resolve.options.ResolvingOption...)"},{"p":"org.tensorics.core.resolve.resolvers","c":"Resolver","l":"resolve(E, ResolvingContext)","url":"resolve(E,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.engine","c":"DefaultResolvingEngine","l":"resolve(E, ResolvingOption...)","url":"resolve(E,org.tensorics.core.resolve.options.ResolvingOption...)"},{"p":"org.tensorics.core.resolve.engine","c":"ResolvingEngine","l":"resolve(E, ResolvingOption...)","url":"resolve(E,org.tensorics.core.resolve.options.ResolvingOption...)"},{"p":"org.tensorics.core.resolve.resolvers","c":"FunctionalExpressionResolver","l":"resolve(FunctionalExpression<R>, ResolvingContext)","url":"resolve(org.tensorics.core.functional.expressions.FunctionalExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"IterableExpressionToIterableResolver","l":"resolve(IterableExpressionToIterable<T>, ResolvingContext)","url":"resolve(org.tensorics.core.iterable.expressions.IterableExpressionToIterable,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"IterableResolvingExpressionResolver","l":"resolve(IterableResolvingExpression<T>, ResolvingContext)","url":"resolve(org.tensorics.core.expressions.IterableResolvingExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"PickResolver","l":"resolve(PickExpression<T>, ResolvingContext)","url":"resolve(org.tensorics.core.iterable.expressions.PickExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"PredicateConditionResolver","l":"resolve(PredicateExpression<T>, ResolvingContext)","url":"resolve(org.tensorics.core.expressions.PredicateExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"TensoricScriptResolver","l":"resolve(TensoricScript<V, R>, ResolvingContext)","url":"resolve(org.tensorics.core.lang.TensoricScript,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.resolvers","c":"UnaryOperationResolver","l":"resolve(UnaryOperationExpression<R>, ResolvingContext)","url":"resolve(org.tensorics.core.expressions.UnaryOperationExpression,org.tensorics.core.tree.domain.ResolvingContext)"},{"p":"org.tensorics.core.resolve.engine","c":"ResolvedContextDidNotGrowException","l":"ResolvedContextDidNotGrowException()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.resolve.engine","c":"DefaultResolvingEngine","l":"resolveDetailed(E, ResolvingContext, ResolvingOption...)","url":"resolveDetailed(E,org.tensorics.core.tree.domain.ResolvingContext,org.tensorics.core.resolve.options.ResolvingOption...)"},{"p":"org.tensorics.core.resolve.engine","c":"ResolvingEngine","l":"resolveDetailed(E, ResolvingContext, ResolvingOption...)","url":"resolveDetailed(E,org.tensorics.core.tree.domain.ResolvingContext,org.tensorics.core.resolve.options.ResolvingOption...)"},{"p":"org.tensorics.core.resolve.engine","c":"DefaultResolvingEngine","l":"resolveDetailed(E, ResolvingOption...)","url":"resolveDetailed(E,org.tensorics.core.resolve.options.ResolvingOption...)"},{"p":"org.tensorics.core.resolve.engine","c":"ResolvingEngine","l":"resolveDetailed(E, ResolvingOption...)","url":"resolveDetailed(E,org.tensorics.core.resolve.options.ResolvingOption...)"},{"p":"org.tensorics.core.tree.domain","c":"ResolvingContext","l":"resolvedValueOf(E)"},{"p":"org.tensorics.core.tree.domain","c":"ResolvingContextImpl","l":"resolvedValueOf(E)"},{"p":"org.tensorics.core.resolve.domain","c":"DetailedExpressionResult","l":"resolvedValueOf(Expression<T>)","url":"resolvedValueOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.resolve.resolvers","c":"ListBackedResolverRepository","l":"resolversFor(E)"},{"p":"org.tensorics.core.resolve.resolvers","c":"ResolverRepository","l":"resolversFor(E)"},{"p":"org.tensorics.core.tree.domain","c":"ResolvingContext","l":"resolves(E)"},{"p":"org.tensorics.core.tree.domain","c":"ResolvingContextImpl","l":"resolves(E)"},{"p":"org.tensorics.core.tree.domain","c":"ResolvingContextImpl","l":"ResolvingContextImpl()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.resolve.domain","c":"ResolvingException","l":"ResolvingException(String, Throwable)","url":"%3Cinit%3E(java.lang.String,java.lang.Throwable)"},{"p":"org.tensorics.core.resolve.domain","c":"ResolvingException","l":"ResolvingException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.tensorics.core.resolve.domain","c":"ResolvingException","l":"ResolvingException(Throwable)","url":"%3Cinit%3E(java.lang.Throwable)"},{"p":"org.tensorics.core.analysis","c":"AnalysisResult","l":"resultFor(AssertionExpression)","url":"resultFor(org.tensorics.core.analysis.expression.AssertionExpression)"},{"p":"org.tensorics.core.resolve.options","c":"RethrowExceptionHandlingStrategy","l":"RethrowExceptionHandlingStrategy()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.resolve.options","c":"ResolvingOptions","l":"rethrowExceptions()"},{"p":"org.tensorics.core.commons.util","c":"AbstractPair","l":"right()"},{"p":"org.tensorics.core.quantity.options","c":"OperandPair","l":"right()"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPair","l":"right()"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPairs","l":"rightDimensionsIn(Iterable<CoContraDimensionPair>)","url":"rightDimensionsIn(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"IterableOperationRepository","l":"rms()"},{"p":"org.tensorics.core.function.lang","c":"FunctionSupportWithConversionAndComparator","l":"rmsOf(DiscreteFunction<Z, Y>)","url":"rmsOf(org.tensorics.core.function.DiscreteFunction)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"rmsOf(Expression<? extends Iterable<Double>>)","url":"rmsOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"rmsOf(Expression<? extends Iterable<V>>)","url":"rmsOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"rmsOf(Expression<? extends Iterable<V>>)","url":"rmsOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"rmsOf(Iterable<Double>)","url":"rmsOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"QuantityIterableSupport","l":"rmsOf(Iterable<QuantifiedValue<V>>)","url":"rmsOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"rmsOf(Iterable<V>)","url":"rmsOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableSupport","l":"rmsOf(Iterable<V>)","url":"rmsOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"rmsOf(Iterable<V>)","url":"rmsOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"rmsOf(Iterable<V>)","url":"rmsOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"rmsOfF(Expression<DiscreteFunction<Double, Double>>)","url":"rmsOfF(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"rmsOfF(Expression<DiscreteFunction<X, V>>)","url":"rmsOfF(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.function.lang","c":"FunctionExpressionSupportWithConversionAndComparator","l":"rmsOfF(Expression<DiscreteFunction<Z, Y>>)","url":"rmsOfF(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"rmsOfQ(Iterable<QuantifiedValue<Double>>)","url":"rmsOfQ(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"rmsOfQ(Iterable<QuantifiedValue<V>>)","url":"rmsOfQ(java.lang.Iterable)"},{"p":"org.tensorics.core.math","c":"ExtendedField","l":"root()"},{"p":"org.tensorics.core.math.impl","c":"ExtendedFieldImpl","l":"root()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"root()"},{"p":"org.tensorics.core.fields.doubles","c":"DoubleMath","l":"root(Double, Double)","url":"root(java.lang.Double,java.lang.Double)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"root(Expression<S>)","url":"root(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"root(QuantifiedValue<S>)","url":"root(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"root(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingScalarBinaryOperation","l":"root(S)"},{"p":"org.tensorics.core.math","c":"Math","l":"root(T, T)","url":"root(T,T)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingBinaryOperation","l":"root(T)"},{"p":"org.tensorics.core.quantity.options","c":"JScienceQuantificationStrategy","l":"root(Unit, T)","url":"root(org.tensorics.core.units.Unit,T)"},{"p":"org.tensorics.core.quantity.options","c":"QuantificationStrategy","l":"root(Unit, T)","url":"root(org.tensorics.core.units.Unit,T)"},{"p":"org.tensorics.core.resolve.domain","c":"DetailedExpressionResult","l":"rootExpression()"},{"p":"org.tensorics.core.reduction","c":"RootMeanSquare","l":"RootMeanSquare(ExtendedField<S>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.lang","c":"TensoricTask","l":"run()"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"sameValues(Shape, S)","url":"sameValues(org.tensorics.core.tensor.Shape,S)"},{"p":"org.tensorics.core.tensor.operations","c":"TensorInternals","l":"sameValues(Shape, S)","url":"sameValues(org.tensorics.core.tensor.Shape,S)"},{"p":"org.tensorics.core.booleans","c":"ScalarBooleanSupport","l":"ScalarBooleanSupport()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"ScalarExpressionSupport(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.testing.hamcrest","c":"ScalarIsCloseTo","l":"ScalarIsCloseTo(ScalarSupport<S>, S, S)","url":"%3Cinit%3E(org.tensorics.core.scalar.lang.ScalarSupport,S,S)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"ScalarIterableExpressionSupport(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableSupport","l":"ScalarIterableSupport(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"scalarOf(T)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"ScalarSupport(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.incubate.function","c":"Functions","l":"scaleFunction(DiscreteFunction<Double, Double>, double)","url":"scaleFunction(org.tensorics.incubate.function.DiscreteFunction,double)"},{"p":"org.tensorics.core.util.names","c":"ClasspathConstantScanner","l":"scan()"},{"p":"org.tensorics.core.resolve.options","c":"ResolverSelectionStrategy","l":"selectResolver(List<Resolver<R, E>>)","url":"selectResolver(java.util.List)"},{"p":"org.tensorics.core.resolve.options","c":"TakeFirstResolverSelectionStrategy","l":"selectResolver(List<Resolver<R, E>>)","url":"selectResolver(java.util.List)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"setContext(TB, Position)","url":"setContext(TB,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"setContext(TB, Position)","url":"setContext(TB,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"setContext(Tensor<S>, Position)","url":"setContext(org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"setContext(Tensor<V>, Position)","url":"setContext(org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.resolve.engine","c":"DefaultResolvingEngine","l":"setResolverRepository(ResolverRepository)","url":"setResolverRepository(org.tensorics.core.resolve.resolvers.ResolverRepository)"},{"p":"org.tensorics.core.resolve.resolvers","c":"ListBackedResolverRepository","l":"setResolvers(List<Resolver<?, ?>>)","url":"setResolvers(java.util.List)"},{"p":"org.tensorics.core.tree.walking","c":"SkipNodeAndSubTreesCallback","l":"shallBeSkipped(Node)","url":"shallBeSkipped(org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.tree.walking","c":"SkipStepDownCallback","l":"shallSkipStepDownFromParentToChild(Node, Node)","url":"shallSkipStepDownFromParentToChild(org.tensorics.core.tree.domain.Node,org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.tensor","c":"AbstractScalar","l":"shape()"},{"p":"org.tensorics.core.tensor","c":"BroadcastedTensorView","l":"shape()"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor","l":"shape()"},{"p":"org.tensorics.core.tensor","c":"Tensor","l":"shape()"},{"p":"org.tensorics.core.tensor.specific","c":"ImmutableDoubleArrayBackedTensor","l":"shape()"},{"p":"org.tensorics.core.tensor.options","c":"ExactShapesOrOneZeroStrategy","l":"shapeLeftRight(Tensor<?>, Tensor<?>)","url":"shapeLeftRight(org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.options","c":"IntersectionShapingStrategy","l":"shapeLeftRight(Tensor<?>, Tensor<?>)","url":"shapeLeftRight(org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.options","c":"ShapingStrategy","l":"shapeLeftRight(Tensor<?>, Tensor<?>)","url":"shapeLeftRight(org.tensorics.core.tensor.Tensor,org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"shapeOf(Tensorbacked<?>)","url":"shapeOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"shapeOf(Tensorbacked<?>)","url":"shapeOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"shapesOf(Iterable<TB>)","url":"shapesOf(java.lang.Iterable)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedInternals","l":"shapesOf(Iterable<TB>)","url":"shapesOf(java.lang.Iterable)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"shapesOf(Iterable<TB>)","url":"shapesOf(java.lang.Iterable)"},{"p":"org.tensorics.core.util","c":"SingleArgumentConstructorInstantiator","l":"SingleArgumentConstructorInstantiator(Class<R>, Class<A>)","url":"%3Cinit%3E(java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.util","c":"SingleArgumentFactoryMethodInstantiator","l":"SingleArgumentFactoryMethodInstantiator(Class<R>, Class<A>)","url":"%3Cinit%3E(java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.util","c":"SingleArgumentInvokableInstantiator","l":"SingleArgumentInvokableInstantiator(Class<R>, Class<A>)","url":"%3Cinit%3E(java.lang.Class,java.lang.Class)"},{"p":"org.tensorics.core.function","c":"TensoricFunctions","l":"singleCoordinate()"},{"p":"org.tensorics.core.function","c":"TensoricFunctions","l":"singleCoordinateToValue(Tensor<S>)","url":"singleCoordinateToValue(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.function","c":"TensoricFunctions","l":"singleCoordinateToValue(Tensorbacked<S>)","url":"singleCoordinateToValue(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensor.operations","c":"SingleValueTensorCreationOperation","l":"SingleValueTensorCreationOperation(Shape, V)","url":"%3Cinit%3E(org.tensorics.core.tensor.Shape,V)"},{"p":"org.tensorics.core.iterable.lang","c":"IterableOperationRepository","l":"size()"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"size()"},{"p":"org.tensorics.core.tree.domain","c":"ResolvingContext","l":"size()"},{"p":"org.tensorics.core.tree.domain","c":"ResolvingContextImpl","l":"size()"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"sizeOf(Expression<? extends Iterable<?>>)","url":"sizeOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"sizeOf(Expression<? extends Iterable<?>>)","url":"sizeOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"sizeOf(Expression<? extends Iterable<?>>)","url":"sizeOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"sizeOf(Iterable<Double>)","url":"sizeOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"QuantityIterableSupport","l":"sizeOf(Iterable<QuantifiedValue<V>>)","url":"sizeOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"sizeOf(Iterable<V>)","url":"sizeOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableSupport","l":"sizeOf(Iterable<V>)","url":"sizeOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"sizeOf(Iterable<V>)","url":"sizeOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"sizeOf(Iterable<V>)","url":"sizeOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"sizeOf(TB)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"sizeOf(TB)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"sizeOf(Tensor<?>)","url":"sizeOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"sizeOfQ(Iterable<QuantifiedValue<Double>>)","url":"sizeOfQ(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"sizeOfQ(Iterable<QuantifiedValue<V>>)","url":"sizeOfQ(java.lang.Iterable)"},{"p":"org.tensorics.core.reduction","c":"Slicing","l":"slicePosition"},{"p":"org.tensorics.core.reduction","c":"Slicing","l":"Slicing(C)","url":"%3Cinit%3E(C)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingNamedCondition","l":"source"},{"p":"org.tensorics.core.expressions","c":"PredicateExpression","l":"source()"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"squareOf(Double)","url":"squareOf(java.lang.Double)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"squareOf(Expression<Double>)","url":"squareOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"squareOf(Expression<V>)","url":"squareOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"squareOf(Expression<V>)","url":"squareOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.commons.lang","c":"BasicOperationSupport","l":"squareOf(S)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"squareOf(V)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"squareOf(V)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"squareOf(V)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"squareOf(V)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"squareRootOf(Double)","url":"squareRootOf(java.lang.Double)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"squareRootOf(Expression<Double>)","url":"squareRootOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"squareRootOf(Expression<V>)","url":"squareRootOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"squareRootOf(Expression<V>)","url":"squareRootOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.commons.lang","c":"BasicOperationSupport","l":"squareRootOf(S)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"squareRootOf(V)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"squareRootOf(V)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"squareRootOf(V)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"squareRootOf(V)"},{"p":"org.tensorics.core.fields.doubles","c":"DoubleStatistics","l":"standardGaussianCumulativeDistributionFunction(double)"},{"p":"org.tensorics.core.analysis","c":"AssertionResult","l":"status()"},{"p":"org.tensorics.core.analysis","c":"AnalysisResult","l":"statusFor(AssertionExpression)","url":"statusFor(org.tensorics.core.analysis.expression.AssertionExpression)"},{"p":"org.tensorics.core.iterable.lang","c":"IterableOperationRepository","l":"std()"},{"p":"org.tensorics.core.function.lang","c":"FunctionSupportWithConversionAndComparator","l":"stdOf(DiscreteFunction<Z, Y>)","url":"stdOf(org.tensorics.core.function.DiscreteFunction)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"stdOf(Expression<? extends Iterable<V>>)","url":"stdOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"stdOf(Iterable<Double>)","url":"stdOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"QuantityIterableSupport","l":"stdOf(Iterable<QuantifiedValue<V>>)","url":"stdOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"stdOf(Iterable<V>)","url":"stdOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableSupport","l":"stdOf(Iterable<V>)","url":"stdOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"stdOf(Iterable<V>)","url":"stdOf(java.lang.Iterable)"},{"p":"org.tensorics.core.function.lang","c":"FunctionExpressionSupportWithConversionAndComparator","l":"stdOfF(Expression<DiscreteFunction<Z, Y>>)","url":"stdOfF(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"stdOfQ(Iterable<QuantifiedValue<Double>>)","url":"stdOfQ(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"stdOfQ(Iterable<QuantifiedValue<V>>)","url":"stdOfQ(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"stream(Tensor<S>)","url":"stream(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"stream(Tensorbacked<S>)","url":"stream(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"strip(Class<?>)","url":"strip(java.lang.Class)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"stripContext(TB)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"stripContext(TB)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"stripContext(Tensor<S>)","url":"stripContext(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"stripContext(Tensor<S>)","url":"stripContext(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"stripping(Class<?>)","url":"stripping(java.lang.Class)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"stripping(Set<? extends Class<?>>)","url":"stripping(java.util.Set)"},{"p":"org.tensorics.core.function.operations","c":"DiscreteFunctionOperationRepository","l":"subtraction()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"subtraction()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"subtraction()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"subtraction()"},{"p":"org.tensorics.core.quantity.conditions","c":"AbstractQuantityStatisticPredicate","l":"subtractQuantities(QuantifiedValue<S>, QuantifiedValue<S>)","url":"subtractQuantities(org.tensorics.core.quantity.QuantifiedValue,org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.tree.walking","c":"Trees","l":"subTreeContent(Node)","url":"subTreeContent(org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.analysis","c":"AssertionStatus","l":"SUCCESSFUL"},{"p":"org.tensorics.core.iterable.lang","c":"IterableOperationRepository","l":"sum()"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"sumOf(Expression<? extends Iterable<Double>>)","url":"sumOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"sumOf(Expression<? extends Iterable<V>>)","url":"sumOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"sumOf(Expression<? extends Iterable<V>>)","url":"sumOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"sumOf(Iterable<Double>)","url":"sumOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"QuantityIterableSupport","l":"sumOf(Iterable<QuantifiedValue<V>>)","url":"sumOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"sumOf(Iterable<V>)","url":"sumOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableSupport","l":"sumOf(Iterable<V>)","url":"sumOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"sumOf(Iterable<V>)","url":"sumOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"sumOf(Iterable<V>)","url":"sumOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"sumOfQ(Iterable<QuantifiedValue<Double>>)","url":"sumOfQ(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"sumOfQ(Iterable<QuantifiedValue<V>>)","url":"sumOfQ(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"IterableOperationRepository","l":"sumOfSquares()"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"sumOfSquaresOf(Expression<? extends Iterable<Double>>)","url":"sumOfSquaresOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"sumOfSquaresOf(Expression<? extends Iterable<V>>)","url":"sumOfSquaresOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"sumOfSquaresOf(Expression<? extends Iterable<V>>)","url":"sumOfSquaresOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"sumOfSquaresOf(Iterable<Double>)","url":"sumOfSquaresOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"QuantityIterableSupport","l":"sumOfSquaresOf(Iterable<QuantifiedValue<V>>)","url":"sumOfSquaresOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"sumOfSquaresOf(Iterable<V>)","url":"sumOfSquaresOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableSupport","l":"sumOfSquaresOf(Iterable<V>)","url":"sumOfSquaresOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"sumOfSquaresOf(Iterable<V>)","url":"sumOfSquaresOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"sumOfSquaresOf(Iterable<V>)","url":"sumOfSquaresOf(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor.stream","c":"AbstractTensoricCollector","l":"supplier()"},{"p":"org.tensorics.core.resolve.options","c":"TakeFirstResolverSelectionStrategy","l":"TakeFirstResolverSelectionStrategy()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tensorbacked","c":"AbstractTensorbacked","l":"tensor()"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbacked","l":"tensor()"},{"p":"org.tensorics.incubate.function","c":"ConstantFunction","l":"tensor()"},{"p":"org.tensorics.incubate.function","c":"ExponentialFunction","l":"tensor()"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"tensor(Shape, Function<Position, S>)","url":"tensor(org.tensorics.core.tensor.Shape,java.util.function.Function)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"tensor(Shape, Supplier<S>)","url":"tensor(org.tensorics.core.tensor.Shape,java.util.function.Supplier)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorbackedCollector","l":"TensorbackedCollector(Class<TB>, Function<V, Position>, Function<V, T>)","url":"%3Cinit%3E(java.lang.Class,java.util.function.Function,java.util.function.Function)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"TensorbackedExpressionSupport","l":"TensorbackedExpressionSupport(Environment<V>)","url":"%3Cinit%3E(org.tensorics.core.commons.options.Environment)"},{"p":"org.tensorics.core.tensorbacked","c":"ProxiedInterfaceTensorbackeds","l":"tensorbackedInterfaceFrom(T)"},{"p":"org.tensorics.core.tensorbacked.lang","c":"TensorbackedSupport","l":"TensorbackedSupport(Environment<S>)","url":"%3Cinit%3E(org.tensorics.core.commons.options.Environment)"},{"p":"org.tensorics.core.booleans","c":"TensorBooleanSupport","l":"TensorBooleanSupport(OptionRegistry<ManipulationOption>)","url":"%3Cinit%3E(org.tensorics.core.commons.options.OptionRegistry)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorCollector","l":"TensorCollector(Set<Class<?>>, Function<V, Position>, Function<V, T>)","url":"%3Cinit%3E(java.util.Set,java.util.function.Function,java.util.function.Function)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreams","l":"tensorEntryStream(Tensor<S>)","url":"tensorEntryStream(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorExpressionSupport","l":"TensorExpressionSupport(Environment<V>)","url":"%3Cinit%3E(org.tensorics.core.commons.options.Environment)"},{"p":"org.tensorics.core.tensorbacked.operations","c":"TensorExtractionOperation","l":"TensorExtractionOperation()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"TensoricDoubleExpressions()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressionSupport","l":"TensoricDoubleExpressionSupport()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleSupport","l":"TensoricDoubleSupport()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.testing.lang","c":"TensoricDoubleTestingSupport","l":"TensoricDoubleTestingSupport()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"TensoricExpressionSupport(EnvironmentImpl<V>)","url":"%3Cinit%3E(org.tensorics.core.lang.EnvironmentImpl)"},{"p":"org.tensorics.core.lang","c":"TensoricScript","l":"TensoricScript(EnvironmentImpl<E>)","url":"%3Cinit%3E(org.tensorics.core.lang.EnvironmentImpl)"},{"p":"org.tensorics.core.resolve.resolvers","c":"TensoricScriptResolver","l":"TensoricScriptResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"TensoricSupport(EnvironmentImpl<V>)","url":"%3Cinit%3E(org.tensorics.core.lang.EnvironmentImpl)"},{"p":"org.tensorics.core.lang","c":"TensoricTask","l":"TensoricTask(EnvironmentImpl<E>)","url":"%3Cinit%3E(org.tensorics.core.lang.EnvironmentImpl)"},{"p":"org.tensorics.core.testing.lang","c":"TensoricTestingSupport","l":"TensoricTestingSupport(EnvironmentImpl<S>)","url":"%3Cinit%3E(org.tensorics.core.lang.EnvironmentImpl)"},{"p":"org.tensorics.core.testing","c":"TensoricTests","l":"TensoricTests()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.testing.hamcrest","c":"TensorIsCloseTo","l":"TensorIsCloseTo(TensorSupport<S>, Tensor<S>, S)","url":"%3Cinit%3E(org.tensorics.core.tensor.lang.TensorSupport,org.tensorics.core.tensor.Tensor,S)"},{"p":"org.tensorics.core.tensor.operations","c":"TensorReduction","l":"TensorReduction(Class<? extends C>, ReductionStrategy<? super C, E, R>)","url":"%3Cinit%3E(java.lang.Class,org.tensorics.core.reduction.ReductionStrategy)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"tensorsOf(Iterable<? extends Tensorbacked<S>>)","url":"tensorsOf(java.lang.Iterable)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedInternals","l":"tensorsOf(Iterable<? extends Tensorbacked<S>>)","url":"tensorsOf(java.lang.Iterable)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"tensorsOf(Iterable<? extends Tensorbacked<S>>)","url":"tensorsOf(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorSupport","l":"TensorSupport(Environment<V>)","url":"%3Cinit%3E(org.tensorics.core.commons.options.Environment)"},{"p":"org.tensorics.core.tensorbacked.operations","c":"TensorWrappingOperation","l":"TensorWrappingOperation(Class<TB>)","url":"%3Cinit%3E(java.lang.Class)"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityGreaterPredicate","l":"test(QuantifiedValue<S>, QuantifiedValue<S>)","url":"test(org.tensorics.core.quantity.QuantifiedValue,org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityLessPredicate","l":"test(QuantifiedValue<S>, QuantifiedValue<S>)","url":"test(org.tensorics.core.quantity.QuantifiedValue,org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.math.predicates","c":"BinaryPredicate","l":"test(T, T)","url":"test(T,T)"},{"p":"org.tensorics.core.math.predicates","c":"IsEqualTo","l":"test(T, T)","url":"test(T,T)"},{"p":"org.tensorics.core.math.predicates","c":"IsNotEqualTo","l":"test(T, T)","url":"test(T,T)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"testIf(Double)","url":"testIf(java.lang.Double)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"testIf(Expression<Double>)","url":"testIf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions","l":"testIf(Expression<T>)","url":"testIf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"testIf(Expression<V>)","url":"testIf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"testIf(Expression<V>)","url":"testIf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"testIf(QuantifiedValue<Double>)","url":"testIf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"testIf(QuantifiedValue<V>)","url":"testIf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"testIf(QuantifiedValue<V>)","url":"testIf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions","l":"testIf(T)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"testIf(V)"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"testIf(V)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"testIfIt(Expression<Iterable<Double>>)","url":"testIfIt(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableExpressionSupport","l":"testIfIt(Expression<Iterable<V>>)","url":"testIfIt(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"testIfIt(Expression<Iterable<V>>)","url":"testIfIt(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResampling","l":"then()"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingResampling","l":"then()"},{"p":"org.tensorics.core.util.chains","c":"Chains.OngoingBranch","l":"then(BiFunction<? super T, Function<Object, R>, R>)","url":"then(java.util.function.BiFunction)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResampling","l":"then(Class<C>, SingleDimensionResampler<C, V>)","url":"then(java.lang.Class,org.tensorics.core.tensor.resample.SingleDimensionResampler)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingResampling","l":"then(Class<C>, SingleDimensionResampler<C, V>)","url":"then(java.lang.Class,org.tensorics.core.tensor.resample.SingleDimensionResampler)"},{"p":"org.tensorics.core.tensor.resample","c":"MultiDimensionalResampling","l":"then(Class<C>, SingleDimensionResampler<C, V>)","url":"then(java.lang.Class,org.tensorics.core.tensor.resample.SingleDimensionResampler)"},{"p":"org.tensorics.core.tensor.coordinates","c":"PositionOrdering","l":"then(Class<T>, Comparator<T>)","url":"then(java.lang.Class,java.util.Comparator)"},{"p":"org.tensorics.core.tensor.coordinates","c":"PositionOrdering","l":"then(Class<T>)","url":"then(java.lang.Class)"},{"p":"org.tensorics.core.util.chains","c":"Chains.OngoingBranch","l":"then(Function<? super T, R>)","url":"then(java.util.function.Function)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingPrecondition","l":"thenAssertAllBoolean(Set<? extends Expression<Boolean>>)","url":"thenAssertAllBoolean(java.util.Set)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingPrecondition","l":"thenAssertAtLeastOneBooleanOf(Expression<? extends Iterable<Boolean>>)","url":"thenAssertAtLeastOneBooleanOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingPrecondition","l":"thenAssertBoolean(Boolean)","url":"thenAssertBoolean(java.lang.Boolean)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingPrecondition","l":"thenAssertBoolean(Expression<Boolean>)","url":"thenAssertBoolean(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingPrecondition","l":"thenAssertLatestBooleanOf(Expression<? extends Iterable<Boolean>>)","url":"thenAssertLatestBooleanOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingPrecondition","l":"thenAssertThat(Expression<T1>)","url":"thenAssertThat(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingPrecondition","l":"thenAssertThat(T1)"},{"p":"org.tensorics.core.quantity.options","c":"ThrowIfOneInvalidStrategy","l":"ThrowIfOneInvalidStrategy()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.function.lang","c":"OngoingDiscreteFunctionBinaryOperation","l":"times(DiscreteFunction<X, Y>)","url":"times(org.tensorics.core.function.DiscreteFunction)"},{"p":"org.tensorics.core.function.lang","c":"OngoingDeferredDiscreteFunctionBinaryOperation","l":"times(Expression<DiscreteFunction<X, Y>>)","url":"times(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"times(Expression<QuantifiedValue<S>>)","url":"times(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"times(Expression<S>)","url":"times(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"times(QuantifiedValue<S>)","url":"times(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"times(QuantifiedValue<S>)","url":"times(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingDeferredQuantifiedScalarOperation","l":"times(S, Unit<?>)","url":"times(S,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"times(S, Unit<?>)","url":"times(S,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"times(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingScalarBinaryOperation","l":"times(S)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingBinaryOperation","l":"times(T)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingTensorOperation","l":"times(Tensor<V>)","url":"times(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarConversion","l":"to(Unit)","url":"to(org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarConversion","l":"to(Unit<?>)","url":"to(javax.measure.unit.Unit)"},{"p":"org.tensorics.core.fields.doubles","c":"DoubleCheating","l":"toDouble(Double)","url":"toDouble(java.lang.Double)"},{"p":"org.tensorics.core.math","c":"Cheating","l":"toDouble(T)"},{"p":"org.tensorics.core.functional","c":"FiniteArgumentFunction","l":"toFuncN()"},{"p":"org.tensorics.core.functional","c":"Func1","l":"toFuncN()"},{"p":"org.tensorics.core.functional","c":"Func2","l":"toFuncN()"},{"p":"org.tensorics.core.functional","c":"Func3","l":"toFuncN()"},{"p":"org.tensorics.core.functional","c":"Func4","l":"toFuncN()"},{"p":"org.tensorics.core.functional","c":"Func5","l":"toFuncN()"},{"p":"org.tensorics.core.functional","c":"Func6","l":"toFuncN()"},{"p":"org.tensorics.core.functional","c":"Func7","l":"toFuncN()"},{"p":"org.tensorics.core.functional","c":"Func8","l":"toFuncN()"},{"p":"org.tensorics.core.functional","c":"Func9","l":"toFuncN()"},{"p":"org.tensorics.core.reduction","c":"ToFunctions","l":"ToFunctions()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPair","l":"toLeft(Object)","url":"toLeft(java.lang.Object)"},{"p":"org.tensorics.core.tensor.specific","c":"TooLargeForArrayException","l":"TooLargeForArrayException(String)","url":"%3Cinit%3E(java.lang.String)"},{"p":"org.tensorics.core.tensor.variance","c":"CoContraDimensionPair","l":"toRight(Object)","url":"toRight(java.lang.Object)"},{"p":"org.tensorics.core.analysis","c":"AnalysisResult","l":"toString()"},{"p":"org.tensorics.core.analysis","c":"AssertionResult","l":"toString()"},{"p":"org.tensorics.core.analysis.expression","c":"AnalysisExpression","l":"toString()"},{"p":"org.tensorics.core.analysis.expression","c":"AssertionExpression","l":"toString()"},{"p":"org.tensorics.core.booleans.operations","c":"And","l":"toString()"},{"p":"org.tensorics.core.booleans.operations","c":"Or","l":"toString()"},{"p":"org.tensorics.core.expressions","c":"BinaryOperationExpression","l":"toString()"},{"p":"org.tensorics.core.expressions","c":"BinaryPredicateExpression","l":"toString()"},{"p":"org.tensorics.core.expressions","c":"ConversionOperationExpression","l":"toString()"},{"p":"org.tensorics.core.expressions","c":"CreationOperationExpression","l":"toString()"},{"p":"org.tensorics.core.expressions","c":"IsEqualToExpression","l":"toString()"},{"p":"org.tensorics.core.expressions","c":"IsNotEqualExpression","l":"toString()"},{"p":"org.tensorics.core.expressions","c":"IterableResolvingExpression","l":"toString()"},{"p":"org.tensorics.core.expressions","c":"LatestOfExpression","l":"toString()"},{"p":"org.tensorics.core.expressions","c":"Placeholder","l":"toString()"},{"p":"org.tensorics.core.expressions","c":"PredicateExpression","l":"toString()"},{"p":"org.tensorics.core.expressions","c":"UnaryOperationExpression","l":"toString()"},{"p":"org.tensorics.core.fields.doubles","c":"AbstractOrderedField","l":"toString()"},{"p":"org.tensorics.core.function","c":"MapBackedDiscreteFunction","l":"toString()"},{"p":"org.tensorics.core.function.operations","c":"AbstractDiscreteFunctionBinaryOperation","l":"toString()"},{"p":"org.tensorics.core.functional.expressions","c":"FunctionalExpression","l":"toString()"},{"p":"org.tensorics.core.iterable.expressions","c":"BinaryPredicateIterableExpression","l":"toString()"},{"p":"org.tensorics.core.iterable.expressions","c":"IterableExpressionToIterable","l":"toString()"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression","l":"toString()"},{"p":"org.tensorics.core.lang","c":"EnvironmentImpl","l":"toString()"},{"p":"org.tensorics.core.lang","c":"TensoricScript","l":"toString()"},{"p":"org.tensorics.core.math.structures.grouplike","c":"AbstractAbelianGroup","l":"toString()"},{"p":"org.tensorics.core.quantity","c":"ImmutableErronousValue","l":"toString()"},{"p":"org.tensorics.core.quantity","c":"ImmutableQuantifiedValue","l":"toString()"},{"p":"org.tensorics.core.quantity.conditions","c":"AbstractQuantityStatisticPredicate","l":"toString()"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityGreaterPredicate","l":"toString()"},{"p":"org.tensorics.core.quantity.conditions","c":"QuantityLessPredicate","l":"toString()"},{"p":"org.tensorics.core.quantity.operations","c":"AbstractQuantityOperation","l":"toString()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityBinaryOperation","l":"toString()"},{"p":"org.tensorics.core.quantity.options","c":"ImmutableConfidenceLevel","l":"toString()"},{"p":"org.tensorics.core.quantity.options","c":"JScienceQuantificationStrategy","l":"toString()"},{"p":"org.tensorics.core.resolve.domain","c":"DetailedExpressionResult","l":"toString()"},{"p":"org.tensorics.core.tensor","c":"BroadcastedTensorView","l":"toString()"},{"p":"org.tensorics.core.tensor","c":"ImmutableScalar","l":"toString()"},{"p":"org.tensorics.core.tensor","c":"ImmutableTensor","l":"toString()"},{"p":"org.tensorics.core.tensor","c":"Position","l":"toString()"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"toString()"},{"p":"org.tensorics.core.tensor.coordinates","c":"PositionOrdering","l":"toString()"},{"p":"org.tensorics.core.tensor.operations","c":"ElementBinaryFunction","l":"toString()"},{"p":"org.tensorics.core.tensor.operations","c":"ElementUnaryOperation","l":"toString()"},{"p":"org.tensorics.core.tensor.operations","c":"FunctionTensorCreationOperation","l":"toString()"},{"p":"org.tensorics.core.tensor.operations","c":"InnerTensorOperation","l":"toString()"},{"p":"org.tensorics.core.tensor.variance","c":"Covariant","l":"toString()"},{"p":"org.tensorics.core.tensorbacked","c":"AbstractTensorbacked","l":"toString()"},{"p":"org.tensorics.core.tensorbacked.operations","c":"ElementTensorBackedUnaryOperation","l":"toString()"},{"p":"org.tensorics.core.tree.domain","c":"ResolvedExpression","l":"toString()"},{"p":"org.tensorics.core.units","c":"JScienceUnit","l":"toString()"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreams","l":"toTensor(Function<V, Position>, Function<V, T>, Set<Class<?>>)","url":"toTensor(java.util.function.Function,java.util.function.Function,java.util.Set)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreams","l":"toTensor(Set<Class<?>>)","url":"toTensor(java.util.Set)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreams","l":"toTensorbacked(Class<TB>, Function<V, Position>, Function<V, T>)","url":"toTensorbacked(java.lang.Class,java.util.function.Function,java.util.function.Function)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreams","l":"toTensorbacked(Class<TB>)","url":"toTensorbacked(java.lang.Class)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingFieldAwareResampling","l":"toTensoric()"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingResampling","l":"toTensoric()"},{"p":"org.tensorics.incubate.function","c":"AnalyticalFunction","l":"toText()"},{"p":"org.tensorics.incubate.function","c":"ConstantFunction","l":"toText()"},{"p":"org.tensorics.incubate.function","c":"ExponentialFunction","l":"toText()"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"toThePowerOf(Expression<S>)","url":"toThePowerOf(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.quantity.lang","c":"OngoingQuantifiedScalarOperation","l":"toThePowerOf(QuantifiedValue<S>)","url":"toThePowerOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingDeferredBinaryOperation","l":"toThePowerOf(S)"},{"p":"org.tensorics.core.scalar.lang","c":"OngoingScalarBinaryOperation","l":"toThePowerOf(S)"},{"p":"org.tensorics.core.commons.lang","c":"OngoingBinaryOperation","l":"toThePowerOf(T)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"transformEntries(Tensor<S>, Function<Map.Entry<Position, S>, T>)","url":"transformEntries(org.tensorics.core.tensor.Tensor,java.util.function.Function)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"transformEntries(Tensor<S>, Function<Map.Entry<Position, S>, T>)","url":"transformEntries(org.tensorics.core.tensor.Tensor,java.util.function.Function)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"transformScalars(Tensor<S>, BiFunction<Position, S, T>)","url":"transformScalars(org.tensorics.core.tensor.Tensor,java.util.function.BiFunction)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorStructurals","l":"transformScalars(Tensor<S>, Function<S, T>)","url":"transformScalars(org.tensorics.core.tensor.Tensor,java.util.function.Function)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"two()"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"two()"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"two()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"two()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"two()"},{"p":"org.tensorics.core.quantity.lang","c":"QuantityExpressionSupport","l":"two()"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"two()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"two()"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"two()"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"two()"},{"p":"org.tensorics.core.expressions","c":"UnaryOperationExpression","l":"UnaryOperationExpression(UnaryOperation<T>, Expression<T>)","url":"%3Cinit%3E(org.tensorics.core.math.operations.UnaryOperation,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.resolve.resolvers","c":"UnaryOperationResolver","l":"UnaryOperationResolver()","url":"%3Cinit%3E()"},{"p":"org.tensorics.core.quantity.options","c":"UncorrelatedErrorPropagationStrategy","l":"UncorrelatedErrorPropagationStrategy(ExtendedField<V>)","url":"%3Cinit%3E(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.tensor","c":"Shapes","l":"union(Iterable<Shape>)","url":"union(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"union(Position, Position)","url":"union(org.tensorics.core.tensor.Position,org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.tensor","c":"Shapes","l":"union(Shape, Shape)","url":"union(org.tensorics.core.tensor.Shape,org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.tensor","c":"Positions","l":"unique(Iterable<Position>)","url":"unique(java.lang.Iterable)"},{"p":"org.tensorics.core.quantity","c":"ImmutableQuantifiedValue","l":"unit()"},{"p":"org.tensorics.core.quantity","c":"Quantified","l":"unit()"},{"p":"org.tensorics.core.quantity.options","c":"OperandPair","l":"unit()"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"unitOf(Tensor<QuantifiedValue<S>>)","url":"unitOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensors","l":"unitOf(Tensor<QuantifiedValue<S>>)","url":"unitOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"unitOf(Tensorbacked<QuantifiedValue<S>>)","url":"unitOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"unitOf(Tensorbacked<QuantifiedValue<S>>)","url":"unitOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions","l":"use(Expression<T>)","url":"use(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions","l":"use(Expression<T1>, Expression<T2>, Expression<T3>, Expression<T4>, Expression<T5>, Expression<T6>, Expression<T7>, Expression<T8>, Expression<T9>)","url":"use(org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions","l":"use(Expression<T1>, Expression<T2>, Expression<T3>, Expression<T4>, Expression<T5>, Expression<T6>, Expression<T7>, Expression<T8>)","url":"use(org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions","l":"use(Expression<T1>, Expression<T2>, Expression<T3>, Expression<T4>, Expression<T5>, Expression<T6>, Expression<T7>)","url":"use(org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions","l":"use(Expression<T1>, Expression<T2>, Expression<T3>, Expression<T4>, Expression<T5>, Expression<T6>)","url":"use(org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions","l":"use(Expression<T1>, Expression<T2>, Expression<T3>, Expression<T4>, Expression<T5>)","url":"use(org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions","l":"use(Expression<T1>, Expression<T2>, Expression<T3>, Expression<T4>)","url":"use(org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions","l":"use(Expression<T1>, Expression<T2>, Expression<T3>)","url":"use(org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressions","l":"use(Expression<T1>, Expression<T2>)","url":"use(org.tensorics.core.tree.domain.Expression,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"using(ExtendedField<E>)","url":"using(org.tensorics.core.math.ExtendedField)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"validitiesOf(Tensor<QuantifiedValue<S>>)","url":"validitiesOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensors","l":"validitiesOf(Tensor<QuantifiedValue<S>>)","url":"validitiesOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"validitiesOf(Tensorbacked<QuantifiedValue<S>>)","url":"validitiesOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"validitiesOf(Tensorbacked<QuantifiedValue<S>>)","url":"validitiesOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.quantity","c":"ImmutableQuantifiedValue","l":"validity()"},{"p":"org.tensorics.core.quantity","c":"ValidityAware","l":"validity()"},{"p":"org.tensorics.core.quantity.operations","c":"AbstractQuantityOperation","l":"validityFor(QuantifiedValue<V>, QuantifiedValue<V>)","url":"validityFor(org.tensorics.core.quantity.QuantifiedValue,org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.options","c":"BinaryOperationValidityStrategy","l":"validityForBinaryOperation(ValidityAware, ValidityAware)","url":"validityForBinaryOperation(org.tensorics.core.quantity.ValidityAware,org.tensorics.core.quantity.ValidityAware)"},{"p":"org.tensorics.core.quantity.options","c":"RequireBothValidStrategy","l":"validityForBinaryOperation(ValidityAware, ValidityAware)","url":"validityForBinaryOperation(org.tensorics.core.quantity.ValidityAware,org.tensorics.core.quantity.ValidityAware)"},{"p":"org.tensorics.core.quantity.options","c":"ThrowIfOneInvalidStrategy","l":"validityForBinaryOperation(ValidityAware, ValidityAware)","url":"validityForBinaryOperation(org.tensorics.core.quantity.ValidityAware,org.tensorics.core.quantity.ValidityAware)"},{"p":"org.tensorics.core.quantity","c":"ErronousValue","l":"value()"},{"p":"org.tensorics.core.quantity","c":"ImmutableErronousValue","l":"value()"},{"p":"org.tensorics.core.quantity","c":"ImmutableQuantifiedValue","l":"value()"},{"p":"org.tensorics.core.resolve.domain","c":"DetailedExpressionResult","l":"value()"},{"p":"org.tensorics.core.tensor","c":"ImmutableScalar","l":"value()"},{"p":"org.tensorics.core.tensor","c":"Scalar","l":"value()"},{"p":"org.tensorics.core.tensorbacked.annotation","c":"Dimensions","l":"value()"},{"p":"org.tensorics.core.tensorbacked.dimtyped","c":"TensorbackedScalar","l":"value()"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"valueOf(Double, Unit)","url":"valueOf(java.lang.Double,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"valueOf(Double, Unit<?>)","url":"valueOf(java.lang.Double,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"valueOf(QuantifiedValue<Double>)","url":"valueOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"valueOf(QuantifiedValue<V>)","url":"valueOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"valueOf(QuantifiedValue<V>)","url":"valueOf(org.tensorics.core.quantity.QuantifiedValue)"},{"p":"org.tensorics.core.analysis","c":"AssertionStatus","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression.Mode","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.tensorics.core.util","c":"InstantiatorType","l":"valueOf(String)","url":"valueOf(java.lang.String)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"valueOf(V, Unit)","url":"valueOf(V,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"valueOf(V, Unit)","url":"valueOf(V,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantityExpressionSupport","l":"valueOf(V, Unit)","url":"valueOf(V,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"valueOf(V, Unit)","url":"valueOf(V,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"valueOf(V, Unit<?>)","url":"valueOf(V,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"valueOf(V, Unit<?>)","url":"valueOf(V,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantityExpressionSupport","l":"valueOf(V, Unit<?>)","url":"valueOf(V,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"valueOf(V, Unit<?>)","url":"valueOf(V,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.util","c":"Reflections","l":"valueOfField(Field, Object)","url":"valueOfField(java.lang.reflect.Field,java.lang.Object)"},{"p":"org.tensorics.core.util","c":"Reflections","l":"valueOfStaticField(Field)","url":"valueOfStaticField(java.lang.reflect.Field)"},{"p":"org.tensorics.core.analysis","c":"AssertionStatus","l":"values()"},{"p":"org.tensorics.core.iterable.expressions","c":"PickExpression.Mode","l":"values()"},{"p":"org.tensorics.core.util","c":"InstantiatorType","l":"values()"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreamMappers","l":"values(BiFunction<Position, I, O>)","url":"values(java.util.function.BiFunction)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreams","l":"values(BiFunction<Position, I, O>)","url":"values(java.util.function.BiFunction)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreamMappers","l":"values(Function<I, O>)","url":"values(java.util.function.Function)"},{"p":"org.tensorics.core.tensor.stream","c":"TensorStreams","l":"values(Function<I, O>)","url":"values(java.util.function.Function)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"valuesOf(Iterable<QuantifiedValue<Double>>)","url":"valuesOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"QuantityIterableSupport","l":"valuesOf(Iterable<QuantifiedValue<V>>)","url":"valuesOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"valuesOf(Iterable<QuantifiedValue<V>>)","url":"valuesOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"valuesOf(Tensor<QuantifiedValue<Double>>)","url":"valuesOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"valuesOf(Tensor<QuantifiedValue<S>>)","url":"valuesOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensorSupport","l":"valuesOf(Tensor<QuantifiedValue<S>>)","url":"valuesOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensor.lang","c":"QuantityTensors","l":"valuesOf(Tensor<QuantifiedValue<S>>)","url":"valuesOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"valuesOf(Tensor<QuantifiedValue<V>>)","url":"valuesOf(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"valuesOf(Tensorbacked<QuantifiedValue<S>>)","url":"valuesOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.tensorbacked","c":"Tensorbackeds","l":"valuesOf(Tensorbacked<QuantifiedValue<S>>)","url":"valuesOf(org.tensorics.core.tensorbacked.Tensorbacked)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"valuesOfI(Iterable<QuantifiedValue<Double>>)","url":"valuesOfI(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"valuesOfI(Iterable<QuantifiedValue<V>>)","url":"valuesOfI(java.lang.Iterable)"},{"p":"org.tensorics.core.tensorbacked","c":"TensorbackedInternals","l":"valueTypeFrom(Class<T>)","url":"valueTypeFrom(java.lang.Class)"},{"p":"org.tensorics.core.iterable.lang","c":"IterableOperationRepository","l":"var()"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"varOf(Iterable<Double>)","url":"varOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"QuantityIterableSupport","l":"varOf(Iterable<QuantifiedValue<V>>)","url":"varOf(java.lang.Iterable)"},{"p":"org.tensorics.core.iterable.lang","c":"ScalarIterableSupport","l":"varOf(Iterable<V>)","url":"varOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"varOf(Iterable<V>)","url":"varOf(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"varOfQ(Iterable<QuantifiedValue<Double>>)","url":"varOfQ(java.lang.Iterable)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"varOfQ(Iterable<QuantifiedValue<V>>)","url":"varOfQ(java.lang.Iterable)"},{"p":"org.tensorics.core.tensor","c":"VerificationCallback","l":"verify(S)"},{"p":"org.tensorics.core.util","c":"Reflections","l":"verifyAllDeclaredGettersReturnSomething(Object)","url":"verifyAllDeclaredGettersReturnSomething(java.lang.Object)"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"viewOf(Set<? extends Class<?>>, Set<Position>)","url":"viewOf(java.util.Set,java.util.Set)"},{"p":"org.tensorics.core.tree.walking","c":"ParentAfterChildrenWalker","l":"walk(Node, NodeCallback)","url":"walk(org.tensorics.core.tree.domain.Node,org.tensorics.core.tree.walking.NodeCallback)"},{"p":"org.tensorics.core.tree.walking","c":"TreeWalker","l":"walk(Node, NodeCallback)","url":"walk(org.tensorics.core.tree.domain.Node,org.tensorics.core.tree.walking.NodeCallback)"},{"p":"org.tensorics.core.tree.walking","c":"Trees","l":"walkParentAfterChildren(Node, NodeCallback)","url":"walkParentAfterChildren(org.tensorics.core.tree.domain.Node,org.tensorics.core.tree.walking.NodeCallback)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAnalysisEnabler","l":"when(Expression<T>)","url":"when(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"when(Expression<T1>)","url":"when(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"when(T1)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"whenAllTrue(Iterable<Expression<Boolean>>)","url":"whenAllTrue(java.lang.Iterable)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAnalysisEnabler","l":"whenBoolean(Expression<Boolean>)","url":"whenBoolean(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"whenFalse(Expression<Boolean>)","url":"whenFalse(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"whenNot(Expression<Boolean>)","url":"whenNot(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis","c":"AnalysisModule","l":"whenTrue(Expression<Boolean>)","url":"whenTrue(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.booleans","c":"BooleanSupport","l":"with(ManipulationOption)","url":"with(org.tensorics.core.commons.options.ManipulationOption)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"with(ManipulationOption)","url":"with(org.tensorics.core.commons.options.ManipulationOption)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"with(ManipulationOption)","url":"with(org.tensorics.core.commons.options.ManipulationOption)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"with(ManipulationOption)","url":"with(org.tensorics.core.commons.options.ManipulationOption)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingCompletion","l":"with(Shape, S)","url":"with(org.tensorics.core.tensor.Shape,S)"},{"p":"org.tensorics.core.tensorbacked","c":"OngoingTensorbackedCompletion","l":"with(Shape, S)","url":"with(org.tensorics.core.tensor.Shape,S)"},{"p":"org.tensorics.core.lang","c":"EnvironmentImpl","l":"with(T)"},{"p":"org.tensorics.core.commons.options","c":"ImmutableOptionRegistry","l":"with(T1)"},{"p":"org.tensorics.core.commons.options","c":"OptionRegistry","l":"with(T1)"},{"p":"org.tensorics.core.tensorbacked","c":"OngoingTensorbackedCompletion","l":"with(TB)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingCompletion","l":"with(Tensor<S>)","url":"with(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.tensorbacked","c":"OngoingTensorbackedCompletion","l":"with(Tensor<S>)","url":"with(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.incubate.function","c":"ExponentialFunction.Builder","l":"withAmplitude(Amount<QY>)","url":"withAmplitude(org.jscience.physics.amount.Amount)"},{"p":"org.tensorics.core.util","c":"Instantiators.OngoingInstantiatorCreation","l":"withArgumentType(Class<A>)","url":"withArgumentType(java.lang.Class)"},{"p":"org.tensorics.core.analysis","c":"ConditionBuilder","l":"withCondition(Expression<Boolean>)","url":"withCondition(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.resolve.domain","c":"ExceptionHandlingRequest.Builder","l":"withContext(EditableResolvingContext)","url":"withContext(org.tensorics.core.tree.domain.EditableResolvingContext)"},{"p":"org.tensorics.core.tensor","c":"ImmutableScalar","l":"withContext(Object...)","url":"withContext(java.lang.Object...)"},{"p":"org.tensorics.core.tensor","c":"ImmutableScalar","l":"withContext(Position)","url":"withContext(org.tensorics.core.tensor.Position)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubleExpressions","l":"withConversionAndComparator(Conversion<X, Double>, Comparator<X>)","url":"withConversionAndComparator(org.tensorics.core.commons.operations.Conversion,java.util.Comparator)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"withConversionAndComparator(Conversion<X, V>, Comparator<X>)","url":"withConversionAndComparator(org.tensorics.core.commons.operations.Conversion,java.util.Comparator)"},{"p":"org.tensorics.core.function.lang","c":"FunctionExpressionSupport","l":"withConversionAndComparator(Conversion<X, Y>, Comparator<X>)","url":"withConversionAndComparator(org.tensorics.core.commons.operations.Conversion,java.util.Comparator)"},{"p":"org.tensorics.core.function.lang","c":"FunctionSupport","l":"withConversionAndComparator(Conversion<X, Y>, Comparator<X>)","url":"withConversionAndComparator(org.tensorics.core.commons.operations.Conversion,java.util.Comparator)"},{"p":"org.tensorics.core.quantity","c":"ImmutableQuantifiedValue","l":"withError(Optional<V>)","url":"withError(com.google.common.base.Optional)"},{"p":"org.tensorics.core.quantity","c":"ImmutableQuantifiedValue","l":"withError(V)"},{"p":"org.tensorics.core.resolve.domain","c":"ExceptionHandlingRequest.Builder","l":"withException(RuntimeException)","url":"withException(java.lang.RuntimeException)"},{"p":"org.tensorics.core.testing.lang","c":"TensoricTestingSupport","l":"within(S)"},{"p":"org.tensorics.incubate.function","c":"DiscreteFunctionBuilder","l":"withInterpolationStrategy(InterpolationStrategy<X, Y>)","url":"withInterpolationStrategy(org.tensorics.incubate.function.InterpolationStrategy)"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction.Builder","l":"withInterpolationStrategy(InterpolationStrategy<X, Y>)","url":"withInterpolationStrategy(org.tensorics.incubate.function.InterpolationStrategy)"},{"p":"org.tensorics.incubate.function","c":"ExponentialFunction.Builder","l":"withInverseExponentialConstant(Amount<QX>)","url":"withInverseExponentialConstant(org.jscience.physics.amount.Amount)"},{"p":"org.tensorics.core.analysis","c":"ConditionBuilder","l":"withKey(String)","url":"withKey(java.lang.String)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAllBooleanCondition","l":"withKey(String)","url":"withKey(java.lang.String)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAllBooleanExcludableCondition","l":"withKey(String)","url":"withKey(java.lang.String)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAnyBooleanCondition","l":"withKey(String)","url":"withKey(java.lang.String)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingNamedCondition","l":"withKey(String)","url":"withKey(java.lang.String)"},{"p":"org.tensorics.core.tensor.lang","c":"OngoingInterpolation","l":"withLinearInterpolation(ExtendedField<E>, Function<C, E>)","url":"withLinearInterpolation(org.tensorics.core.math.ExtendedField,java.util.function.Function)"},{"p":"org.tensorics.core.analysis","c":"ConditionBuilder","l":"withName(String)","url":"withName(java.lang.String)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAllBooleanCondition","l":"withName(String)","url":"withName(java.lang.String)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAllBooleanExcludableCondition","l":"withName(String)","url":"withName(java.lang.String)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingAnyBooleanCondition","l":"withName(String)","url":"withName(java.lang.String)"},{"p":"org.tensorics.core.analysis.lang","c":"OngoingNamedCondition","l":"withName(String)","url":"withName(java.lang.String)"},{"p":"org.tensorics.incubate.function","c":"DiscreteFunctionBuilder","l":"withName(String)","url":"withName(java.lang.String)"},{"p":"org.tensorics.incubate.function","c":"SortedMapBackedDiscreteFunction.Builder","l":"withName(String)","url":"withName(java.lang.String)"},{"p":"org.tensorics.core.analysis","c":"AssertionBuilder","l":"withPreCondition(Expression<Boolean>)","url":"withPreCondition(org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.analysis","c":"AssertionBuilder","l":"withPreConditionReducer(IterableBooleanConversion)","url":"withPreConditionReducer(org.tensorics.core.analysis.lang.IterableBooleanConversion)"},{"p":"org.tensorics.core.resolve.domain","c":"ExceptionHandlingRequest.Builder","l":"withRoot(Node)","url":"withRoot(org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.resolve.domain","c":"ExceptionHandlingRequest.Builder","l":"withThrowingNode(Node)","url":"withThrowingNode(org.tensorics.core.tree.domain.Node)"},{"p":"org.tensorics.core.quantity","c":"ImmutableQuantifiedValue","l":"withValidity(boolean)"},{"p":"org.tensorics.core.tensorbacked.expressions","c":"TensorbackedExpressions","l":"wrapped(Class<TB>, Expression<Tensor<V>>)","url":"wrapped(java.lang.Class,org.tensorics.core.tree.domain.Expression)"},{"p":"org.tensorics.core.booleans.operations","c":"BooleanOperations","l":"xor()"},{"p":"org.tensorics.core.booleans.operations","c":"BooleanTensorOperationsRepository","l":"xor()"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingBooleanScalarOperation","l":"xor(Boolean)","url":"xor(java.lang.Boolean)"},{"p":"org.tensorics.core.booleans.lang","c":"OngoingBooleanTensorOperation","l":"xor(Tensor<Boolean>)","url":"xor(org.tensorics.core.tensor.Tensor)"},{"p":"org.tensorics.core.function","c":"MathFunctions","l":"yValuesOf(DiscreteFunction<X, Y>)","url":"yValuesOf(org.tensorics.core.function.DiscreteFunction)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"zero()"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"zero()"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"zero()"},{"p":"org.tensorics.core.math","c":"ExplicitField","l":"zero()"},{"p":"org.tensorics.core.math.impl","c":"ExplicitFieldImpl","l":"zero()"},{"p":"org.tensorics.core.quantity.lang","c":"QuantityExpressionSupport","l":"zero()"},{"p":"org.tensorics.core.quantity.lang","c":"QuantitySupport","l":"zero()"},{"p":"org.tensorics.core.quantity.operations","c":"QuantityOperationRepository","l":"zero()"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarExpressionSupport","l":"zero()"},{"p":"org.tensorics.core.scalar.lang","c":"ScalarSupport","l":"zero()"},{"p":"org.tensorics.core.tensor","c":"Shape","l":"zeroDimensional()"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"zeroDimensionalOf(double, Unit)","url":"zeroDimensionalOf(double,org.tensorics.core.units.Unit)"},{"p":"org.tensorics.core.lang","c":"Tensorics","l":"zeroDimensionalOf(double, Unit<?>)","url":"zeroDimensionalOf(double,javax.measure.unit.Unit)"},{"p":"org.tensorics.core.lang","c":"TensoricDoubles","l":"zeros(Shape)","url":"zeros(org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.lang","c":"TensoricExpressionSupport","l":"zeros(Shape)","url":"zeros(org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.lang","c":"TensoricSupport","l":"zeros(Shape)","url":"zeros(org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorExpressionSupport","l":"zeros(Shape)","url":"zeros(org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.tensor.lang","c":"TensorSupport","l":"zeros(Shape)","url":"zeros(org.tensorics.core.tensor.Shape)"},{"p":"org.tensorics.core.quantity.conditions","c":"AbstractQuantityStatisticPredicate","l":"zTestValueForDifference(QuantifiedValue<S>, QuantifiedValue<S>)","url":"zTestValueForDifference(org.tensorics.core.quantity.QuantifiedValue,org.tensorics.core.quantity.QuantifiedValue)"}]