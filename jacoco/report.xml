<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="tensorics-core"><sessioninfo id="travis-job-cc18dfd0-b72c-47d7-bf9f-05231cc6a6dc-e9cebce3" start="1669067865126" dump="1669067876753"/><package name="org/tensorics/core/tensorbacked/operations"><class name="org/tensorics/core/tensorbacked/operations/QuantifiedTensorBackedUnaryOperation" sourcefilename="QuantifiedTensorBackedUnaryOperation.java"/><class name="org/tensorics/core/tensorbacked/operations/TensorBackedUnaryOperation" sourcefilename="TensorBackedUnaryOperation.java"/><class name="org/tensorics/core/tensorbacked/operations/ElementTensorBackedUnaryOperation" sourcefilename="ElementTensorBackedUnaryOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/operations/UnaryOperation;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="53"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="62"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="70"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="22"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="6"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/operations/TensorWrappingOperation" sourcefilename="TensorWrappingOperation.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensorbacked/operations/QuantifiedElementTensorBackedUnaryOperation" sourcefilename="QuantifiedElementTensorBackedUnaryOperation.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="perform" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="40"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensorbacked/operations/TensorExtractionOperation" sourcefilename="TensorExtractionOperation.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/Tensor;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="TensorExtractionOperation.java"><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="QuantifiedTensorBackedUnaryOperation.java"/><sourcefile name="QuantifiedElementTensorBackedUnaryOperation.java"><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ElementTensorBackedUnaryOperation.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="13" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="2" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="2" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="22"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="6"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorWrappingOperation.java"><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TensorBackedUnaryOperation.java"/><counter type="INSTRUCTION" missed="93" covered="22"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="26" covered="6"/><counter type="COMPLEXITY" missed="16" covered="2"/><counter type="METHOD" missed="9" covered="2"/><counter type="CLASS" missed="3" covered="1"/></package><package name="org/tensorics/core/analysis/expression"><class name="org/tensorics/core/analysis/expression/AssertionExpression" sourcefilename="AssertionExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/AssertionBuilder;)V" line="65"><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="condition" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="82"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preConditionsExpression" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="86"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="name" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handle" desc="(Ljava/lang/Exception;)Lorg/tensorics/core/analysis/AssertionResult;" line="95"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="101"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="112"><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="155"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="key" desc="()Ljava/lang/String;" line="160"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultPreconditionOnEmpty" desc="(Ljava/util/Collection;)Ljava/util/Collection;" line="165"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="269" covered="0"/><counter type="BRANCH" missed="40" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="32" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/expression/AnalysisExpression" sourcefilename="AnalysisExpression.java"><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="45"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="51"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="56"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="64"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/expression/PreconditionExpression" sourcefilename="PreconditionExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/operations/Conversion;Lorg/tensorics/core/tree/domain/Expression;)V" line="22"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AssertionExpression.java"><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="5" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="8" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="19" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="13" ci="0" mb="2" cb="0"/><line nr="104" mi="13" ci="0" mb="2" cb="0"/><line nr="105" mi="13" ci="0" mb="2" cb="0"/><line nr="106" mi="13" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="2" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="122" mi="3" ci="0" mb="2" cb="0"/><line nr="123" mi="3" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="6" ci="0" mb="2" cb="0"/><line nr="127" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="3" ci="0" mb="2" cb="0"/><line nr="130" mi="3" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="6" ci="0" mb="2" cb="0"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="3" ci="0" mb="2" cb="0"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="6" ci="0" mb="2" cb="0"/><line nr="141" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="3" ci="0" mb="2" cb="0"/><line nr="144" mi="3" ci="0" mb="2" cb="0"/><line nr="145" mi="2" ci="0" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="2" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="2" ci="0" mb="0" cb="0"/><line nr="155" mi="27" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="0" cb="0"/><line nr="165" mi="8" ci="0" mb="2" cb="0"/><counter type="INSTRUCTION" missed="269" covered="0"/><counter type="BRANCH" missed="40" covered="0"/><counter type="LINE" missed="56" covered="0"/><counter type="COMPLEXITY" missed="32" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AnalysisExpression.java"><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="13" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="2" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="2" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PreconditionExpression.java"><line nr="22" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="352" covered="0"/><counter type="BRANCH" missed="54" covered="0"/><counter type="LINE" missed="80" covered="0"/><counter type="COMPLEXITY" missed="45" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="3" covered="0"/></package><package name="org/tensorics/core/functional"><class name="org/tensorics/core/functional/FiniteArgumentFunction" sourcefilename="FiniteArgumentFunction.java"/><class name="org/tensorics/core/functional/Func6" sourcefilename="Func6.java"><method name="toFuncN" desc="()Lorg/tensorics/core/functional/FuncN;" line="26"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfArgs" desc="()I" line="31"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toFuncN$0" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/functional/Func7" sourcefilename="Func7.java"><method name="toFuncN" desc="()Lorg/tensorics/core/functional/FuncN;" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfArgs" desc="()I" line="33"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toFuncN$0" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/functional/Func8" sourcefilename="Func8.java"><method name="toFuncN" desc="()Lorg/tensorics/core/functional/FuncN;" line="28"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfArgs" desc="()I" line="34"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toFuncN$0" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="28"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/functional/Func9" sourcefilename="Func9.java"><method name="toFuncN" desc="()Lorg/tensorics/core/functional/FuncN;" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfArgs" desc="()I" line="35"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toFuncN$0" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/functional/Func2" sourcefilename="Func2.java"><method name="toFuncN" desc="()Lorg/tensorics/core/functional/FuncN;" line="22"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfArgs" desc="()I" line="27"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toFuncN$0" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/functional/Func3" sourcefilename="Func3.java"><method name="toFuncN" desc="()Lorg/tensorics/core/functional/FuncN;" line="23"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="numberOfArgs" desc="()I" line="28"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$toFuncN$0" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="23"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/functional/Func4" sourcefilename="Func4.java"><method name="toFuncN" desc="()Lorg/tensorics/core/functional/FuncN;" line="24"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfArgs" desc="()I" line="29"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toFuncN$0" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="24"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/functional/Func5" sourcefilename="Func5.java"><method name="toFuncN" desc="()Lorg/tensorics/core/functional/FuncN;" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfArgs" desc="()I" line="30"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toFuncN$0" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="25"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/functional/Func1" sourcefilename="Func1.java"><method name="toFuncN" desc="()Lorg/tensorics/core/functional/FuncN;" line="21"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="numberOfArgs" desc="()I" line="26"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$toFuncN$0" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="21"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/functional/FuncN" sourcefilename="FuncN.java"/><sourcefile name="Func1.java"><line nr="21" mi="9" ci="0" mb="0" cb="0"/><line nr="26" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Func4.java"><line nr="24" mi="18" ci="0" mb="0" cb="0"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FuncN.java"/><sourcefile name="Func5.java"><line nr="25" mi="21" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="FiniteArgumentFunction.java"/><sourcefile name="Func8.java"><line nr="28" mi="30" ci="0" mb="0" cb="0"/><line nr="34" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Func3.java"><line nr="23" mi="0" ci="15" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Func6.java"><line nr="26" mi="24" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Func9.java"><line nr="29" mi="33" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Func7.java"><line nr="27" mi="27" ci="0" mb="0" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Func2.java"><line nr="22" mi="12" ci="0" mb="0" cb="0"/><line nr="27" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="190" covered="17"/><counter type="LINE" missed="16" covered="2"/><counter type="COMPLEXITY" missed="24" covered="3"/><counter type="METHOD" missed="24" covered="3"/><counter type="CLASS" missed="8" covered="1"/></package><package name="org/tensorics/core/functional/expressions"><class name="org/tensorics/core/functional/expressions/FunctionalExpression" sourcefilename="FunctionalExpression.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;Lorg/tensorics/core/functional/FuncN;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="function" desc="()Lorg/tensorics/core/functional/FuncN;" line="40"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="45"><counter type="INSTRUCTION" missed="4" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="54"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="76"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="44"/><counter type="BRANCH" missed="20" covered="2"/><counter type="LINE" missed="19" covered="11"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FunctionalExpression.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="2" ci="11" mb="1" cb="1"/><line nr="48" mi="2" ci="11" mb="1" cb="1"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="2" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="2" cb="0"/><line nr="62" mi="3" ci="0" mb="2" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="2" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="6" ci="0" mb="2" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="44"/><counter type="BRANCH" missed="20" covered="2"/><counter type="LINE" missed="19" covered="11"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="74" covered="44"/><counter type="BRANCH" missed="20" covered="2"/><counter type="LINE" missed="19" covered="11"/><counter type="COMPLEXITY" missed="13" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/tensorics/core/units"><class name="org/tensorics/core/units/JScienceUnit" sourcefilename="JScienceUnit.java"><method name="&lt;init&gt;" desc="(Ljavax/measure/unit/Unit;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljavax/measure/unit/Unit;)Lorg/tensorics/core/units/JScienceUnit;" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getUnit" desc="()Ljavax/measure/unit/Unit;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="56"><counter type="INSTRUCTION" missed="9" covered="28"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="78"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="50"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/units/Unit" sourcefilename="Unit.java"/><sourcefile name="Unit.java"/><sourcefile name="JScienceUnit.java"><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="2"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="1" cb="1"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="5" mb="1" cb="1"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="1" cb="1"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="2"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="13" ci="0" mb="2" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="28" covered="50"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="28" covered="50"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="8" covered="16"/><counter type="COMPLEXITY" missed="6" covered="8"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/tensorics/core/math/structures"><class name="org/tensorics/core/math/structures/Structure" sourcefilename="Structure.java"/><sourcefile name="Structure.java"/></package><package name="org/tensorics/core/function"><class name="org/tensorics/core/function/ContinuousFunction" sourcefilename="ContinuousFunction.java"/><class name="org/tensorics/core/function/PositionToScalarFunction" sourcefilename="PositionToScalarFunction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;)V" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/function/MathFunction" sourcefilename="MathFunction.java"/><class name="org/tensorics/core/function/IllegalDiscreteFunctionUsageException" sourcefilename="IllegalDiscreteFunctionUsageException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/DiscreteFunction" sourcefilename="DiscreteFunction.java"/><class name="org/tensorics/core/function/TensoricFunctions" sourcefilename="TensoricFunctions.java"><method name="forTensor" desc="(Lorg/tensorics/core/tensor/Tensor;)Ljava/util/function/Function;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forTensorbacked" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Ljava/util/function/Function;" line="47"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="singleCoordinate" desc="()Ljava/util/function/Function;" line="51"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="singleCoordinateToValue" desc="(Lorg/tensorics/core/tensor/Tensor;)Ljava/util/function/Function;" line="55"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="singleCoordinateToValue" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Ljava/util/function/Function;" line="59"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/function/CoordinateToPositionFunction" sourcefilename="CoordinateToPositionFunction.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensor/Position;" line="33"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/function/InterpolatedFunction" sourcefilename="InterpolatedFunction.java"/><class name="org/tensorics/core/function/MathFunctions" sourcefilename="MathFunctions.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="functionsFrom" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Class;)Lorg/tensorics/core/tensor/Tensor;" line="44"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="functionFrom1DTensor" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Class;)Lorg/tensorics/core/function/DiscreteFunction;" line="49"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interpolated" desc="(Lorg/tensorics/core/function/DiscreteFunction;Lorg/tensorics/core/function/interpolation/InterpolationStrategy;Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)Lorg/tensorics/core/function/InterpolatedFunction;" line="55"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="yValuesOf" desc="(Lorg/tensorics/core/function/DiscreteFunction;)Ljava/util/Collection;" line="59"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="62"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/DiscreteFunctionBuilder" sourcefilename="DiscreteFunctionBuilder.java"/><class name="org/tensorics/core/function/MapBackedDiscreteFunction$Builder" sourcefilename="MapBackedDiscreteFunction.java"><method name="&lt;init&gt;" desc="()V" line="108"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/util/Map$Entry;)Lorg/tensorics/core/function/DiscreteFunctionBuilder;" line="115"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/tensorics/core/function/DiscreteFunctionBuilder;" line="121"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Map;)Lorg/tensorics/core/function/DiscreteFunctionBuilder;" line="126"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/tensorics/core/function/MapBackedDiscreteFunction;" line="132"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="26"/><counter type="LINE" missed="2" covered="8"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/DefaultInterpolatedFunction" sourcefilename="DefaultInterpolatedFunction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/function/DiscreteFunction;Lorg/tensorics/core/function/interpolation/InterpolationStrategy;Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="definedXValues" desc="()Ljava/util/Set;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/MapBackedDiscreteFunction" sourcefilename="MapBackedDiscreteFunction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/function/MapBackedDiscreteFunction$Builder;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromMap" desc="(Ljava/util/Map;)Lorg/tensorics/core/function/DiscreteFunction;" line="58"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="definedXValues" desc="()Ljava/util/Set;" line="63"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="68"><counter type="INSTRUCTION" missed="2" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="73"><counter type="INSTRUCTION" missed="11" covered="24"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lorg/tensorics/core/function/MapBackedDiscreteFunction$Builder;" line="137"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="88"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="5" covered="19"/><counter type="COMPLEXITY" missed="6" covered="10"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DiscreteFunction.java"/><sourcefile name="PositionToScalarFunction.java"><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TensoricFunctions.java"><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="55" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ContinuousFunction.java"/><sourcefile name="IllegalDiscreteFunctionUsageException.java"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MathFunction.java"/><sourcefile name="MathFunctions.java"><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="10" mb="0" cb="2"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="49" mi="0" ci="10" mb="0" cb="2"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="55" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="62"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CoordinateToPositionFunction.java"><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="33" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="InterpolatedFunction.java"/><sourcefile name="DefaultInterpolatedFunction.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="2"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MapBackedDiscreteFunction.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="2"/><line nr="51" mi="0" ci="12" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="2" ci="9" mb="1" cb="1"/><line nr="73" mi="0" ci="3" mb="1" cb="1"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="1" cb="1"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="1" cb="1"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="1" cb="1"/><line nr="85" mi="3" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="2"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="12" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="112" mi="0" ci="1" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="127" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="114"/><counter type="BRANCH" missed="7" covered="9"/><counter type="LINE" missed="7" covered="27"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="1" covered="12"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DiscreteFunctionBuilder.java"/><counter type="INSTRUCTION" missed="70" covered="232"/><counter type="BRANCH" missed="7" covered="15"/><counter type="LINE" missed="19" covered="46"/><counter type="COMPLEXITY" missed="17" covered="25"/><counter type="METHOD" missed="11" covered="20"/><counter type="CLASS" missed="3" covered="5"/></package><package name="org/tensorics/core/tensorbacked/expressions"><class name="org/tensorics/core/tensorbacked/expressions/TensorbackedExpressions" sourcefilename="TensorbackedExpressions.java"><method name="extracted" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="wrapped" desc="(Ljava/lang/Class;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="TensorbackedExpressions.java"><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="org/tensorics/core/tensor/coordinates"><class name="org/tensorics/core/tensor/coordinates/PositionOrdering" sourcefilename="PositionOrdering.java"><method name="&lt;init&gt;" desc="(Ljava/util/LinkedHashMap;)V" line="25"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Class;Ljava/util/Comparator;)Lorg/tensorics/core/tensor/coordinates/PositionOrdering;" line="35"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/coordinates/PositionOrdering;" line="44"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="then" desc="(Ljava/lang/Class;Ljava/util/Comparator;)Lorg/tensorics/core/tensor/coordinates/PositionOrdering;" line="49"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="then" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/coordinates/PositionOrdering;" line="64"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensions" desc="()Ljava/util/List;" line="69"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="positionComparator" desc="()Ljava/util/Comparator;" line="73"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comparatorFor" desc="(Ljava/lang/Class;)Ljava/util/Comparator;" line="80"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="positionComparator" desc="(Ljava/lang/Class;)Ljava/util/Comparator;" line="85"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="90"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="98"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$positionComparator$2" desc="(Ljava/lang/Class;Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="85"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$positionComparator$1" desc="(Ljava/util/Comparator;Ljava/util/Comparator;)Ljava/util/Comparator;" line="74"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$positionComparator$0" desc="(Ljava/lang/Class;)Ljava/util/Comparator;" line="73"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="73" covered="137"/><counter type="BRANCH" missed="15" covered="3"/><counter type="LINE" missed="19" covered="27"/><counter type="COMPLEXITY" missed="11" covered="13"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="PositionOrdering.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="1" cb="1"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="2"/><line nr="54" mi="0" ci="14" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="13" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="11" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="13" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="5" ci="0" mb="2" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="137"/><counter type="BRANCH" missed="15" covered="3"/><counter type="LINE" missed="19" covered="27"/><counter type="COMPLEXITY" missed="11" covered="13"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="73" covered="137"/><counter type="BRANCH" missed="15" covered="3"/><counter type="LINE" missed="19" covered="27"/><counter type="COMPLEXITY" missed="11" covered="13"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/tensorics/core/iterable/expressions"><class name="org/tensorics/core/iterable/expressions/PickExpression$Mode$2" sourcefilename="PickExpression.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pick" desc="(Ljava/lang/Iterable;I)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/expressions/PickExpression$Mode$1" sourcefilename="PickExpression.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pick" desc="(Ljava/lang/Iterable;I)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/expressions/PickExpression$Mode" sourcefilename="PickExpression.java"><method name="&lt;clinit&gt;" desc="()V" line="68"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/expressions/IterableOperationExpression" sourcefilename="IterableOperationExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/operations/Conversion;Lorg/tensorics/core/tree/domain/Expression;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/expressions/PickExpression" sourcefilename="PickExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/Expression;ILorg/tensorics/core/iterable/expressions/PickExpression$Mode;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromFirst" desc="(Lorg/tensorics/core/tree/domain/Expression;I)Lorg/tensorics/core/iterable/expressions/PickExpression;" line="44"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromLast" desc="(Lorg/tensorics/core/tree/domain/Expression;I)Lorg/tensorics/core/iterable/expressions/PickExpression;" line="48"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="iterableExpression" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="offset" desc="()I" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mode" desc="()Lorg/tensorics/core/iterable/expressions/PickExpression$Mode;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="89"><counter type="INSTRUCTION" missed="4" covered="35"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="99"><counter type="INSTRUCTION" missed="17" covered="34"/><counter type="BRANCH" missed="9" covered="7"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="8" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="127"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="126"/><counter type="BRANCH" missed="11" covered="9"/><counter type="LINE" missed="9" covered="26"/><counter type="COMPLEXITY" missed="11" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/expressions/AnyIterableConversionExpression" sourcefilename="AnyIterableConversionExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/operations/Conversion;Lorg/tensorics/core/tree/domain/Expression;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/expressions/IterableExpressionToIterable" sourcefilename="IterableExpressionToIterable.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Iterable;)V" line="28"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="39"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="47"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="69"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/iterable/expressions/BinaryPredicateIterableExpression" sourcefilename="BinaryPredicateIterableExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/predicates/BinaryPredicate;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredicate" desc="()Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRight" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="70"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="75"><counter type="INSTRUCTION" missed="6" covered="39"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="85"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="121"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="81" covered="91"/><counter type="BRANCH" missed="27" covered="3"/><counter type="LINE" missed="24" covered="15"/><counter type="COMPLEXITY" missed="17" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="IterableOperationExpression.java"><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinaryPredicateIterableExpression.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="6" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="2" ci="11" mb="1" cb="1"/><line nr="78" mi="2" ci="11" mb="1" cb="1"/><line nr="79" mi="2" ci="11" mb="1" cb="1"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="3" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="2" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="2" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="3" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="6" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="22" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="91"/><counter type="BRANCH" missed="27" covered="3"/><counter type="LINE" missed="24" covered="15"/><counter type="COMPLEXITY" missed="17" covered="6"/><counter type="METHOD" missed="2" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnyIterableConversionExpression.java"><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PickExpression.java"><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="68" mi="0" ci="12" mb="0" cb="0"/><line nr="69" mi="0" ci="12" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="12" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="2" ci="11" mb="1" cb="1"/><line nr="92" mi="2" ci="11" mb="1" cb="1"/><line nr="93" mi="0" ci="7" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="1" cb="1"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="1" cb="1"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="1" cb="1"/><line nr="110" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="1" cb="1"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="1" cb="1"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="1" cb="1"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="0" ci="22" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="179"/><counter type="BRANCH" missed="11" covered="9"/><counter type="LINE" missed="9" covered="33"/><counter type="COMPLEXITY" missed="11" covered="14"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="4"/></sourcefile><sourcefile name="IterableExpressionToIterable.java"><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="29" mi="4" ci="0" mb="0" cb="0"/><line nr="30" mi="1" ci="0" mb="0" cb="0"/><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="13" ci="0" mb="2" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="2" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="2" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="2" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="3" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="78" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="22" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="184" covered="280"/><counter type="BRANCH" missed="52" covered="12"/><counter type="LINE" missed="55" covered="52"/><counter type="COMPLEXITY" missed="40" covered="22"/><counter type="METHOD" missed="8" covered="22"/><counter type="CLASS" missed="1" covered="7"/></package><package name="org/tensorics/core/iterable/lang"><class name="org/tensorics/core/iterable/lang/OngoingQuantityIterableValueExtraction" sourcefilename="OngoingQuantityIterableValueExtraction.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Iterable;Lorg/tensorics/core/quantity/operations/QuantityOperationRepository;)V" line="38"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inUnitsOf" desc="(Lorg/tensorics/core/units/Unit;)Ljava/util/List;" line="44"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inUnitsOf" desc="(Ljavax/measure/unit/Unit;)Ljava/util/List;" line="52"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/iterable/lang/IterableOperationRepository" sourcefilename="IterableOperationRepository.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="average" desc="()Lorg/tensorics/core/iterable/operations/IterableAverage;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()Lorg/tensorics/core/iterable/operations/IterableSize;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sum" desc="()Lorg/tensorics/core/iterable/operations/IterableSum;" line="70"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rms" desc="()Lorg/tensorics/core/iterable/operations/IterableRms;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sumOfSquares" desc="()Lorg/tensorics/core/iterable/operations/IterableSumOfSquares;" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="var" desc="()Lorg/tensorics/core/iterable/operations/IterableVar;" line="82"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="std" desc="()Lorg/tensorics/core/iterable/operations/IterableStd;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="63"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/lang/OngoingDeferredIterableBinaryPredicate" sourcefilename="OngoingDeferredIterableBinaryPredicate.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;Lorg/tensorics/core/tree/domain/Expression;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLessThan" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLessThan" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="52"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/lang/QuantityIterableSupport" sourcefilename="QuantityIterableSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="averageOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="50"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rmsOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="57"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stdOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="64"><counter type="INSTRUCTION" missed="5" covered="9"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="varOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="71"><counter type="INSTRUCTION" missed="5" covered="26"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="87"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zeroInUnitsOfFirstValueIn" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="97"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sumOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="106"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sumOfSquaresOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="115"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="squareOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="123"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="squareRootOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="127"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valuesOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/iterable/lang/OngoingQuantityIterableValueExtraction;" line="131"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$varOf$1" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="79"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$varOf$0" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="78"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="194"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="4" covered="39"/><counter type="COMPLEXITY" missed="5" covered="17"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/lang/QuantityIterableExpressionSupport" sourcefilename="QuantityIterableExpressionSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/lang/ScalarIterableExpressionSupport" sourcefilename="ScalarIterableExpressionSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="averageOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="averageOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="52"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="56"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sumOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="64"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="68"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rmsOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rmsOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="76"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stdOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="80"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stdOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="84"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sumOfSquaresOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="88"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumOfSquaresOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="92"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testIfIt" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/iterable/lang/OngoingDeferredIterableBinaryPredicate;" line="96"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="72"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/lang/ScalarIterableSupport" sourcefilename="ScalarIterableSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="averageOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="52"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rmsOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sumOfSquaresOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="60"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="varOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="64"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stdOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="24" covered="28"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ScalarIterableExpressionSupport.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="8" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="72"/><counter type="LINE" missed="5" covered="11"/><counter type="COMPLEXITY" missed="5" covered="9"/><counter type="METHOD" missed="5" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityIterableSupport.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="1" cb="1"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="2"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="12" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="1" cb="1"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="1" cb="1"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="9" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="9" mb="0" cb="2"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="0" ci="11" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="2"/><line nr="108" mi="0" ci="6" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="10" mb="0" cb="2"/><line nr="117" mi="0" ci="8" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="2" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="127" mi="0" ci="7" mb="0" cb="0"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="194"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="4" covered="39"/><counter type="COMPLEXITY" missed="5" covered="17"/><counter type="METHOD" missed="1" covered="13"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ScalarIterableSupport.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="64" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="28"/><counter type="LINE" missed="4" covered="6"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableOperationRepository.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="63"/><counter type="LINE" missed="1" covered="15"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityIterableExpressionSupport.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingQuantityIterableValueExtraction.java"><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><line nr="44" mi="4" ci="0" mb="0" cb="0"/><line nr="45" mi="11" ci="0" mb="2" cb="0"/><line nr="46" mi="11" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingDeferredIterableBinaryPredicate.java"><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="117" covered="385"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="24" covered="79"/><counter type="COMPLEXITY" missed="19" covered="41"/><counter type="METHOD" missed="14" covered="37"/><counter type="CLASS" missed="1" covered="6"/></package><package name="org/tensorics/core/analysis/resolver"><class name="org/tensorics/core/analysis/resolver/AnalysisResolver" sourcefilename="AnalysisResolver.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/analysis/expression/AnalysisExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="(Lorg/tensorics/core/analysis/expression/AnalysisExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Lorg/tensorics/core/analysis/AnalysisResult;" line="58"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overallStatus" desc="(Lorg/tensorics/core/analysis/expression/AnalysisExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Lorg/tensorics/core/analysis/AssertionStatus;" line="68"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="3"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/analysis/resolver/AssertionResolver" sourcefilename="AssertionResolver.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/analysis/expression/AssertionExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="(Lorg/tensorics/core/analysis/expression/AssertionExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Lorg/tensorics/core/analysis/AssertionResult;" line="50"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="3"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AssertionResolver.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="7" ci="0" mb="2" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="3"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AnalysisResolver.java"><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="11" ci="0" mb="2" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="12" ci="0" mb="0" cb="0"/><line nr="69" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="3"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="1"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="88" covered="6"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="2"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="5" covered="2"/><counter type="CLASS" missed="0" covered="2"/></package><package name="org/tensorics/core/tensor/expressions"><class name="org/tensorics/core/tensor/expressions/TensorExpressions" sourcefilename="TensorExpressions.java"><method name="elementwise" desc="(Lorg/tensorics/core/math/operations/UnaryOperation;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="54"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="creationOfShapeValue" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/lang/Object;)Lorg/tensorics/core/expressions/CreationOperationExpression;" line="58"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementwise" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/commons/options/OptionRegistry;)Lorg/tensorics/core/tree/domain/Expression;" line="67"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="TensorExpressions.java"><line nr="54" mi="9" ci="0" mb="0" cb="0"/><line nr="58" mi="9" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="org/tensorics/core/expressions"><class name="org/tensorics/core/expressions/UnaryOperationExpression" sourcefilename="UnaryOperationExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/operations/UnaryOperation;Lorg/tensorics/core/tree/domain/Expression;)V" line="51"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOperation" desc="()Lorg/tensorics/core/math/operations/UnaryOperation;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOperand" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="61"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="71"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="80"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="109"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/expressions/CreationOperationExpression" sourcefilename="CreationOperationExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/operations/CreationOperation;)V" line="45"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getOperation" desc="()Lorg/tensorics/core/math/operations/CreationOperation;" line="55"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="60"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="68"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="90"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/expressions/LatestOfExpression" sourcefilename="LatestOfExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/Expression;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="latestOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/expressions/LatestOfExpression;" line="29"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="34"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="42"><counter type="INSTRUCTION" missed="13" covered="26"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="58"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="7" covered="15"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/expressions/IsEqualToExpression" sourcefilename="IsEqualToExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)V" line="16"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/expressions/BinaryOperationExpression" sourcefilename="BinaryOperationExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperation" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRight" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="76"><counter type="INSTRUCTION" missed="6" covered="39"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="86"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="122"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="75" covered="97"/><counter type="BRANCH" missed="27" covered="3"/><counter type="LINE" missed="23" covered="16"/><counter type="COMPLEXITY" missed="16" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/expressions/IsNotEqualExpression" sourcefilename="IsNotEqualExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)V" line="16"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="21"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/expressions/IterableResolvingExpression" sourcefilename="IterableResolvingExpression.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Iterable;)V" line="30"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="36"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="expressions" desc="()Ljava/util/List;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="45"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="53"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="75"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/expressions/BinaryPredicateExpression" sourcefilename="BinaryPredicateExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/predicates/BinaryPredicate;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPredicate" desc="()Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLeft" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRight" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="69"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="74"><counter type="INSTRUCTION" missed="6" covered="39"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="84"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="120"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="75" covered="97"/><counter type="BRANCH" missed="27" covered="3"/><counter type="LINE" missed="23" covered="16"/><counter type="COMPLEXITY" missed="16" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/expressions/Placeholder" sourcefilename="Placeholder.java"><method name="ofName" desc="(Ljava/lang/String;)Lorg/tensorics/core/expressions/Placeholder;" line="23"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofClass" desc="(Ljava/lang/Class;)Lorg/tensorics/core/expressions/Placeholder;" line="27"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="30"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="36"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="name" desc="()Ljava/lang/String;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="50"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="58"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/expressions/PredicateExpression" sourcefilename="PredicateExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)V" line="23"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ofSourceAndPredicate" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/expressions/PredicateExpression;" line="30"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getChildren" desc="()Ljava/util/List;" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="source" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="predicate" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="43"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="48"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="86"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/expressions/ConversionOperationExpression" sourcefilename="ConversionOperationExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/operations/Conversion;Lorg/tensorics/core/tree/domain/Expression;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="56"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getSource" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOperation" desc="()Lorg/tensorics/core/commons/operations/Conversion;" line="64"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="69"><counter type="INSTRUCTION" missed="4" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="78"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="57" covered="68"/><counter type="BRANCH" missed="20" covered="2"/><counter type="LINE" missed="18" covered="13"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Placeholder.java"><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="12" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="13" ci="0" mb="2" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="2" cb="0"/><line nr="69" mi="3" ci="0" mb="2" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="25" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IsNotEqualExpression.java"><line nr="16" mi="7" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="21" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IsEqualToExpression.java"><line nr="16" mi="7" ci="0" mb="0" cb="0"/><line nr="17" mi="1" ci="0" mb="0" cb="0"/><line nr="21" mi="15" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BinaryOperationExpression.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="2" ci="11" mb="1" cb="1"/><line nr="79" mi="2" ci="11" mb="1" cb="1"/><line nr="80" mi="2" ci="11" mb="1" cb="1"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="3" ci="0" mb="2" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="3" ci="0" mb="2" cb="0"/><line nr="98" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="6" ci="0" mb="2" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="2" cb="0"/><line nr="104" mi="3" ci="0" mb="2" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="6" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="2" cb="0"/><line nr="111" mi="3" ci="0" mb="2" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="22" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="97"/><counter type="BRANCH" missed="27" covered="3"/><counter type="LINE" missed="23" covered="16"/><counter type="COMPLEXITY" missed="16" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinaryPredicateExpression.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="2" ci="11" mb="1" cb="1"/><line nr="77" mi="2" ci="11" mb="1" cb="1"/><line nr="78" mi="2" ci="11" mb="1" cb="1"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="2" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="3" ci="0" mb="2" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="6" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="2" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="6" ci="0" mb="2" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="3" ci="0" mb="2" cb="0"/><line nr="109" mi="3" ci="0" mb="2" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="0" ci="22" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="97"/><counter type="BRANCH" missed="27" covered="3"/><counter type="LINE" missed="23" covered="16"/><counter type="COMPLEXITY" missed="16" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LatestOfExpression.java"><line nr="24" mi="0" ci="5" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="2" ci="11" mb="1" cb="1"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="1" cb="1"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="1" cb="1"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="1" cb="1"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="1" cb="1"/><line nr="50" mi="3" ci="0" mb="2" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="1" cb="1"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="58"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="7" covered="15"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PredicateExpression.java"><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="24" mi="3" ci="0" mb="0" cb="0"/><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="26" mi="1" ci="0" mb="0" cb="0"/><line nr="30" mi="6" ci="0" mb="0" cb="0"/><line nr="35" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="13" ci="0" mb="2" cb="0"/><line nr="51" mi="13" ci="0" mb="2" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="3" ci="0" mb="2" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="2" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="2" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="129" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="CreationOperationExpression.java"><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="13" ci="0" mb="2" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="2" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="2" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="2" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="2" cb="0"/><line nr="79" mi="3" ci="0" mb="2" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="6" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IterableResolvingExpression.java"><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="13" ci="0" mb="2" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="2" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="3" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="UnaryOperationExpression.java"><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="13" ci="0" mb="2" cb="0"/><line nr="74" mi="13" ci="0" mb="2" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="2" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="2" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="3" ci="0" mb="2" cb="0"/><line nr="92" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="6" ci="0" mb="2" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="2" cb="0"/><line nr="98" mi="3" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="6" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="127" covered="0"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="31" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ConversionOperationExpression.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="2" ci="11" mb="1" cb="1"/><line nr="72" mi="2" ci="11" mb="1" cb="1"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="2" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="21" mb="0" cb="0"/><counter type="INSTRUCTION" missed="57" covered="68"/><counter type="BRANCH" missed="20" covered="2"/><counter type="LINE" missed="18" covered="13"/><counter type="COMPLEXITY" missed="12" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="789" covered="320"/><counter type="BRANCH" missed="168" covered="14"/><counter type="LINE" missed="211" covered="60"/><counter type="COMPLEXITY" missed="134" covered="24"/><counter type="METHOD" missed="43" covered="24"/><counter type="CLASS" missed="7" covered="4"/></package><package name="org/tensorics/core/commons/options"><class name="org/tensorics/core/commons/options/OptionRegistry" sourcefilename="OptionRegistry.java"/><class name="org/tensorics/core/commons/options/ManipulationOption" sourcefilename="ManipulationOption.java"/><class name="org/tensorics/core/commons/options/Environment" sourcefilename="Environment.java"/><class name="org/tensorics/core/commons/options/Option" sourcefilename="Option.java"/><class name="org/tensorics/core/commons/options/ImmutableOptionRegistry" sourcefilename="ImmutableOptionRegistry.java"><method name="of" desc="(Ljava/util/Collection;)Lorg/tensorics/core/commons/options/ImmutableOptionRegistry;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Collection;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addToMap" desc="(Lcom/google/common/collect/ClassToInstanceMap;Ljava/util/Collection;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Class;)Lorg/tensorics/core/commons/options/Option;" line="77"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Lorg/tensorics/core/commons/options/Option;)Lorg/tensorics/core/commons/options/OptionRegistry;" line="82"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ManipulationOption.java"/><sourcefile name="ImmutableOptionRegistry.java"><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="10" mb="0" cb="2"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Option.java"/><sourcefile name="Environment.java"/><sourcefile name="OptionRegistry.java"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/tensorics/core/tensor/specific"><class name="org/tensorics/core/tensor/specific/PositionIndexer$Builder" sourcefilename="PositionIndexer.java"><method name="&lt;init&gt;" desc="()V" line="104"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Class;Ljava/util/Set;)Lorg/tensorics/core/tensor/specific/PositionIndexer$Builder;" line="111"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/tensorics/core/tensor/specific/PositionIndexer;" line="118"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkBoundary" desc="()V" line="122"><counter type="INSTRUCTION" missed="18" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arrayDimension" desc="()J" line="131"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createMapping" desc="()Ljava/util/Map;" line="139"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createIndex" desc="(Ljava/util/Set;)Ljava/util/Map;" line="147"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFactors" desc="()Ljava/util/Map;" line="157"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="161"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/specific/ImmutableDoubleArrayBackedTensor$Builder" sourcefilename="ImmutableDoubleArrayBackedTensor.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/specific/PositionIndexer;)V" line="90"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putIt" desc="(Lorg/tensorics/core/tensor/Position;Ljava/lang/Double;)V" line="97"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/tensorics/core/tensor/specific/ImmutableDoubleArrayBackedTensor;" line="102"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/TensorBuilder;" line="107"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/specific/PositionIndexer" sourcefilename="PositionIndexer.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/specific/PositionIndexer$Builder;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="indexFor" desc="(Lorg/tensorics/core/tensor/Position;)I" line="57"><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allPositions" desc="()Ljava/util/Set;" line="69"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="coordinateSets" desc="()Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lorg/tensorics/core/tensor/specific/PositionIndexer$Builder;" line="86"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="arraySize" desc="()I" line="90"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dimensions" desc="()Ljava/util/Set;" line="94"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="56" covered="72"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="13" covered="15"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/specific/ImmutableDoubleArrayBackedTensor" sourcefilename="ImmutableDoubleArrayBackedTensor.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/specific/ImmutableDoubleArrayBackedTensor$Builder;)V" line="44"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Double;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="([Ljava/lang/Object;)Ljava/lang/Double;" line="57"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shape" desc="()Lorg/tensorics/core/tensor/Shape;" line="62"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="context" desc="()Lorg/tensorics/core/tensor/Position;" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Lorg/tensorics/core/tensor/Position;)Z" line="72"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="(Lorg/tensorics/core/tensor/specific/PositionIndexer;)Lorg/tensorics/core/tensor/specific/ImmutableDoubleArrayBackedTensor$Builder;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/specific/TooLargeForArrayException" sourcefilename="TooLargeForArrayException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="TooLargeForArrayException.java"><line nr="34" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ImmutableDoubleArrayBackedTensor.java"><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="9" ci="0" mb="0" cb="0"/><line nr="98" mi="1" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="87" covered="0"/><counter type="LINE" missed="19" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="PositionIndexer.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="12" mb="0" cb="2"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="17" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="10" ci="0" mb="2" cb="0"/><line nr="72" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="12" ci="0" mb="2" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="19" mb="0" cb="2"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="118" mi="0" ci="5" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="4" mb="1" cb="1"/><line nr="124" mi="18" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="1" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="12" mb="0" cb="2"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="1" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="12" mb="0" cb="2"/><line nr="141" mi="0" ci="11" mb="0" cb="0"/><line nr="142" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="0" ci="2" mb="0" cb="0"/><line nr="149" mi="0" ci="9" mb="0" cb="2"/><line nr="150" mi="0" ci="6" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="12" mb="0" cb="2"/><line nr="163" mi="0" ci="9" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="166" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="233"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="14" covered="49"/><counter type="COMPLEXITY" missed="7" covered="17"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="165" covered="233"/><counter type="BRANCH" missed="5" covered="13"/><counter type="LINE" missed="35" covered="49"/><counter type="COMPLEXITY" missed="19" covered="17"/><counter type="METHOD" missed="16" covered="11"/><counter type="CLASS" missed="3" covered="2"/></package><package name="org/tensorics/core/tensor"><class name="org/tensorics/core/tensor/Tensor" sourcefilename="Tensor.java"/><class name="org/tensorics/core/tensor/TensorPair" sourcefilename="TensorPair.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromLeftRight" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/TensorPair;" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/tensorics/core/tensor/PositionPair;)Lorg/tensorics/core/commons/util/ValuePair;" line="76"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getAll" desc="(Ljava/lang/Iterable;)Ljava/util/List;" line="95"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapValues" desc="(Lcom/google/common/collect/Multimap;)Lcom/google/common/collect/ListMultimap;" line="114"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/Positions" sourcefilename="Positions.java"><method name="union" desc="(Lorg/tensorics/core/tensor/Position;Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Position;" line="74"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unique" desc="(Ljava/lang/Iterable;)Ljava/util/Set;" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stripping" desc="(Ljava/util/Set;)Lorg/tensorics/core/tensor/Positions$DimensionStripper;" line="99"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stripping" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/Positions$DimensionStripper;" line="110"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="strip" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/Positions$DimensionStripper;" line="121"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertConsistentDimensions" desc="(Lorg/tensorics/core/tensor/Position;Ljava/util/Set;)V" line="164"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="areDimensionsConsistentWithCoordinates" desc="(Ljava/util/Set;Lorg/tensorics/core/tensor/Position;)Z" line="179"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="areDimensionsConsistent" desc="(Ljava/util/Set;Ljava/util/Set;)Z" line="185"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combineDimensions" desc="(Lorg/tensorics/core/tensor/PositionPair;Ljava/util/Set;)Lorg/tensorics/core/tensor/Position;" line="211"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="combineDimensions" desc="(Lorg/tensorics/core/tensor/Position;Lorg/tensorics/core/tensor/Position;Ljava/util/Set;)Lorg/tensorics/core/tensor/Position;" line="230"><counter type="INSTRUCTION" missed="22" covered="40"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="oneIsNull" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="246"><counter type="INSTRUCTION" missed="1" covered="7"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combineAll" desc="(Ljava/util/Set;Ljava/util/Set;)Lcom/google/common/collect/ImmutableSetMultimap;" line="259"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapByStripping" desc="(Ljava/lang/Iterable;Ljava/util/Set;)Lcom/google/common/collect/Multimap;" line="268"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coordinatesOfType" desc="(Ljava/util/Set;Ljava/lang/Class;)Ljava/util/Set;" line="284"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cartesianProduct" desc="([Ljava/lang/Class;)Ljava/lang/Iterable;" line="302"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(Ljava/lang/Class;)Ljava/lang/Iterable;" line="313"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cartesianEnumProduct" desc="([Ljava/lang/Class;)Ljava/lang/Iterable;" line="325"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cartesianProduct" desc="(Ljava/util/Set;)Ljava/lang/Iterable;" line="335"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cartesianEnumProduct" desc="(Ljava/util/Set;)Ljava/lang/Iterable;" line="349"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkedToEnumClassSet" desc="(Ljava/util/Set;)Ljava/util/Set;" line="353"><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkedToSet" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="367"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="cartesianProduct" desc="(Ljava/lang/Iterable;)Ljava/util/Set;" line="382"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(Ljava/util/Collection;)Ljava/util/Set;" line="387"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="([Ljava/lang/Object;)Ljava/util/Set;" line="391"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="difference" desc="(Lorg/tensorics/core/tensor/Position;Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Position;" line="404"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$from$2" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensor/Position;" line="387"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$cartesianProduct$1" desc="(Ljava/util/List;)Lorg/tensorics/core/tensor/Position;" line="383"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$cartesianProduct$0" desc="(Ljava/lang/Class;)Lcom/google/common/collect/ImmutableSet;" line="335"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="213" covered="207"/><counter type="BRANCH" missed="11" covered="21"/><counter type="LINE" missed="36" covered="45"/><counter type="COMPLEXITY" missed="23" covered="21"/><counter type="METHOD" missed="16" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/Shape" sourcefilename="Shape.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Shape$Builder;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;Ljava/util/Set;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="positionSet" desc="()Ljava/util/Set;" line="65"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensionSet" desc="()Ljava/util/Set;" line="74"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensionality" desc="()I" line="84"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="94"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="covers" desc="(Lorg/tensorics/core/tensor/Shape;)Z" line="104"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/tensorics/core/tensor/Position;)Z" line="114"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="([Ljava/lang/Object;)Z" line="125"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hasSameDimensionsAs" desc="(Lorg/tensorics/core/tensor/Shape;)Z" line="135"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lorg/tensorics/core/tensor/Shape$Builder;" line="145"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Ljava/util/Set;)Lorg/tensorics/core/tensor/Shape$Builder;" line="155"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="viewOf" desc="(Ljava/util/Set;Ljava/util/Set;)Lorg/tensorics/core/tensor/Shape;" line="167"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensor/Shape;" line="182"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Shape;" line="197"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/util/Set;Ljava/lang/Iterable;)Lorg/tensorics/core/tensor/Shape;" line="210"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/util/Set;[Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Shape;" line="224"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="()Lorg/tensorics/core/tensor/Shape;" line="235"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zeroDimensional" desc="()Lorg/tensorics/core/tensor/Shape;" line="244"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coordinatesOfType" desc="(Ljava/lang/Class;)Ljava/util/Set;" line="254"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="309"><counter type="INSTRUCTION" missed="16" covered="37"/><counter type="BRANCH" missed="9" covered="9"/><counter type="LINE" missed="7" covered="11"/><counter type="COMPLEXITY" missed="7" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="338"><counter type="INSTRUCTION" missed="4" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="347"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="49" covered="172"/><counter type="BRANCH" missed="11" covered="11"/><counter type="LINE" missed="10" covered="40"/><counter type="COMPLEXITY" missed="12" covered="23"/><counter type="METHOD" missed="3" covered="21"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/BroadcastedTensorView" sourcefilename="BroadcastedTensorView.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Shape;)V" line="64"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toOriginal" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Position;" line="81"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()Lorg/tensorics/core/tensor/Shape;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="context" desc="()Lorg/tensorics/core/tensor/Position;" line="91"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="contains" desc="(Lorg/tensorics/core/tensor/Position;)Z" line="102"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="36"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/ImmutableTensor" sourcefilename="ImmutableTensor.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/ImmutableTensor$Builder;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensor/ImmutableTensor$Builder;" line="83"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="([Ljava/lang/Class;)Lorg/tensorics/core/tensor/ImmutableTensor$Builder;" line="95"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromMap" desc="(Ljava/lang/Iterable;Ljava/util/Map;)Lorg/tensorics/core/tensor/Tensor;" line="107"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="119"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderFrom" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/ImmutableTensor$Builder;" line="130"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="138"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="context" desc="()Lorg/tensorics/core/tensor/Position;" line="143"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asMap" desc="()Ljava/util/Map;" line="151"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()Lorg/tensorics/core/tensor/Shape;" line="156"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findValueOrThrow" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="160"><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findEntryOrNull" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="177"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="235"><counter type="INSTRUCTION" missed="0" covered="94"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/tensorics/core/tensor/Position;)Z" line="254"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="238"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="44"/><counter type="COMPLEXITY" missed="1" covered="20"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/AbstractTensorBuilder" sourcefilename="AbstractTensorBuilder.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;Lorg/tensorics/core/tensor/VerificationCallback;)V" line="44"><counter type="INSTRUCTION" missed="2" covered="27"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lorg/tensorics/core/tensor/Position;Ljava/lang/Object;)Lorg/tensorics/core/tensor/TensorBuilder;" line="66"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="context" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/TensorBuilder;" line="78"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="context" desc="([Ljava/lang/Object;)Lorg/tensorics/core/tensor/TensorBuilder;" line="86"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkIfContextValid" desc="(Lorg/tensorics/core/tensor/Position;)V" line="92"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/TensorBuilder;" line="102"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensor/Position;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/TensorBuilder;" line="108"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Map;)Lorg/tensorics/core/tensor/TensorBuilder;" line="115"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Set;)Lorg/tensorics/core/tensor/TensorBuilder;" line="121"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensor/Position;Ljava/util/Map;)Lorg/tensorics/core/tensor/TensorBuilder;" line="128"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/util/Map$Entry;)Lorg/tensorics/core/tensor/TensorBuilder;" line="138"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensions" desc="()Ljava/util/Set;" line="143"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="context" desc="()Lorg/tensorics/core/tensor/Position;" line="147"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="13" covered="174"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="42"/><counter type="COMPLEXITY" missed="4" covered="15"/><counter type="METHOD" missed="2" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/Position" sourcefilename="Position.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensor/Position;" line="80"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="([Ljava/lang/Object;)Lorg/tensorics/core/tensor/Position;" line="96"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createFrom" desc="(Ljava/util/Set;)Lorg/tensorics/core/tensor/Position;" line="101"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="()Lorg/tensorics/core/tensor/Position;" line="105"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coordinateFor" desc="(Ljava/lang/Class;)Ljava/lang/Object;" line="109"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coordinates" desc="()Ljava/util/Set;" line="113"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensionSet" desc="()Ljava/util/Set;" line="124"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isConsistentWith" desc="(Ljava/util/Set;)Z" line="135"><counter type="INSTRUCTION" missed="1" covered="10"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="covers" desc="(Lorg/tensorics/core/tensor/Position;)Z" line="148"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="154"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="159"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="167"><counter type="INSTRUCTION" missed="9" covered="28"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="146"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="4" covered="36"/><counter type="COMPLEXITY" missed="6" covered="18"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/AbstractTensorBuilder$1" sourcefilename="AbstractTensorBuilder.java"><method name="&lt;init&gt;" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="verify" desc="(Ljava/lang/Object;)V" line="60"><counter type="INSTRUCTION" missed="0" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/TensorBuilder" sourcefilename="TensorBuilder.java"/><class name="org/tensorics/core/tensor/ImmutableScalar" sourcefilename="ImmutableScalar.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/tensorics/core/tensor/Position;)V" line="27"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensor/ImmutableScalar;" line="40"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withContext" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/ImmutableScalar;" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withContext" desc="([Ljava/lang/Object;)Lorg/tensorics/core/tensor/ImmutableScalar;" line="63"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="context" desc="()Lorg/tensorics/core/tensor/Position;" line="68"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="78"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="38"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/ImmutableTensor$Builder" sourcefilename="ImmutableTensor.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="188"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createEntriesMap" desc="()Ljava/util/Map;" line="200"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/tensorics/core/tensor/ImmutableTensor;" line="210"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putIt" desc="(Lorg/tensorics/core/tensor/Position;Ljava/lang/Object;)V" line="215"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remove" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/TensorBuilder;" line="222"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="7" covered="27"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/VerificationCallback" sourcefilename="VerificationCallback.java"/><class name="org/tensorics/core/tensor/TensorView" sourcefilename="TensorView.java"/><class name="org/tensorics/core/tensor/Shape$Builder" sourcefilename="Shape.java"><method name="&lt;init&gt;" desc="()V" line="268"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="268"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Shape$Builder;" line="281"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addAll" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensor/Shape$Builder;" line="288"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/tensorics/core/tensor/Shape;" line="295"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setDimensionsIfUndefined" desc="(Ljava/util/Set;)V" line="299"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="8"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/Shapes$1" sourcefilename="Shapes.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;)V" line="181"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="185"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/AbstractScalar" sourcefilename="AbstractScalar.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="19"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="29"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="()Lorg/tensorics/core/tensor/Shape;" line="39"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/tensorics/core/tensor/Position;)Z" line="44"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="55"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/Shapes" sourcefilename="Shapes.java"><method name="intersection" desc="(Lorg/tensorics/core/tensor/Shape;Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tensor/Shape;" line="62"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="union" desc="(Lorg/tensorics/core/tensor/Shape;Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tensor/Shape;" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="union" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensor/Shape;" line="91"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intersection" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensor/Shape;" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dimensionalIntersection" desc="(Lorg/tensorics/core/tensor/Shape;Lorg/tensorics/core/tensor/Shape;)Ljava/util/Set;" line="117"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentDimensionalIntersection" desc="(Lorg/tensorics/core/tensor/Shape;Lorg/tensorics/core/tensor/Shape;)Ljava/util/Set;" line="122"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensionStripped" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/util/Set;)Lorg/tensorics/core/tensor/Shape;" line="137"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="outerProduct" desc="(Lorg/tensorics/core/tensor/Shape;Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tensor/Shape;" line="157"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkLeftRightNotNull" desc="(Lorg/tensorics/core/tensor/Shape;Lorg/tensorics/core/tensor/Shape;)V" line="176"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toGuavaFunction" desc="(Ljava/util/function/Function;)Lcom/google/common/base/Function;" line="181"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combineLeftRightBy" desc="(Lorg/tensorics/core/tensor/Shape;Lorg/tensorics/core/tensor/Shape;Ljava/util/function/BiFunction;)Lorg/tensorics/core/tensor/Shape;" line="192"><counter type="INSTRUCTION" missed="5" covered="34"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combineBy" desc="(Ljava/lang/Iterable;Ljava/util/function/BiFunction;)Lorg/tensorics/core/tensor/Shape;" line="205"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="51" covered="145"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="13" covered="30"/><counter type="COMPLEXITY" missed="7" covered="12"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/Positions$DimensionStripper" sourcefilename="Positions.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="134"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Position;" line="140"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Position;" line="150"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$apply$0" desc="(Ljava/lang/Object;Ljava/lang/Class;)Z" line="142"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/MappableTensor" sourcefilename="MappableTensor.java"/><class name="org/tensorics/core/tensor/Mappable" sourcefilename="Mappable.java"/><class name="org/tensorics/core/tensor/Scalar" sourcefilename="Scalar.java"/><class name="org/tensorics/core/tensor/Tensoric" sourcefilename="Tensoric.java"><method name="get" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="([Ljava/lang/Object;)Z" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="5"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/PositionPair" sourcefilename="PositionPair.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Position;Lorg/tensorics/core/tensor/Position;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromLeftRight" desc="(Lorg/tensorics/core/tensor/Position;Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/PositionPair;" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/Coordinates" sourcefilename="Coordinates.java"><method name="mapOf" desc="(Ljava/lang/Iterable;)Lcom/google/common/collect/ClassToInstanceMap;" line="65"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="checkClassesRelations" desc="(Ljava/lang/Iterable;)V" line="82"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="initialCheckForClassRelations" desc="(Ljava/lang/Class;Ljava/lang/Iterable;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkClassRelations" desc="(Ljava/lang/Class;Ljava/lang/Iterable;)V" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapToAnEntry" desc="(Ljava/lang/Class;Ljava/lang/Iterable;)Ljava/lang/Class;" line="120"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentClassIntersection" desc="(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;" line="149"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><method name="higherOf" desc="(Ljava/lang/Class;Ljava/lang/Class;)Lcom/google/common/base/Optional;" line="168"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensionsWithoutClassPath" desc="(Lorg/tensorics/core/tensor/Tensor;)Ljava/lang/String;" line="185"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensionsWithoutClassPath" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/String;" line="197"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensionsWithoutClassPath" desc="(Ljava/util/Set;)Ljava/lang/String;" line="207"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requireValidCoordinates" desc="(Ljava/lang/Iterable;)Ljava/util/Set;" line="215"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="requireValidDimensions" desc="(Lcom/google/common/collect/Multiset;)Ljava/util/Set;" line="220"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="firstCoordinateOfTyp" desc="(Ljava/util/Set;Ljava/lang/Class;)Ljava/lang/Object;" line="242"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getDimensionsFrom" desc="(Ljava/util/Set;)Ljava/util/Set;" line="257"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="parentClassDifference" desc="(Ljava/util/Set;Ljava/util/Set;)Ljava/util/Set;" line="275"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="23" covered="340"/><counter type="BRANCH" missed="2" covered="42"/><counter type="LINE" missed="6" covered="73"/><counter type="COMPLEXITY" missed="2" covered="35"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/AbstractTensor" sourcefilename="AbstractTensor.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="22"><counter type="INSTRUCTION" missed="6" covered="42"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="35"><counter type="INSTRUCTION" missed="23" covered="45"/><counter type="BRANCH" missed="13" covered="11"/><counter type="LINE" missed="10" covered="14"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="29" covered="90"/><counter type="BRANCH" missed="16" covered="14"/><counter type="LINE" missed="10" covered="24"/><counter type="COMPLEXITY" missed="13" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TensorView.java"/><sourcefile name="Positions.java"><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="6" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="1" mb="0" cb="0"/><line nr="140" mi="0" ci="2" mb="0" cb="0"/><line nr="141" mi="0" ci="10" mb="0" cb="2"/><line nr="142" mi="0" ci="11" mb="0" cb="2"/><line nr="143" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="1" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="2"/><line nr="165" mi="0" ci="18" mb="0" cb="0"/><line nr="169" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="4" mb="0" cb="0"/><line nr="180" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="5" mb="0" cb="0"/><line nr="185" mi="0" ci="4" mb="0" cb="2"/><line nr="186" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="2"/><line nr="189" mi="0" ci="2" mb="0" cb="0"/><line nr="191" mi="0" ci="10" mb="0" cb="2"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="2" mb="0" cb="0"/><line nr="211" mi="4" ci="0" mb="0" cb="0"/><line nr="212" mi="4" ci="0" mb="0" cb="0"/><line nr="213" mi="5" ci="0" mb="0" cb="0"/><line nr="230" mi="0" ci="2" mb="0" cb="0"/><line nr="231" mi="0" ci="10" mb="0" cb="2"/><line nr="232" mi="0" ci="4" mb="0" cb="0"/><line nr="233" mi="0" ci="4" mb="0" cb="0"/><line nr="234" mi="0" ci="8" mb="1" cb="3"/><line nr="235" mi="0" ci="7" mb="0" cb="0"/><line nr="237" mi="22" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="1" mb="0" cb="0"/><line nr="242" mi="0" ci="4" mb="0" cb="0"/><line nr="246" mi="1" ci="7" mb="1" cb="3"/><line nr="259" mi="2" ci="0" mb="0" cb="0"/><line nr="260" mi="10" ci="0" mb="2" cb="0"/><line nr="261" mi="7" ci="0" mb="0" cb="0"/><line nr="262" mi="1" ci="0" mb="0" cb="0"/><line nr="263" mi="3" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="3" mb="0" cb="0"/><line nr="269" mi="0" ci="2" mb="0" cb="0"/><line nr="270" mi="0" ci="10" mb="0" cb="2"/><line nr="271" mi="0" ci="7" mb="0" cb="0"/><line nr="272" mi="0" ci="1" mb="0" cb="0"/><line nr="273" mi="0" ci="3" mb="0" cb="0"/><line nr="284" mi="0" ci="4" mb="0" cb="0"/><line nr="285" mi="0" ci="10" mb="0" cb="2"/><line nr="286" mi="0" ci="4" mb="0" cb="0"/><line nr="287" mi="0" ci="2" mb="1" cb="1"/><line nr="288" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="302" mi="4" ci="0" mb="0" cb="0"/><line nr="313" mi="8" ci="0" mb="0" cb="0"/><line nr="325" mi="4" ci="0" mb="0" cb="0"/><line nr="335" mi="9" ci="0" mb="0" cb="0"/><line nr="336" mi="4" ci="0" mb="0" cb="0"/><line nr="337" mi="3" ci="0" mb="0" cb="0"/><line nr="349" mi="4" ci="0" mb="0" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="354" mi="10" ci="0" mb="2" cb="0"/><line nr="355" mi="3" ci="0" mb="2" cb="0"/><line nr="356" mi="8" ci="0" mb="0" cb="0"/><line nr="357" mi="7" ci="0" mb="0" cb="0"/><line nr="360" mi="2" ci="0" mb="0" cb="0"/><line nr="361" mi="4" ci="0" mb="0" cb="0"/><line nr="362" mi="1" ci="0" mb="0" cb="0"/><line nr="363" mi="2" ci="0" mb="0" cb="0"/><line nr="367" mi="3" ci="0" mb="0" cb="0"/><line nr="368" mi="5" ci="0" mb="2" cb="0"/><line nr="369" mi="13" ci="0" mb="0" cb="0"/><line nr="370" mi="7" ci="0" mb="0" cb="0"/><line nr="372" mi="2" ci="0" mb="0" cb="0"/><line nr="382" mi="4" ci="0" mb="0" cb="0"/><line nr="383" mi="14" ci="0" mb="0" cb="0"/><line nr="387" mi="16" ci="0" mb="0" cb="0"/><line nr="391" mi="4" ci="0" mb="0" cb="0"/><line nr="404" mi="6" ci="0" mb="0" cb="0"/><line nr="405" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="213" covered="250"/><counter type="BRANCH" missed="11" covered="25"/><counter type="LINE" missed="36" covered="55"/><counter type="COMPLEXITY" missed="23" covered="27"/><counter type="METHOD" missed="16" covered="16"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Shapes.java"><line nr="62" mi="0" ci="5" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="91" mi="4" ci="0" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="6" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="5" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="6" mb="0" cb="0"/><line nr="157" mi="0" ci="6" mb="0" cb="0"/><line nr="159" mi="0" ci="7" mb="0" cb="0"/><line nr="160" mi="0" ci="11" mb="0" cb="2"/><line nr="161" mi="0" ci="11" mb="0" cb="2"/><line nr="162" mi="0" ci="6" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="1" mb="0" cb="0"/><line nr="165" mi="0" ci="3" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="181" mi="0" ci="11" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="192" mi="0" ci="3" mb="0" cb="0"/><line nr="193" mi="0" ci="5" mb="1" cb="1"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="1" mb="0" cb="0"/><line nr="198" mi="0" ci="5" mb="0" cb="2"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="201" mi="0" ci="10" mb="0" cb="0"/><line nr="205" mi="4" ci="0" mb="0" cb="0"/><line nr="206" mi="3" ci="0" mb="2" cb="0"/><line nr="207" mi="5" ci="0" mb="0" cb="0"/><line nr="209" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="10" ci="0" mb="2" cb="0"/><line nr="211" mi="2" ci="0" mb="2" cb="0"/><line nr="212" mi="3" ci="0" mb="0" cb="0"/><line nr="214" mi="6" ci="0" mb="0" cb="0"/><line nr="216" mi="1" ci="0" mb="0" cb="0"/><line nr="217" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="51" covered="156"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="13" covered="31"/><counter type="COMPLEXITY" missed="7" covered="14"/><counter type="METHOD" missed="3" covered="11"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="AbstractTensorBuilder.java"><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="1" ci="6" mb="1" cb="1"/><line nr="48" mi="1" ci="6" mb="1" cb="1"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="11" mb="0" cb="2"/><line nr="93" mi="0" ci="5" mb="0" cb="2"/><line nr="94" mi="0" ci="14" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="6" mb="0" cb="0"/><line nr="110" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="121" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="4" mb="0" cb="0"/><line nr="129" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="11" mb="0" cb="2"/><line nr="131" mi="0" ci="10" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="8" mb="0" cb="0"/><line nr="139" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="178"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="3" covered="43"/><counter type="COMPLEXITY" missed="4" covered="17"/><counter type="METHOD" missed="2" covered="14"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Tensoric.java"><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="5"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="VerificationCallback.java"/><sourcefile name="ImmutableTensor.java"><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="132" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="0" ci="2" mb="0" cb="0"/><line nr="138" mi="0" ci="4" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="161" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="2" mb="0" cb="2"/><line nr="163" mi="0" ci="11" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="4" mb="0" cb="2"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="17" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="173" mi="0" ci="2" mb="0" cb="0"/><line nr="177" mi="0" ci="5" mb="0" cb="0"/><line nr="188" mi="0" ci="5" mb="0" cb="0"/><line nr="191" mi="0" ci="3" mb="0" cb="0"/><line nr="192" mi="0" ci="1" mb="0" cb="0"/><line nr="200" mi="0" ci="6" mb="0" cb="0"/><line nr="210" mi="0" ci="5" mb="0" cb="0"/><line nr="215" mi="0" ci="6" mb="0" cb="0"/><line nr="216" mi="0" ci="1" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="223" mi="2" ci="0" mb="0" cb="0"/><line nr="235" mi="0" ci="5" mb="0" cb="0"/><line nr="236" mi="0" ci="5" mb="0" cb="0"/><line nr="237" mi="0" ci="2" mb="0" cb="0"/><line nr="238" mi="0" ci="12" mb="0" cb="2"/><line nr="239" mi="0" ci="8" mb="0" cb="4"/><line nr="240" mi="0" ci="18" mb="0" cb="0"/><line nr="241" mi="0" ci="3" mb="0" cb="2"/><line nr="242" mi="0" ci="15" mb="0" cb="0"/><line nr="244" mi="0" ci="1" mb="0" cb="0"/><line nr="245" mi="0" ci="1" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="1" cb="1"/><line nr="247" mi="0" ci="6" mb="0" cb="0"/><line nr="249" mi="0" ci="14" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="265"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="2" covered="51"/><counter type="COMPLEXITY" missed="2" covered="24"/><counter type="METHOD" missed="1" covered="18"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Shape.java"><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="51" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="4" mb="0" cb="0"/><line nr="104" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="135" mi="6" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="6" mb="0" cb="0"/><line nr="182" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="210" mi="0" ci="6" mb="0" cb="0"/><line nr="224" mi="0" ci="5" mb="0" cb="0"/><line nr="235" mi="0" ci="2" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="254" mi="0" ci="5" mb="0" cb="0"/><line nr="268" mi="0" ci="6" mb="0" cb="0"/><line nr="269" mi="0" ci="6" mb="0" cb="0"/><line nr="270" mi="0" ci="6" mb="0" cb="0"/><line nr="272" mi="0" ci="2" mb="0" cb="0"/><line nr="274" mi="0" ci="1" mb="0" cb="0"/><line nr="276" mi="0" ci="2" mb="0" cb="0"/><line nr="277" mi="0" ci="3" mb="0" cb="0"/><line nr="278" mi="0" ci="1" mb="0" cb="0"/><line nr="281" mi="0" ci="4" mb="0" cb="0"/><line nr="282" mi="0" ci="4" mb="0" cb="0"/><line nr="283" mi="0" ci="5" mb="0" cb="0"/><line nr="284" mi="0" ci="2" mb="0" cb="0"/><line nr="288" mi="0" ci="10" mb="0" cb="2"/><line nr="289" mi="0" ci="4" mb="0" cb="0"/><line nr="290" mi="0" ci="1" mb="0" cb="0"/><line nr="291" mi="0" ci="2" mb="0" cb="0"/><line nr="295" mi="0" ci="5" mb="0" cb="0"/><line nr="299" mi="0" ci="3" mb="0" cb="2"/><line nr="300" mi="0" ci="4" mb="0" cb="0"/><line nr="301" mi="0" ci="3" mb="0" cb="0"/><line nr="303" mi="0" ci="1" mb="0" cb="0"/><line nr="309" mi="0" ci="3" mb="0" cb="2"/><line nr="310" mi="0" ci="2" mb="0" cb="0"/><line nr="312" mi="0" ci="2" mb="1" cb="1"/><line nr="313" mi="2" ci="0" mb="0" cb="0"/><line nr="315" mi="0" ci="5" mb="1" cb="1"/><line nr="316" mi="2" ci="0" mb="0" cb="0"/><line nr="318" mi="0" ci="3" mb="0" cb="0"/><line nr="319" mi="0" ci="3" mb="1" cb="1"/><line nr="320" mi="3" ci="0" mb="2" cb="0"/><line nr="321" mi="2" ci="0" mb="0" cb="0"/><line nr="323" mi="0" ci="6" mb="1" cb="1"/><line nr="324" mi="2" ci="0" mb="0" cb="0"/><line nr="326" mi="0" ci="3" mb="1" cb="1"/><line nr="327" mi="3" ci="0" mb="2" cb="0"/><line nr="328" mi="2" ci="0" mb="0" cb="0"/><line nr="330" mi="0" ci="6" mb="0" cb="2"/><line nr="331" mi="0" ci="2" mb="0" cb="0"/><line nr="333" mi="0" ci="2" mb="0" cb="0"/><line nr="338" mi="0" ci="2" mb="0" cb="0"/><line nr="339" mi="0" ci="2" mb="0" cb="0"/><line nr="340" mi="2" ci="11" mb="1" cb="1"/><line nr="341" mi="2" ci="11" mb="1" cb="1"/><line nr="342" mi="0" ci="2" mb="0" cb="0"/><line nr="347" mi="18" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="49" covered="247"/><counter type="BRANCH" missed="11" covered="15"/><counter type="LINE" missed="10" covered="61"/><counter type="COMPLEXITY" missed="12" covered="31"/><counter type="METHOD" missed="3" covered="27"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Scalar.java"/><sourcefile name="TensorBuilder.java"/><sourcefile name="Position.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="2"/><line nr="59" mi="0" ci="3" mb="0" cb="2"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="4" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="4" mb="0" cb="0"/><line nr="135" mi="1" ci="6" mb="1" cb="1"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="12" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="2" mb="0" cb="0"/><line nr="161" mi="2" ci="11" mb="1" cb="1"/><line nr="162" mi="0" ci="2" mb="0" cb="0"/><line nr="167" mi="0" ci="3" mb="0" cb="2"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="0" ci="2" mb="1" cb="1"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="1" cb="1"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="177" mi="0" ci="3" mb="1" cb="1"/><line nr="178" mi="3" ci="0" mb="2" cb="0"/><line nr="179" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="2"/><line nr="182" mi="0" ci="2" mb="0" cb="0"/><line nr="184" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="146"/><counter type="BRANCH" missed="7" covered="13"/><counter type="LINE" missed="4" covered="36"/><counter type="COMPLEXITY" missed="6" covered="18"/><counter type="METHOD" missed="0" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tensor.java"/><sourcefile name="TensorPair.java"><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="8" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="97" mi="0" ci="10" mb="0" cb="2"/><line nr="98" mi="0" ci="6" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="114" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="12" mb="0" cb="2"/><line nr="116" mi="0" ci="10" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="95"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="19"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BroadcastedTensorView.java"><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="7" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="4" mb="0" cb="0"/><line nr="96" mi="22" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="36"/><counter type="LINE" missed="3" covered="9"/><counter type="COMPLEXITY" missed="3" covered="5"/><counter type="METHOD" missed="3" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Coordinates.java"><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="9" ci="0" mb="2" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="10" mb="0" cb="2"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="0" cb="2"/><line nr="96" mi="0" ci="4" mb="0" cb="2"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="102" mi="0" ci="12" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="10" mb="0" cb="2"/><line nr="121" mi="0" ci="4" mb="0" cb="2"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="124" mi="0" ci="2" mb="0" cb="0"/><line nr="126" mi="0" ci="4" mb="0" cb="2"/><line nr="128" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="131" mi="0" ci="1" mb="0" cb="0"/><line nr="132" mi="0" ci="19" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="10" mb="0" cb="2"/><line nr="151" mi="0" ci="10" mb="0" cb="2"/><line nr="152" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="3" mb="0" cb="2"/><line nr="154" mi="0" ci="6" mb="0" cb="0"/><line nr="155" mi="0" ci="2" mb="0" cb="2"/><line nr="156" mi="0" ci="19" mb="0" cb="0"/><line nr="159" mi="0" ci="2" mb="0" cb="0"/><line nr="162" mi="0" ci="1" mb="0" cb="0"/><line nr="163" mi="0" ci="1" mb="0" cb="0"/><line nr="164" mi="0" ci="2" mb="0" cb="0"/><line nr="168" mi="0" ci="4" mb="0" cb="2"/><line nr="169" mi="0" ci="3" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="2"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="2" mb="0" cb="0"/><line nr="185" mi="0" ci="5" mb="0" cb="0"/><line nr="186" mi="0" ci="4" mb="0" cb="0"/><line nr="187" mi="0" ci="13" mb="0" cb="0"/><line nr="197" mi="0" ci="4" mb="0" cb="0"/><line nr="207" mi="0" ci="4" mb="0" cb="0"/><line nr="208" mi="0" ci="10" mb="0" cb="2"/><line nr="209" mi="0" ci="5" mb="0" cb="0"/><line nr="210" mi="0" ci="1" mb="0" cb="0"/><line nr="211" mi="0" ci="3" mb="0" cb="0"/><line nr="215" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="220" mi="0" ci="3" mb="0" cb="2"/><line nr="221" mi="0" ci="8" mb="0" cb="0"/><line nr="223" mi="0" ci="5" mb="0" cb="0"/><line nr="225" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="9" mb="0" cb="2"/><line nr="243" mi="0" ci="5" mb="0" cb="2"/><line nr="244" mi="0" ci="2" mb="0" cb="0"/><line nr="246" mi="0" ci="1" mb="0" cb="0"/><line nr="247" mi="0" ci="2" mb="0" cb="0"/><line nr="257" mi="0" ci="4" mb="0" cb="0"/><line nr="258" mi="0" ci="9" mb="0" cb="2"/><line nr="259" mi="0" ci="5" mb="0" cb="0"/><line nr="260" mi="0" ci="1" mb="0" cb="0"/><line nr="261" mi="0" ci="2" mb="0" cb="0"/><line nr="275" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="0" ci="10" mb="0" cb="2"/><line nr="277" mi="0" ci="10" mb="0" cb="2"/><line nr="278" mi="0" ci="4" mb="0" cb="2"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><line nr="281" mi="0" ci="1" mb="0" cb="0"/><line nr="282" mi="0" ci="1" mb="0" cb="0"/><line nr="283" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="340"/><counter type="BRANCH" missed="2" covered="42"/><counter type="LINE" missed="6" covered="73"/><counter type="COMPLEXITY" missed="2" covered="35"/><counter type="METHOD" missed="1" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractScalar.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="4" mb="0" cb="0"/><line nr="20" mi="0" ci="4" mb="0" cb="2"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="14" mb="0" cb="0"/><line nr="29" mi="0" ci="4" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="2"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="8" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="55"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Mappable.java"/><sourcefile name="ImmutableScalar.java"><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="6" mb="0" cb="0"/><line nr="30" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="38"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PositionPair.java"><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractTensor.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="2" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="2" ci="9" mb="1" cb="1"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="2" ci="9" mb="1" cb="1"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="2" ci="9" mb="1" cb="1"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="2"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="2" mb="1" cb="1"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="1" cb="1"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="1" cb="1"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="2"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="1" cb="1"/><line nr="53" mi="3" ci="0" mb="2" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="1" cb="1"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="1" cb="1"/><line nr="61" mi="3" ci="0" mb="2" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="1" cb="1"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="90"/><counter type="BRANCH" missed="16" covered="14"/><counter type="LINE" missed="10" covered="24"/><counter type="COMPLEXITY" missed="13" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MappableTensor.java"/><counter type="INSTRUCTION" missed="456" covered="1912"/><counter type="BRANCH" missed="57" covered="145"/><counter type="LINE" missed="90" covered="426"/><counter type="COMPLEXITY" missed="75" covered="198"/><counter type="METHOD" missed="32" covered="140"/><counter type="CLASS" missed="0" covered="19"/></package><package name="org/tensorics/core/tree/walking"><class name="org/tensorics/core/tree/walking/ParentAfterChildrenWalker" sourcefilename="ParentAfterChildrenWalker.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="walk" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/walking/NodeCallback;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="doWalk" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/walking/NodeCallback;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="68"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStepUp" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/walking/NodeCallback;Lorg/tensorics/core/tree/domain/Node;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onBottomNode" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/walking/NodeCallback;)V" line="74"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onEveryNode" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/walking/NodeCallback;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shallBeSkipped" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/walking/NodeCallback;)Z" line="86"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shallBeSkippedWalkDown" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/walking/NodeCallback;)Z" line="93"><counter type="INSTRUCTION" missed="6" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="116"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/walking/NodeCallback" sourcefilename="NodeCallback.java"/><class name="org/tensorics/core/tree/walking/LoopDetectedException" sourcefilename="LoopDetectedException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tree/walking/EveryNodeCallback" sourcefilename="EveryNodeCallback.java"/><class name="org/tensorics/core/tree/walking/NoMatchingNodeFoundException" sourcefilename="NoMatchingNodeFoundException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="34"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/walking/Trees" sourcefilename="Trees.java"><method name="walkParentAfterChildren" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/walking/NodeCallback;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subTreeContent" desc="(Lorg/tensorics/core/tree/domain/Node;)Ljava/util/List;" line="79"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPathsFromChildToAncestor" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/domain/Node;)Ljava/util/List;" line="99"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findBottomNodes" desc="(Lorg/tensorics/core/tree/domain/Node;)Ljava/util/Collection;" line="146"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rebuildTree" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/domain/RebuildingContext;)Lorg/tensorics/core/tree/domain/Node;" line="164"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findNodesOfClass" desc="(Lorg/tensorics/core/tree/domain/Node;Ljava/lang/Class;)Ljava/util/Set;" line="187"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findHighestNodeOfClass" desc="(Lorg/tensorics/core/tree/domain/Node;Ljava/lang/Class;)Ljava/util/Set;" line="209"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="findClosestAncestorNodeFromNodesToRootOfType" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/domain/Node;Lcom/google/common/reflect/TypeToken;)Ljava/util/Set;" line="239"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findFirstNodeOfType" desc="(Ljava/util/List;Lcom/google/common/reflect/TypeToken;)Ljava/lang/Object;" line="255"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="147"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="6" covered="34"/><counter type="COMPLEXITY" missed="2" covered="14"/><counter type="METHOD" missed="2" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/walking/TreeWalker" sourcefilename="TreeWalker.java"/><class name="org/tensorics/core/tree/walking/PathDoesNotExistException" sourcefilename="PathDoesNotExistException.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/domain/Node;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/walking/SkipStepDownCallback" sourcefilename="SkipStepDownCallback.java"/><class name="org/tensorics/core/tree/walking/SkipNodeAndSubTreesCallback" sourcefilename="SkipNodeAndSubTreesCallback.java"/><class name="org/tensorics/core/tree/walking/BottomNodeCallback" sourcefilename="BottomNodeCallback.java"/><class name="org/tensorics/core/tree/walking/StepUpCallback" sourcefilename="StepUpCallback.java"/><class name="org/tensorics/core/tree/walking/Trees$1" sourcefilename="Trees.java"><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="80"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onEvery" desc="(Lorg/tensorics/core/tree/domain/Node;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/walking/Trees$2" sourcefilename="Trees.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/Node;Ljava/util/List;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onStepUpFromChildToParent" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/domain/Node;)V" line="109"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getLastElement" desc="(Lorg/tensorics/core/tree/domain/Path;)Lorg/tensorics/core/tree/domain/Node;" line="124"><counter type="INSTRUCTION" missed="2" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="65"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/walking/Trees$3" sourcefilename="Trees.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="147"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onBottom" desc="(Lorg/tensorics/core/tree/domain/Node;)V" line="150"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/walking/Trees$4" sourcefilename="Trees.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/RebuildingContext;)V" line="165"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onEvery" desc="(Lorg/tensorics/core/tree/domain/Node;)V" line="168"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tree/walking/Trees$5" sourcefilename="Trees.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/Set;)V" line="188"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="onEvery" desc="(Lorg/tensorics/core/tree/domain/Node;)V" line="191"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/walking/Trees$6" sourcefilename="Trees.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/Set;)V" line="210"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="onEvery" desc="(Lorg/tensorics/core/tree/domain/Node;)V" line="213"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="TreeWalker.java"/><sourcefile name="EveryNodeCallback.java"/><sourcefile name="NodeCallback.java"/><sourcefile name="SkipNodeAndSubTreesCallback.java"/><sourcefile name="NoMatchingNodeFoundException.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="StepUpCallback.java"/><sourcefile name="LoopDetectedException.java"><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="PathDoesNotExistException.java"><line nr="37" mi="0" ci="16" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BottomNodeCallback.java"/><sourcefile name="Trees.java"><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="13" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="4" mb="0" cb="2"/><line nr="101" mi="0" ci="13" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="16" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="2"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="11" mb="0" cb="2"/><line nr="117" mi="0" ci="6" mb="0" cb="2"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="1" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="1" cb="1"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="2"/><line nr="133" mi="0" ci="6" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="146" mi="0" ci="4" mb="0" cb="0"/><line nr="147" mi="0" ci="12" mb="0" cb="0"/><line nr="150" mi="0" ci="5" mb="0" cb="0"/><line nr="151" mi="0" ci="1" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="164" mi="5" ci="0" mb="0" cb="0"/><line nr="165" mi="12" ci="0" mb="0" cb="0"/><line nr="168" mi="8" ci="0" mb="4" cb="0"/><line nr="169" mi="8" ci="0" mb="0" cb="0"/><line nr="170" mi="1" ci="0" mb="0" cb="0"/><line nr="172" mi="1" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="187" mi="0" ci="4" mb="0" cb="0"/><line nr="188" mi="0" ci="16" mb="0" cb="0"/><line nr="191" mi="0" ci="5" mb="0" cb="2"/><line nr="192" mi="0" ci="8" mb="0" cb="0"/><line nr="194" mi="0" ci="1" mb="0" cb="0"/><line nr="196" mi="0" ci="2" mb="0" cb="0"/><line nr="209" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="16" ci="0" mb="0" cb="0"/><line nr="213" mi="5" ci="0" mb="2" cb="0"/><line nr="214" mi="3" ci="0" mb="0" cb="0"/><line nr="215" mi="9" ci="0" mb="0" cb="0"/><line nr="217" mi="1" ci="0" mb="0" cb="0"/><line nr="219" mi="2" ci="0" mb="0" cb="0"/><line nr="239" mi="0" ci="4" mb="0" cb="0"/><line nr="241" mi="0" ci="4" mb="0" cb="0"/><line nr="242" mi="0" ci="10" mb="0" cb="2"/><line nr="243" mi="0" ci="6" mb="0" cb="0"/><line nr="244" mi="0" ci="2" mb="0" cb="2"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="248" mi="0" ci="4" mb="0" cb="0"/><line nr="249" mi="0" ci="1" mb="0" cb="0"/><line nr="250" mi="0" ci="2" mb="0" cb="0"/><line nr="255" mi="0" ci="10" mb="0" cb="2"/><line nr="256" mi="0" ci="5" mb="0" cb="2"/><line nr="257" mi="0" ci="2" mb="0" cb="0"/><line nr="259" mi="0" ci="1" mb="0" cb="0"/><line nr="260" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="81" covered="259"/><counter type="BRANCH" missed="7" covered="21"/><counter type="LINE" missed="15" covered="54"/><counter type="COMPLEXITY" missed="10" covered="27"/><counter type="METHOD" missed="6" covered="17"/><counter type="CLASS" missed="2" covered="5"/></sourcefile><sourcefile name="ParentAfterChildrenWalker.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="2"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="15" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="2"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="10" mb="0" cb="2"/><line nr="56" mi="0" ci="6" mb="1" cb="1"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="2"/><line nr="69" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="2"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="2"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="2"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="1" cb="1"/><line nr="94" mi="6" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="116"/><counter type="BRANCH" missed="2" covered="16"/><counter type="LINE" missed="1" covered="31"/><counter type="COMPLEXITY" missed="2" covered="15"/><counter type="METHOD" missed="0" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SkipStepDownCallback.java"/><counter type="INSTRUCTION" missed="91" covered="396"/><counter type="BRANCH" missed="9" covered="37"/><counter type="LINE" missed="18" covered="89"/><counter type="COMPLEXITY" missed="13" covered="44"/><counter type="METHOD" missed="7" covered="27"/><counter type="CLASS" missed="3" covered="8"/></package><package name="org/tensorics/core/quantity/conditions"><class name="org/tensorics/core/quantity/conditions/QuantityLessPredicate" sourcefilename="QuantityLessPredicate.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/QuantifiedValue;)Z" line="49"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="57"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="65"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="58"/><counter type="BRANCH" missed="14" covered="4"/><counter type="LINE" missed="18" covered="7"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/conditions/QuantityGreaterPredicate" sourcefilename="QuantityGreaterPredicate.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/QuantifiedValue;)Z" line="49"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="57"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="65"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="53"/><counter type="BRANCH" missed="14" covered="4"/><counter type="LINE" missed="18" covered="6"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/conditions/QuantityPedicateRepository" sourcefilename="QuantityPedicateRepository.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="less" desc="()Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="greater" desc="()Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/conditions/AbstractQuantityStatisticPredicate" sourcefilename="AbstractQuantityStatisticPredicate.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inverseGaussianCumulativeDistributionFunction" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtractQuantities" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="76"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zTestValueForDifference" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/QuantifiedValue;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="99"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="107"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="129"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="67"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="13"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="QuantityPedicateRepository.java"><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityLessPredicate.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="22" mb="0" cb="4"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="13" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="2" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="2" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="2" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="2" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="58"/><counter type="BRANCH" missed="14" covered="4"/><counter type="LINE" missed="18" covered="7"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractQuantityStatisticPredicate.java"><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="92" mi="0" ci="5" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="13" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="2" ci="0" mb="2" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="2" cb="0"/><line nr="118" mi="3" ci="0" mb="2" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="6" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="67"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="13"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityGreaterPredicate.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="22" mb="0" cb="4"/><line nr="50" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="10" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="13" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="3" ci="0" mb="2" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="68" mi="4" ci="0" mb="2" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="2" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="2" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="71" covered="53"/><counter type="BRANCH" missed="14" covered="4"/><counter type="LINE" missed="18" covered="6"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="207" covered="199"/><counter type="BRANCH" missed="42" covered="8"/><counter type="LINE" missed="54" covered="32"/><counter type="COMPLEXITY" missed="30" covered="15"/><counter type="METHOD" missed="9" covered="11"/><counter type="CLASS" missed="0" covered="4"/></package><package name="org/tensorics/core/resolve/options"><class name="org/tensorics/core/resolve/options/AbstractExceptionHandlingStrategy" sourcefilename="AbstractExceptionHandlingStrategy.java"><method name="&lt;init&gt;" desc="()V" line="28"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMarkerInterface" desc="()Ljava/lang/Class;" line="32"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/options/TakeFirstResolverSelectionStrategy" sourcefilename="TakeFirstResolverSelectionStrategy.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="selectResolver" desc="(Ljava/util/List;)Lorg/tensorics/core/resolve/resolvers/Resolver;" line="42"><counter type="INSTRUCTION" missed="1" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMarkerInterface" desc="()Ljava/lang/Class;" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/options/HandleWithFirstCapableAncestorStrategy$1" sourcefilename="HandleWithFirstCapableAncestorStrategy.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/resolve/options/HandleWithFirstCapableAncestorStrategy;)V" line="52"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/resolve/options/ResolvingOptions" sourcefilename="ResolvingOptions.java"><method name="createRegistryWithDefaultsExcept" desc="([Lorg/tensorics/core/resolve/options/ResolvingOption;)Lorg/tensorics/core/commons/options/OptionRegistry;" line="60"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rethrowExceptions" desc="()Lorg/tensorics/core/resolve/options/ResolvingOption;" line="66"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleExceptionsInFirstAncestor" desc="()Lorg/tensorics/core/resolve/options/ResolvingOption;" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="defaultOptions" desc="()Ljava/util/Collection;" line="74"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="24"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/options/ResolvingOption" sourcefilename="ResolvingOption.java"/><class name="org/tensorics/core/resolve/options/HandleWithFirstCapableAncestorStrategy" sourcefilename="HandleWithFirstCapableAncestorStrategy.java"><method name="&lt;init&gt;" desc="()V" line="42"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="handleWithRootNodeFailingNodeException" desc="(Lorg/tensorics/core/resolve/domain/ExceptionHandlingRequest;)V" line="50"><counter type="INSTRUCTION" missed="49" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putHandled" desc="(Ljava/lang/RuntimeException;Lorg/tensorics/core/tree/domain/ExceptionHandlingNode;Lorg/tensorics/core/tree/domain/EditableResolvingContext;)V" line="69"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="61" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/resolve/options/ResolverSelectionStrategy" sourcefilename="ResolverSelectionStrategy.java"/><class name="org/tensorics/core/resolve/options/ExceptionHandlingStrategy" sourcefilename="ExceptionHandlingStrategy.java"/><class name="org/tensorics/core/resolve/options/RethrowExceptionHandlingStrategy" sourcefilename="RethrowExceptionHandlingStrategy.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="handleWithRootNodeFailingNodeException" desc="(Lorg/tensorics/core/resolve/domain/ExceptionHandlingRequest;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="HandleWithFirstCapableAncestorStrategy.java"><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="2" cb="0"/><line nr="57" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="10" ci="0" mb="2" cb="0"/><line nr="63" mi="7" ci="0" mb="0" cb="0"/><line nr="64" mi="1" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="67" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="ExceptionHandlingStrategy.java"/><sourcefile name="ResolvingOption.java"/><sourcefile name="AbstractExceptionHandlingStrategy.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResolvingOptions.java"><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="24"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TakeFirstResolverSelectionStrategy.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="1" ci="7" mb="1" cb="1"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RethrowExceptionHandlingStrategy.java"><line nr="36" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResolverSelectionStrategy.java"/><counter type="INSTRUCTION" missed="76" covered="66"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="17" covered="16"/><counter type="COMPLEXITY" missed="9" covered="10"/><counter type="METHOD" missed="6" covered="10"/><counter type="CLASS" missed="2" covered="4"/></package><package name="org/tensorics/core/resolve/domain"><class name="org/tensorics/core/resolve/domain/ExceptionHandlingRequest" sourcefilename="ExceptionHandlingRequest.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/resolve/domain/ExceptionHandlingRequest$Builder;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="()Lorg/tensorics/core/resolve/domain/ExceptionHandlingRequest$Builder;" line="58"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRootNode" desc="()Lorg/tensorics/core/tree/domain/Node;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getException" desc="()Ljava/lang/RuntimeException;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getContext" desc="()Lorg/tensorics/core/tree/domain/EditableResolvingContext;" line="70"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getThrowingNode" desc="()Lorg/tensorics/core/tree/domain/Node;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="41"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/domain/DetailedExpressionResult" sourcefilename="DetailedExpressionResult.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/Expression;Ljava/lang/Object;Lorg/tensorics/core/tree/domain/ResolvingContext;)V" line="21"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/tensorics/core/tree/domain/Expression;Ljava/lang/Object;Lorg/tensorics/core/tree/domain/ResolvingContext;)Lorg/tensorics/core/resolve/domain/DetailedExpressionResult;" line="29"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="()Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolvedValueOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Ljava/util/Optional;" line="37"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rootExpression" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="50"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="60"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="96"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="186" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/resolve/domain/ResolvingException" sourcefilename="ResolvingException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="39"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/domain/ExceptionHandlingRequest$Builder" sourcefilename="ExceptionHandlingRequest.java"><method name="&lt;init&gt;" desc="()V" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withRoot" desc="(Lorg/tensorics/core/tree/domain/Node;)Lorg/tensorics/core/resolve/domain/ExceptionHandlingRequest$Builder;" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withThrowingNode" desc="(Lorg/tensorics/core/tree/domain/Node;)Lorg/tensorics/core/resolve/domain/ExceptionHandlingRequest$Builder;" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withException" desc="(Ljava/lang/RuntimeException;)Lorg/tensorics/core/resolve/domain/ExceptionHandlingRequest$Builder;" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withContext" desc="(Lorg/tensorics/core/tree/domain/EditableResolvingContext;)Lorg/tensorics/core/resolve/domain/ExceptionHandlingRequest$Builder;" line="110"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/tensorics/core/resolve/domain/ExceptionHandlingRequest;" line="115"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DetailedExpressionResult.java"><line nr="21" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="6" ci="0" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><line nr="24" mi="6" ci="0" mb="0" cb="0"/><line nr="25" mi="1" ci="0" mb="0" cb="0"/><line nr="29" mi="7" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="5" ci="0" mb="2" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="13" ci="0" mb="2" cb="0"/><line nr="53" mi="13" ci="0" mb="2" cb="0"/><line nr="54" mi="13" ci="0" mb="2" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="2" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="2" cb="0"/><line nr="71" mi="3" ci="0" mb="2" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="6" ci="0" mb="2" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="3" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="2" cb="0"/><line nr="85" mi="3" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="2" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="186" covered="0"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="24" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ExceptionHandlingRequest.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="2" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="69"/><counter type="LINE" missed="2" covered="20"/><counter type="COMPLEXITY" missed="2" covered="10"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="ResolvingException.java"><line nr="35" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="5"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="200" covered="74"/><counter type="BRANCH" missed="32" covered="0"/><counter type="LINE" missed="48" covered="22"/><counter type="COMPLEXITY" missed="28" covered="11"/><counter type="METHOD" missed="12" covered="11"/><counter type="CLASS" missed="1" covered="3"/></package><package name="org/tensorics/core/testing/lang"><class name="org/tensorics/core/testing/lang/TensoricDoubleTestingSupport" sourcefilename="TensoricDoubleTestingSupport.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/testing/lang/TensoricTestingSupport" sourcefilename="TensoricTestingSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/lang/EnvironmentImpl;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="within" desc="(Ljava/lang/Object;)Lorg/tensorics/core/testing/lang/OngoingCloseToMatcherCreation;" line="48"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/testing/lang/OngoingCloseToMatcherCreation" sourcefilename="OngoingCloseToMatcherCreation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Ljava/lang/Object;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeTo" desc="(Ljava/lang/Object;)Lorg/hamcrest/Matcher;" line="51"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="closeTo" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/hamcrest/Matcher;" line="55"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TensoricDoubleTestingSupport.java"><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingCloseToMatcherCreation.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="13" mb="0" cb="0"/><line nr="55" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensoricTestingSupport.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/tensorics/core/function/lang"><class name="org/tensorics/core/function/lang/FunctionExpressionSupport" sourcefilename="FunctionExpressionSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withConversionAndComparator" desc="(Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)Lorg/tensorics/core/function/lang/FunctionExpressionSupportWithConversionAndComparator;" line="52"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="8"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/lang/OngoingDeferredDiscreteFunctionBinaryOperation" sourcefilename="OngoingDeferredDiscreteFunctionBinaryOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="56"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="times" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="64"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dividedBy" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="68"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="binaryExpressionOf" desc="(Lorg/tensorics/core/function/operations/AbstractDiscreteFunctionBinaryOperation;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="74"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/lang/OngoingDiscreteFunctionBinaryOperation" sourcefilename="OngoingDiscreteFunctionBinaryOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Lorg/tensorics/core/function/DiscreteFunction;Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Lorg/tensorics/core/function/DiscreteFunction;)Lorg/tensorics/core/function/DiscreteFunction;" line="56"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Lorg/tensorics/core/function/DiscreteFunction;)Lorg/tensorics/core/function/DiscreteFunction;" line="60"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="times" desc="(Lorg/tensorics/core/function/DiscreteFunction;)Lorg/tensorics/core/function/DiscreteFunction;" line="64"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dividedBy" desc="(Lorg/tensorics/core/function/DiscreteFunction;)Lorg/tensorics/core/function/DiscreteFunction;" line="68"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/lang/FunctionExpressionSupportWithConversionAndComparator" sourcefilename="FunctionExpressionSupportWithConversionAndComparator.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateF" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/function/lang/OngoingDeferredDiscreteFunctionBinaryOperation;" line="63"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="averageOfF" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="67"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rmsOfF" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="71"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stdOfF" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="75"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="yValuesAsIterableExpression" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="81"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="environment" desc="()Lorg/tensorics/core/commons/options/Environment;" line="91"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="55"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/lang/FunctionSupportWithConversionAndComparator" sourcefilename="FunctionSupportWithConversionAndComparator.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lorg/tensorics/core/function/DiscreteFunction;)Lorg/tensorics/core/function/lang/OngoingDiscreteFunctionBinaryOperation;" line="64"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="averageOf" desc="(Lorg/tensorics/core/function/DiscreteFunction;)Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rmsOf" desc="(Lorg/tensorics/core/function/DiscreteFunction;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stdOf" desc="(Lorg/tensorics/core/function/DiscreteFunction;)Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="environment" desc="()Lorg/tensorics/core/commons/options/Environment;" line="91"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/lang/FunctionSupport" sourcefilename="FunctionSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withConversionAndComparator" desc="(Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)Lorg/tensorics/core/function/lang/FunctionSupportWithConversionAndComparator;" line="51"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="FunctionExpressionSupportWithConversionAndComparator.java"><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="11" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="55"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionSupportWithConversionAndComparator.java"><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="11" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionExpressionSupport.java"><line nr="43" mi="0" ci="7" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="8"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionSupport.java"><line nr="42" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingDeferredDiscreteFunctionBinaryOperation.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingDiscreteFunctionBinaryOperation.java"><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="56" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="11" covered="232"/><counter type="LINE" missed="2" covered="44"/><counter type="COMPLEXITY" missed="2" covered="26"/><counter type="METHOD" missed="2" covered="26"/><counter type="CLASS" missed="0" covered="6"/></package><package name="org/tensorics/core/quantity/operations"><class name="org/tensorics/core/quantity/operations/QuantitySubtraction" sourcefilename="QuantitySubtraction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/operations/QuantityMultiplicativeInversion" sourcefilename="QuantityMultiplicativeInversion.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="46"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="4"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/operations/AbstractQuantityOperation" sourcefilename="AbstractQuantityOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="environment" desc="()Lorg/tensorics/core/quantity/options/QuantityEnvironment;" line="48"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validityFor" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/QuantifiedValue;)Z" line="52"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="productError" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/QuantifiedValue;)Lcom/google/common/base/Optional;" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="62"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="70"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="26"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="7"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/operations/QuantityUnaryOperation" sourcefilename="QuantityUnaryOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/operations/QuantityOperationRepository$QuantityBinaryOperationImpl" sourcefilename="QuantityOperationRepository.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;Lorg/tensorics/core/math/operations/BinaryOperation;Ljava/util/function/BiFunction;)V" line="137"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="143"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="151"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="159"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="181"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="71" covered="34"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="6"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/operations/QuantityOperationRepository" sourcefilename="QuantityOperationRepository.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="73"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDimensionless" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;Ljava/lang/Object;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="70"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addition" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="additiveInversion" desc="()Lorg/tensorics/core/math/operations/UnaryOperation;" line="78"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="absoluteValue" desc="()Lorg/tensorics/core/math/operations/UnaryOperation;" line="82"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtraction" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="86"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zero" desc="()Lorg/tensorics/core/quantity/QuantifiedValue;" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplication" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="94"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="power" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="98"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="root" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="102"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quantifiedBinaryOperationFrom" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Ljava/util/function/BiFunction;)Lorg/tensorics/core/math/operations/BinaryOperation;" line="107"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="division" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplicativeInversion" desc="()Lorg/tensorics/core/math/operations/UnaryOperation;" line="115"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="one" desc="()Lorg/tensorics/core/quantity/QuantifiedValue;" line="119"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="two" desc="()Lorg/tensorics/core/quantity/QuantifiedValue;" line="123"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="environment" desc="()Lorg/tensorics/core/quantity/options/QuantityEnvironment;" line="127"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="149"/><counter type="LINE" missed="1" covered="27"/><counter type="COMPLEXITY" missed="1" covered="15"/><counter type="METHOD" missed="1" covered="15"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/operations/QuantityMultiplication" sourcefilename="QuantityMultiplication.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="44"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/operations/QuantityBinaryOperation" sourcefilename="QuantityBinaryOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;Lorg/tensorics/core/math/operations/BinaryOperation;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operation" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="50"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="55"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="63"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="85"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="10"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="4"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/operations/QuantityDivision" sourcefilename="QuantityDivision.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="45"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/operations/QuantityAddition" sourcefilename="QuantityAddition.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/operations/QuantityAdditiveInversion" sourcefilename="QuantityAdditiveInversion.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="45"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/operations/QuantitySumOrDifferenceOperation" sourcefilename="QuantitySumOrDifferenceOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;Lorg/tensorics/core/math/operations/BinaryOperation;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="52"><counter type="INSTRUCTION" missed="0" covered="42"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/operations/QuantityAbsoluteValue" sourcefilename="QuantityAbsoluteValue.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="15"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="20"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="QuantityAbsoluteValue.java"><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="20" mi="0" ci="8" mb="0" cb="0"/><line nr="21" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityDivision.java"><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="12" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityMultiplication.java"><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantitySumOrDifferenceOperation.java"><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="9" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityMultiplicativeInversion.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="7" ci="0" mb="0" cb="0"/><line nr="50" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="4"/><counter type="LINE" missed="4" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityOperationRepository.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="0" ci="8" mb="0" cb="0"/><line nr="66" mi="0" ci="9" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="10" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="0" ci="14" mb="0" cb="0"/><line nr="102" mi="0" ci="14" mb="0" cb="0"/><line nr="107" mi="0" ci="8" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="3" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="139" mi="0" ci="1" mb="0" cb="0"/><line nr="143" mi="0" ci="8" mb="0" cb="0"/><line nr="144" mi="0" ci="9" mb="0" cb="0"/><line nr="146" mi="0" ci="9" mb="0" cb="0"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="152" mi="3" ci="0" mb="0" cb="0"/><line nr="153" mi="13" ci="0" mb="2" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="2" cb="0"/><line nr="160" mi="2" ci="0" mb="0" cb="0"/><line nr="162" mi="4" ci="0" mb="2" cb="0"/><line nr="163" mi="2" ci="0" mb="0" cb="0"/><line nr="165" mi="5" ci="0" mb="2" cb="0"/><line nr="166" mi="2" ci="0" mb="0" cb="0"/><line nr="168" mi="3" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="2" cb="0"/><line nr="170" mi="3" ci="0" mb="2" cb="0"/><line nr="171" mi="2" ci="0" mb="0" cb="0"/><line nr="173" mi="6" ci="0" mb="2" cb="0"/><line nr="174" mi="2" ci="0" mb="0" cb="0"/><line nr="176" mi="2" ci="0" mb="0" cb="0"/><line nr="181" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="183"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="19" covered="33"/><counter type="COMPLEXITY" missed="11" covered="17"/><counter type="METHOD" missed="4" covered="17"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="QuantitySubtraction.java"><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityUnaryOperation.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityBinaryOperation.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="13" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="2" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="2" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="3" ci="0" mb="2" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="6" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="10"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="4"/><counter type="COMPLEXITY" missed="10" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityAdditiveInversion.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityAddition.java"><line nr="37" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractQuantityOperation.java"><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="13" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="2" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="2" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="26"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="7"/><counter type="COMPLEXITY" missed="10" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="240" covered="412"/><counter type="BRANCH" missed="42" covered="0"/><counter type="LINE" missed="59" covered="80"/><counter type="COMPLEXITY" missed="32" covered="37"/><counter type="METHOD" missed="11" covered="37"/><counter type="CLASS" missed="0" covered="13"/></package><package name="org/tensorics/core/iterable/operations"><class name="org/tensorics/core/iterable/operations/IterableSize" sourcefilename="IterableSize.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/operations/IterableAverage" sourcefilename="IterableAverage.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="49"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/operations/IterableStd" sourcefilename="IterableStd.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="35"><counter type="INSTRUCTION" missed="5" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/operations/IterableRms" sourcefilename="IterableRms.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="5" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/operations/IterableVar" sourcefilename="IterableVar.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="37"><counter type="INSTRUCTION" missed="5" covered="28"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$apply$1" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$apply$0" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="55"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/operations/IterableSumOfSquares" sourcefilename="IterableSumOfSquares.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/operations/IterableSum" sourcefilename="IterableSum.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="37"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/operations/IterableOperations" sourcefilename="IterableOperations.java"><method name="reduce" desc="(Lcom/google/common/collect/Multimap;Lorg/tensorics/core/iterable/operations/IterableOperation;)Ljava/util/Map;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reduce" desc="(Ljava/util/Map;Lorg/tensorics/core/iterable/operations/IterableOperation;)Ljava/util/Map;" line="59"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/iterable/operations/IterableOperation" sourcefilename="IterableOperation.java"/><sourcefile name="IterableSumOfSquares.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="2"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableSum.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="2"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableOperation.java"/><sourcefile name="IterableStd.java"><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="1" cb="1"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="27"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableSize.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="2"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableVar.java"><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="1" cb="1"/><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="7" mb="0" cb="0"/><line nr="45" mi="0" ci="9" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="55"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableRms.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="1" cb="1"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="33"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableAverage.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="2"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableOperations.java"><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="11" mb="0" cb="2"/><line nr="61" mi="0" ci="10" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="15" covered="263"/><counter type="BRANCH" missed="3" covered="13"/><counter type="LINE" missed="3" covered="58"/><counter type="COMPLEXITY" missed="3" covered="23"/><counter type="METHOD" missed="0" covered="18"/><counter type="CLASS" missed="0" covered="8"/></package><package name="org/tensorics/core/quantity/lang"><class name="org/tensorics/core/quantity/lang/OngoingQuantifiedScalarConversion" sourcefilename="OngoingQuantifiedScalarConversion.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/options/QuantificationStrategy;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="to" desc="(Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="50"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="to" desc="(Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/lang/OngoingQuantifiedScalarBinaryPredicate" sourcefilename="OngoingQuantifiedScalarBinaryPredicate.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/conditions/QuantityPedicateRepository;Lorg/tensorics/core/quantity/QuantifiedValue;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLessThan" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Z" line="46"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGreaterThan" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Z" line="50"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/lang/QuantityExpressionSupport" sourcefilename="QuantityExpressionSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/Object;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/tree/domain/Expression;" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/tree/domain/Expression;" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/lang/OngoingDeferredQuantifiedScalarOperation;" line="58"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/quantity/lang/OngoingDeferredQuantifiedScalarOperation;" line="62"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tree/domain/Expression;" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="70"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tree/domain/Expression;" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="78"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="one" desc="()Lorg/tensorics/core/quantity/QuantifiedValue;" line="82"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zero" desc="()Lorg/tensorics/core/quantity/QuantifiedValue;" line="86"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="two" desc="()Lorg/tensorics/core/quantity/QuantifiedValue;" line="90"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="63" covered="9"/><counter type="LINE" missed="11" covered="3"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="11" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/lang/OngoingQuantifiedScalarOperation" sourcefilename="OngoingQuantifiedScalarOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/operations/QuantityOperationRepository;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Ljava/lang/Object;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="50"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Ljava/lang/Object;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="54"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="58"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="62"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="70"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="74"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="times" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="78"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dividedBy" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="82"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="times" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="86"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dividedBy" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="90"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toThePowerOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="94"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="root" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="98"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="12" covered="91"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/lang/OngoingDeferredQuantifiedScalarOperation" sourcefilename="OngoingDeferredQuantifiedScalarOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/quantity/operations/QuantityOperationRepository;)V" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Ljava/lang/Object;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/tree/domain/Expression;" line="53"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Ljava/lang/Object;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/tree/domain/Expression;" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/tree/domain/Expression;" line="61"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/tree/domain/Expression;" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tree/domain/Expression;" line="73"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="77"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tree/domain/Expression;" line="81"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="85"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="times" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/tree/domain/Expression;" line="89"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dividedBy" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/tree/domain/Expression;" line="93"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="times" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tree/domain/Expression;" line="97"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="times" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="101"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dividedBy" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tree/domain/Expression;" line="105"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dividedBy" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="109"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="109" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/quantity/lang/OngoingQuantityValueExtraction" sourcefilename="OngoingQuantityValueExtraction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/quantity/operations/QuantityOperationRepository;)V" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inUnitsOf" desc="(Lorg/tensorics/core/units/Unit;)Ljava/lang/Object;" line="41"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inUnitsOf" desc="(Ljavax/measure/unit/Unit;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/quantity/lang/QuantitySupport" sourcefilename="QuantitySupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/Object;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="54"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/lang/OngoingQuantifiedScalarOperation;" line="58"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/lang/OngoingQuantifiedScalarOperation;" line="62"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="66"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="70"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="absoluteValueOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="74"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="one" desc="()Lorg/tensorics/core/quantity/QuantifiedValue;" line="78"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zero" desc="()Lorg/tensorics/core/quantity/QuantifiedValue;" line="82"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="two" desc="()Lorg/tensorics/core/quantity/QuantifiedValue;" line="86"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/lang/OngoingQuantifiedScalarConversion;" line="90"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/lang/OngoingQuantityValueExtraction;" line="94"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="operationRepository" desc="()Lorg/tensorics/core/quantity/operations/QuantityOperationRepository;" line="98"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="predicateRepository" desc="()Lorg/tensorics/core/quantity/conditions/QuantityPedicateRepository;" line="102"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testIf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/lang/OngoingQuantifiedScalarBinaryPredicate;" line="106"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="27" covered="74"/><counter type="LINE" missed="5" covered="14"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="5" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="QuantityExpressionSupport.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="8" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="86" mi="4" ci="0" mb="0" cb="0"/><line nr="90" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="63" covered="9"/><counter type="LINE" missed="11" covered="3"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="11" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingQuantifiedScalarConversion.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="10" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingDeferredQuantifiedScalarOperation.java"><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="53" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="10" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="10" ci="0" mb="0" cb="0"/><line nr="89" mi="7" ci="0" mb="0" cb="0"/><line nr="93" mi="7" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="10" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="109" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="15" covered="0"/><counter type="METHOD" missed="15" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingQuantifiedScalarOperation.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="6" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="9" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="82" mi="0" ci="7" mb="0" cb="0"/><line nr="86" mi="0" ci="9" mb="0" cb="0"/><line nr="90" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="0" ci="9" mb="0" cb="0"/><line nr="98" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="91"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="2" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingQuantityValueExtraction.java"><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="10" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="QuantitySupport.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="70" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="9" mb="0" cb="0"/><line nr="94" mi="7" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="74"/><counter type="LINE" missed="5" covered="14"/><counter type="COMPLEXITY" missed="5" covered="11"/><counter type="METHOD" missed="5" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingQuantifiedScalarBinaryPredicate.java"><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="235" covered="233"/><counter type="LINE" missed="42" covered="45"/><counter type="COMPLEXITY" missed="36" covered="29"/><counter type="METHOD" missed="36" covered="29"/><counter type="CLASS" missed="2" covered="5"/></package><package name="org/tensorics/core/tensor/operations"><class name="org/tensorics/core/tensor/operations/ElementBinaryOperation" sourcefilename="ElementBinaryOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Lorg/tensorics/core/commons/options/OptionRegistry;)V" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/operations/TensorReduction" sourcefilename="TensorReduction.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Lorg/tensorics/core/reduction/ReductionStrategy;)V" line="48"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="55"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/operations/FunctionTensorCreationOperation" sourcefilename="FunctionTensorCreationOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/util/function/Function;)V" line="47"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="perform" desc="()Lorg/tensorics/core/tensor/Tensor;" line="54"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="63"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="101"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="140" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/operations/ElementBinaryFunction" sourcefilename="ElementBinaryFunction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/operations/BinaryFunction;Lorg/tensorics/core/commons/options/OptionRegistry;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="54"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contextLeftRight" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Position;" line="61"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="performOperation" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Shape;Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Tensor;" line="67"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shape" desc="(Lorg/tensorics/core/tensor/TensorPair;)Lorg/tensorics/core/tensor/Shape;" line="76"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broadcast" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/TensorPair;" line="81"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="87"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="96"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="125"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="110"/><counter type="BRANCH" missed="22" covered="2"/><counter type="LINE" missed="24" covered="20"/><counter type="COMPLEXITY" missed="14" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/operations/InnerTensorOperation" sourcefilename="InnerTensorOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Lorg/tensorics/core/iterable/operations/IterableOperation;Lorg/tensorics/core/commons/options/OptionRegistry;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="113"><counter type="INSTRUCTION" missed="0" covered="188"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="43"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broadcast" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;Ljava/util/Set;)Lorg/tensorics/core/tensor/TensorPair;" line="180"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="186"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="196"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="232"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="136" covered="212"/><counter type="BRANCH" missed="30" covered="4"/><counter type="LINE" missed="30" covered="50"/><counter type="COMPLEXITY" missed="18" covered="5"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/operations/TensorInternals" sourcefilename="TensorInternals.java"><method name="mapOut" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/operations/OngoingMapOut;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="entrySetOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Ljava/util/Set;" line="57"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sameValues" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/lang/Object;)Lorg/tensorics/core/tensor/Tensor;" line="61"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFrom" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/util/function/Supplier;)Lorg/tensorics/core/tensor/Tensor;" line="65"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFrom" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/util/function/Function;)Lorg/tensorics/core/tensor/Tensor;" line="69"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapFrom" desc="(Lorg/tensorics/core/tensor/Tensor;)Ljava/util/Map;" line="84"><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="26" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/operations/PositionFunctions$1" sourcefilename="PositionFunctions.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="36"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/operations/PositionFunctions$2" sourcefilename="PositionFunctions.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Supplier;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/operations/ElementUnaryOperation" sourcefilename="ElementUnaryOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/operations/UnaryOperation;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="52"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="62"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="70"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="92"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="38"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="18" covered="9"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/operations/OngoingMapOut" sourcefilename="OngoingMapOut.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inDirectionOf" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/Tensor;" line="57"><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coordinatesExcept" desc="(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Set;" line="72"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensionsExcept" desc="(Ljava/util/Set;Ljava/lang/Class;)Ljava/util/Set;" line="82"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapByDimension" desc="(Ljava/util/Collection;Ljava/lang/Class;)Ljava/util/Map;" line="93"><counter type="INSTRUCTION" missed="17" covered="30"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="groupBy" desc="(Ljava/lang/Iterable;Ljava/lang/Class;)Lcom/google/common/collect/Multimap;" line="107"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="160"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="2" covered="37"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/operations/SingleValueTensorCreationOperation" sourcefilename="SingleValueTensorCreationOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/lang/Object;)V" line="36"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/operations/PositionFunctions" sourcefilename="PositionFunctions.java"><method name="constant" desc="(Ljava/lang/Object;)Ljava/util/function/Function;" line="36"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forSupplier" desc="(Ljava/util/function/Supplier;)Ljava/util/function/Function;" line="46"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="FunctionTensorCreationOperation.java"><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="50" mi="1" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="12" ci="0" mb="2" cb="0"/><line nr="56" mi="8" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="13" ci="0" mb="2" cb="0"/><line nr="66" mi="13" ci="0" mb="2" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="2" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="2" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="2" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="2" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="140" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="17" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ElementBinaryOperation.java"><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ElementBinaryFunction.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="11" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="0" ci="11" mb="0" cb="2"/><line nr="69" mi="0" ci="13" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="71" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="9" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="13" ci="0" mb="2" cb="0"/><line nr="90" mi="13" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="5" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="3" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="6" ci="0" mb="2" cb="0"/><line nr="111" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="2" cb="0"/><line nr="114" mi="3" ci="0" mb="2" cb="0"/><line nr="115" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="6" ci="0" mb="2" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="110"/><counter type="BRANCH" missed="22" covered="2"/><counter type="LINE" missed="24" covered="20"/><counter type="COMPLEXITY" missed="14" covered="7"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ElementUnaryOperation.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="11" mb="0" cb="2"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="13" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="3" ci="0" mb="2" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="3" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="2" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="38"/><counter type="BRANCH" missed="14" covered="2"/><counter type="LINE" missed="18" covered="9"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingMapOut.java"><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="6" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="11" mb="0" cb="2"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="1" mb="0" cb="0"/><line nr="68" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="73" mi="0" ci="9" mb="0" cb="2"/><line nr="74" mi="0" ci="4" mb="0" cb="2"/><line nr="75" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="2"/><line nr="84" mi="0" ci="4" mb="0" cb="2"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="2"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="1" cb="1"/><line nr="97" mi="12" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="100" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="0" cb="2"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="160"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="2" covered="37"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InnerTensorOperation.java"><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="0"/><line nr="116" mi="0" ci="6" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="118" mi="0" ci="3" mb="0" cb="0"/><line nr="120" mi="0" ci="6" mb="0" cb="0"/><line nr="122" mi="0" ci="3" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="126" mi="0" ci="8" mb="0" cb="0"/><line nr="127" mi="0" ci="1" mb="0" cb="0"/><line nr="128" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="131" mi="0" ci="4" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="1" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="3" mb="0" cb="0"/><line nr="144" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="14" mb="0" cb="2"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="150" mi="0" ci="4" mb="0" cb="0"/><line nr="151" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="154" mi="0" ci="10" mb="0" cb="2"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="156" mi="0" ci="5" mb="0" cb="0"/><line nr="158" mi="0" ci="7" mb="0" cb="0"/><line nr="159" mi="0" ci="1" mb="0" cb="0"/><line nr="160" mi="0" ci="1" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="6" mb="0" cb="0"/><line nr="171" mi="0" ci="7" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="4" mb="0" cb="0"/><line nr="175" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="180" mi="0" ci="6" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="186" mi="2" ci="0" mb="0" cb="0"/><line nr="187" mi="2" ci="0" mb="0" cb="0"/><line nr="188" mi="13" ci="0" mb="2" cb="0"/><line nr="189" mi="13" ci="0" mb="2" cb="0"/><line nr="190" mi="13" ci="0" mb="2" cb="0"/><line nr="191" mi="2" ci="0" mb="0" cb="0"/><line nr="196" mi="3" ci="0" mb="2" cb="0"/><line nr="197" mi="2" ci="0" mb="0" cb="0"/><line nr="199" mi="2" ci="0" mb="2" cb="0"/><line nr="200" mi="2" ci="0" mb="0" cb="0"/><line nr="202" mi="5" ci="0" mb="2" cb="0"/><line nr="203" mi="2" ci="0" mb="0" cb="0"/><line nr="205" mi="3" ci="0" mb="0" cb="0"/><line nr="206" mi="3" ci="0" mb="2" cb="0"/><line nr="207" mi="3" ci="0" mb="2" cb="0"/><line nr="208" mi="2" ci="0" mb="0" cb="0"/><line nr="210" mi="6" ci="0" mb="2" cb="0"/><line nr="211" mi="2" ci="0" mb="0" cb="0"/><line nr="213" mi="3" ci="0" mb="2" cb="0"/><line nr="214" mi="3" ci="0" mb="2" cb="0"/><line nr="215" mi="2" ci="0" mb="0" cb="0"/><line nr="217" mi="6" ci="0" mb="2" cb="0"/><line nr="218" mi="2" ci="0" mb="0" cb="0"/><line nr="220" mi="3" ci="0" mb="2" cb="0"/><line nr="221" mi="3" ci="0" mb="2" cb="0"/><line nr="222" mi="2" ci="0" mb="0" cb="0"/><line nr="224" mi="6" ci="0" mb="2" cb="0"/><line nr="225" mi="2" ci="0" mb="0" cb="0"/><line nr="227" mi="2" ci="0" mb="0" cb="0"/><line nr="232" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="136" covered="212"/><counter type="BRANCH" missed="30" covered="4"/><counter type="LINE" missed="30" covered="50"/><counter type="COMPLEXITY" missed="18" covered="5"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorReduction.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="0" cb="0"/><line nr="59" mi="0" ci="12" mb="0" cb="2"/><line nr="60" mi="0" ci="10" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="2"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="63"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PositionFunctions.java"><line nr="36" mi="11" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="11" ci="0" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="3" covered="0"/></sourcefile><sourcefile name="SingleValueTensorCreationOperation.java"><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TensorInternals.java"><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="12" mb="0" cb="2"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="43"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="524" covered="631"/><counter type="BRANCH" missed="91" covered="31"/><counter type="LINE" missed="117" covered="141"/><counter type="COMPLEXITY" missed="71" covered="37"/><counter type="METHOD" missed="25" covered="22"/><counter type="CLASS" missed="5" covered="7"/></package><package name="org/tensorics/core/booleans/operations"><class name="org/tensorics/core/booleans/operations/And" sourcefilename="And.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Iterable;)Ljava/lang/Boolean;" line="43"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/booleans/operations/BooleanTensorOperationsRepository" sourcefilename="BooleanTensorOperationsRepository.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/OptionRegistry;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="()Lorg/tensorics/core/math/operations/BinaryFunction;" line="29"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nand" desc="()Lorg/tensorics/core/math/operations/BinaryFunction;" line="33"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="or" desc="()Lorg/tensorics/core/math/operations/BinaryFunction;" line="37"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xor" desc="()Lorg/tensorics/core/math/operations/BinaryFunction;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="22"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/booleans/operations/BooleanOperations" sourcefilename="BooleanOperations.java"><method name="and" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="32"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nand" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="36"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="40"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xor" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="44"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$3" desc="(Ljava/lang/Boolean;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="25"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$2" desc="(Ljava/lang/Boolean;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="24"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$1" desc="(Ljava/lang/Boolean;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="23"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/Boolean;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="22"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="22"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/booleans/operations/Or" sourcefilename="Or.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="apply" desc="(Ljava/lang/Iterable;)Ljava/lang/Boolean;" line="43"><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="51"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/booleans/operations/TensorChangeDetectionOperation" sourcefilename="TensorChangeDetectionOperation.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/Comparator;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Class;Ljava/util/Comparator;)Lorg/tensorics/core/booleans/operations/TensorChangeDetectionOperation;" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Class;)Lorg/tensorics/core/booleans/operations/TensorChangeDetectionOperation;" line="40"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/tensorics/core/tensor/Tensor;)Ljava/lang/Iterable;" line="45"><counter type="INSTRUCTION" missed="0" covered="103"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="17"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="130"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Or.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="2" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="12" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BooleanOperations.java"><line nr="22" mi="0" ci="13" mb="0" cb="4"/><line nr="23" mi="0" ci="13" mb="0" cb="4"/><line nr="24" mi="0" ci="13" mb="0" cb="4"/><line nr="25" mi="0" ci="10" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="57"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorChangeDetectionOperation.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="40" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="2"/><line nr="48" mi="0" ci="8" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="2"/><line nr="53" mi="0" ci="21" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="9" mb="0" cb="2"/><line nr="63" mi="0" ci="10" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="4"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="130"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="23"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="And.java"><line nr="39" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="2" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="12" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BooleanTensorOperationsRepository.java"><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="1" mb="0" cb="0"/><line nr="29" mi="0" ci="7" mb="0" cb="0"/><line nr="33" mi="7" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="7" mb="0" cb="0"/><line nr="41" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="22"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="64" covered="209"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="12" covered="36"/><counter type="COMPLEXITY" missed="10" covered="27"/><counter type="METHOD" missed="8" covered="16"/><counter type="CLASS" missed="2" covered="3"/></package><package name="org/tensorics/core/math/structures/grouplike"><class name="org/tensorics/core/math/structures/grouplike/AbstractAbelianGroup" sourcefilename="AbstractAbelianGroup.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/operations/CommutativeAssociativeOperation;Ljava/lang/Object;Lorg/tensorics/core/math/operations/UnaryOperation;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="operation" desc="()Lorg/tensorics/core/math/operations/CommutativeAssociativeOperation;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="identity" desc="()Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inversion" desc="()Lorg/tensorics/core/math/operations/UnaryOperation;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="42"><counter type="INSTRUCTION" missed="6" covered="39"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="52"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="75" covered="82"/><counter type="BRANCH" missed="27" covered="3"/><counter type="LINE" missed="23" covered="15"/><counter type="COMPLEXITY" missed="16" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/math/structures/grouplike/Magma" sourcefilename="Magma.java"/><class name="org/tensorics/core/math/structures/grouplike/Group" sourcefilename="Group.java"/><class name="org/tensorics/core/math/structures/grouplike/CommutativeMonoid" sourcefilename="CommutativeMonoid.java"/><class name="org/tensorics/core/math/structures/grouplike/GrouplikeStructure" sourcefilename="GrouplikeStructure.java"/><class name="org/tensorics/core/math/structures/grouplike/AbelianGroup" sourcefilename="AbelianGroup.java"/><class name="org/tensorics/core/math/structures/grouplike/Semigroup" sourcefilename="Semigroup.java"/><class name="org/tensorics/core/math/structures/grouplike/FiniteStructure" sourcefilename="FiniteStructure.java"/><class name="org/tensorics/core/math/structures/grouplike/Monoid" sourcefilename="Monoid.java"/><class name="org/tensorics/core/math/structures/grouplike/CommutativeSemigroup" sourcefilename="CommutativeSemigroup.java"/><sourcefile name="FiniteStructure.java"/><sourcefile name="GrouplikeStructure.java"/><sourcefile name="Monoid.java"/><sourcefile name="AbstractAbelianGroup.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="44" mi="2" ci="11" mb="1" cb="1"/><line nr="45" mi="2" ci="11" mb="1" cb="1"/><line nr="46" mi="2" ci="11" mb="1" cb="1"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="2" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="2" ci="0" mb="2" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="2" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="2" cb="0"/><line nr="63" mi="3" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="6" ci="0" mb="2" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="3" ci="0" mb="2" cb="0"/><line nr="70" mi="3" ci="0" mb="2" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="6" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="2" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="22" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="82"/><counter type="BRANCH" missed="27" covered="3"/><counter type="LINE" missed="23" covered="15"/><counter type="COMPLEXITY" missed="16" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CommutativeSemigroup.java"/><sourcefile name="Magma.java"/><sourcefile name="Semigroup.java"/><sourcefile name="Group.java"/><sourcefile name="AbelianGroup.java"/><sourcefile name="CommutativeMonoid.java"/><counter type="INSTRUCTION" missed="75" covered="82"/><counter type="BRANCH" missed="27" covered="3"/><counter type="LINE" missed="23" covered="15"/><counter type="COMPLEXITY" missed="16" covered="6"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/tensorics/core/fields/doubles"><class name="org/tensorics/core/fields/doubles/DoubleField$DoubleAdditionGroup" sourcefilename="DoubleField.java"><method name="&lt;init&gt;" desc="()V" line="93"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/fields/doubles/DoubleField$DoubleAddition" sourcefilename="DoubleField.java"><method name="perform" desc="(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/fields/doubles/DoubleField" sourcefilename="DoubleField.java"><method name="&lt;init&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/fields/doubles/DoubleField$DoubleMultiplication" sourcefilename="DoubleField.java"><method name="perform" desc="(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;" line="71"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/fields/doubles/DoubleMath" sourcefilename="DoubleMath.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="pow" desc="(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="root" desc="(Ljava/lang/Double;Ljava/lang/Double;)Ljava/lang/Double;" line="43"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/fields/doubles/Structures" sourcefilename="Structures.java"><method name="doubles" desc="()Lorg/tensorics/core/math/ExtendedField;" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extended" desc="(Lorg/tensorics/core/math/structures/ringlike/OrderedField;Lorg/tensorics/core/math/Math;Lorg/tensorics/core/math/Cheating;)Lorg/tensorics/core/math/ExtendedField;" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/fields/doubles/DoubleField$DoubleMultiplicationGroup" sourcefilename="DoubleField.java"><method name="&lt;init&gt;" desc="()V" line="102"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/fields/doubles/DoubleCheating" sourcefilename="DoubleCheating.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromDouble" desc="(D)Ljava/lang/Double;" line="46"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toDouble" desc="(Ljava/lang/Double;)D" line="58"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/fields/doubles/AbstractOrderedField" sourcefilename="AbstractOrderedField.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/structures/grouplike/AbelianGroup;Lorg/tensorics/core/math/structures/grouplike/AbelianGroup;Lorg/tensorics/core/math/predicates/BinaryPredicate;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="additionStructure" desc="()Lorg/tensorics/core/math/structures/grouplike/AbelianGroup;" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplicationStructure" desc="()Lorg/tensorics/core/math/structures/grouplike/AbelianGroup;" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lessOrEqualPredicate" desc="()Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="42"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="47"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="136" covered="21"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="30" covered="8"/><counter type="COMPLEXITY" missed="18" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/fields/doubles/DoubleStatistics" sourcefilename="DoubleStatistics.java"><method name="standardGaussianCumulativeDistributionFunction" desc="(D)D" line="27"><counter type="INSTRUCTION" missed="4" covered="52"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="searchInverseGaussianCumulativeDistributionFunction" desc="(DDD)D" line="49"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inverseGaussianCumulativeDistributionFunction" desc="(D)D" line="68"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="9" covered="98"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/fields/doubles/DoubleField$DoubleAdditiveInversion" sourcefilename="DoubleField.java"><method name="perform" desc="(Ljava/lang/Double;)Ljava/lang/Double;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/fields/doubles/DoubleField$DoubleMultiplicativeInversion" sourcefilename="DoubleField.java"><method name="perform" desc="(Ljava/lang/Double;)Ljava/lang/Double;" line="85"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/fields/doubles/DoubleField$DoubleLessOrEqual" sourcefilename="DoubleField.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Double;Ljava/lang/Double;)Z" line="57"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DoubleStatistics.java"><line nr="27" mi="0" ci="4" mb="1" cb="1"/><line nr="28" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="0" ci="4" mb="1" cb="1"/><line nr="31" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="12" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="2"/><line nr="35" mi="0" ci="17" mb="0" cb="0"/><line nr="37" mi="0" ci="11" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="2"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="8" mb="2" cb="2"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="98"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="3" covered="15"/><counter type="COMPLEXITY" missed="4" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractOrderedField.java"><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="13" ci="0" mb="2" cb="0"/><line nr="50" mi="13" ci="0" mb="2" cb="0"/><line nr="51" mi="13" ci="0" mb="2" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="3" ci="0" mb="2" cb="0"/><line nr="68" mi="3" ci="0" mb="2" cb="0"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="2" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="2" cb="0"/><line nr="75" mi="3" ci="0" mb="2" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="3" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="136" covered="21"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="30" covered="8"/><counter type="COMPLEXITY" missed="18" covered="4"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleMath.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><line nr="43" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleCheating.java"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Structures.java"><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleField.java"><line nr="51" mi="0" ci="11" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="2"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="71" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="12" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="12" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="76"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="8"/></sourcefile><counter type="INSTRUCTION" missed="145" covered="251"/><counter type="BRANCH" missed="34" covered="12"/><counter type="LINE" missed="33" covered="46"/><counter type="COMPLEXITY" missed="22" covered="29"/><counter type="METHOD" missed="3" covered="25"/><counter type="CLASS" missed="0" covered="13"/></package><package name="org/tensorics/core/tensor/resample/impl"><class name="org/tensorics/core/tensor/resample/impl/LinearInterpolationResampler" sourcefilename="LinearInterpolationResampler.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;Ljava/util/function/Function;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resample" desc="(Ljava/util/Set;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;" line="37"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResample" desc="(Ljava/util/Set;Ljava/lang/Object;)Z" line="49"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/resample/impl/FieldInterpolator$TwoPointLinearInterpolation" sourcefilename="FieldInterpolator.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/resample/impl/FieldInterpolator;Ljava/lang/Object;Ljava/lang/Object;)V" line="113"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interpolate" desc="()Ljava/lang/Object;" line="119"><counter type="INSTRUCTION" missed="0" covered="64"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="x" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="130"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="y" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="134"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="88"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/resample/impl/FieldInterpolator" sourcefilename="FieldInterpolator.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;Ljava/util/Collection;Ljava/util/function/Function;Ljava/util/function/Function;Ljava/lang/Object;)V" line="52"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="()Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findNeigbouringX" desc="()Lorg/tensorics/core/tensor/resample/impl/FieldInterpolator$TwoPointLinearInterpolation;" line="69"><counter type="INSTRUCTION" missed="14" covered="104"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="23"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="135"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="30"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/resample/impl/RepeatingResampler" sourcefilename="RepeatingResampler.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="33"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resample" desc="(Ljava/util/Set;Ljava/util/function/Function;Ljava/lang/Object;)Ljava/lang/Object;" line="39"><counter type="INSTRUCTION" missed="28" covered="40"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="10"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResample" desc="(Ljava/util/Set;Ljava/lang/Object;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="56"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="LinearInterpolationResampler.java"><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="6" mb="0" cb="0"/><line nr="33" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="4" mb="0" cb="2"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="40" mi="0" ci="12" mb="0" cb="0"/><line nr="49" mi="0" ci="12" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RepeatingResampler.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="1" cb="1"/><line nr="40" mi="14" ci="0" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="2"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="2"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="1" cb="1"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="14" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="2"/><counter type="INSTRUCTION" missed="28" covered="56"/><counter type="BRANCH" missed="2" covered="8"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FieldInterpolator.java"><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="54" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="1" cb="1"/><line nr="71" mi="14" ci="0" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="10" mb="0" cb="2"/><line nr="84" mi="0" ci="10" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="2" mb="0" cb="2"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="2"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="6" mb="0" cb="2"/><line nr="103" mi="0" ci="6" mb="0" cb="0"/><line nr="106" mi="0" ci="8" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="1" mb="0" cb="0"/><line nr="119" mi="0" ci="14" mb="0" cb="0"/><line nr="120" mi="0" ci="13" mb="0" cb="0"/><line nr="121" mi="0" ci="7" mb="0" cb="0"/><line nr="123" mi="0" ci="13" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="10" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="134" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="223"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="42"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="42" covered="326"/><counter type="BRANCH" missed="3" covered="25"/><counter type="LINE" missed="3" covered="64"/><counter type="COMPLEXITY" missed="3" covered="24"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="4"/></package><package name="org/tensorics/core/resolve/engine"><class name="org/tensorics/core/resolve/engine/BiggestSubTreeDispatcher$ResolverCandidateRepository" sourcefilename="BiggestSubTreeDispatcher.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/ResolvingContext;)V" line="128"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="expressions" desc="()Ljava/util/Set;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolversFor" desc="(Lorg/tensorics/core/tree/domain/Expression;)Ljava/util/List;" line="140"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/resolve/resolvers/Resolver;)V" line="153"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="containsKey" desc="(Lorg/tensorics/core/tree/domain/Expression;)Z" line="157"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveNode" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/EditableResolvingContext;Lorg/tensorics/core/resolve/options/ResolverSelectionStrategy;)V" line="162"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="executeNodes" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/commons/options/OptionRegistry;)Lorg/tensorics/core/tree/domain/ResolvingContext;" line="168"><counter type="INSTRUCTION" missed="1" covered="44"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="112"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="30"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/engine/BiggestSubTreeDispatcher$1" sourcefilename="BiggestSubTreeDispatcher.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/resolve/engine/BiggestSubTreeDispatcher;Lorg/tensorics/core/tree/domain/ResolvingContext;Lorg/tensorics/core/resolve/engine/BiggestSubTreeDispatcher$ResolverCandidateRepository;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shallBeSkipped" desc="(Lorg/tensorics/core/tree/domain/Node;)Z" line="94"><counter type="INSTRUCTION" missed="14" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="process" desc="(Lorg/tensorics/core/tree/domain/Expression;)Z" line="101"><counter type="INSTRUCTION" missed="14" covered="54"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="28" covered="74"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="2" covered="14"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/engine/ResolvingEngines" sourcefilename="ResolvingEngines.java"><method name="defaultEngine" desc="()Lorg/tensorics/core/resolve/engine/ResolvingEngine;" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultEngineWithAdditional" desc="([Lorg/tensorics/core/resolve/resolvers/Resolver;)Lorg/tensorics/core/resolve/engine/ResolvingEngine;" line="46"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolvingEngineWith" desc="(Lorg/tensorics/core/resolve/resolvers/ResolverRepository;)Lorg/tensorics/core/resolve/engine/ResolvingEngine;" line="51"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/engine/ResolvingEngine" sourcefilename="ResolvingEngine.java"/><class name="org/tensorics/core/resolve/engine/ResolvedContextDidNotGrowException" sourcefilename="ResolvedContextDidNotGrowException.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/resolve/engine/EmergencyAbortLimitReachedException" sourcefilename="EmergencyAbortLimitReachedException.java"><method name="&lt;init&gt;" desc="(I)V" line="37"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/resolve/engine/DefaultResolvingEngine" sourcefilename="DefaultResolvingEngine.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Lorg/tensorics/core/tree/domain/Expression;[Lorg/tensorics/core/resolve/options/ResolvingOption;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveDetailed" desc="(Lorg/tensorics/core/tree/domain/Expression;[Lorg/tensorics/core/resolve/options/ResolvingOption;)Lorg/tensorics/core/resolve/domain/DetailedExpressionResult;" line="59"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/ResolvingContext;[Lorg/tensorics/core/resolve/options/ResolvingOption;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolveDetailed" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/ResolvingContext;[Lorg/tensorics/core/resolve/options/ResolvingOption;)Lorg/tensorics/core/resolve/domain/DetailedExpressionResult;" line="72"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolveToContext" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/ResolvingContext;[Lorg/tensorics/core/resolve/options/ResolvingOption;)Lorg/tensorics/core/tree/domain/ResolvingContext;" line="78"><counter type="INSTRUCTION" missed="4" covered="55"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwIfNoContexts" desc="(Lorg/tensorics/core/tree/domain/ResolvingContext;)V" line="102"><counter type="INSTRUCTION" missed="5" covered="3"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwIfLimitReached" desc="(I)V" line="108"><counter type="INSTRUCTION" missed="5" covered="4"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setResolverRepository" desc="(Lorg/tensorics/core/resolve/resolvers/ResolverRepository;)V" line="114"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="85"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="6" covered="27"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/engine/Dispatcher" sourcefilename="Dispatcher.java"/><class name="org/tensorics/core/resolve/engine/BiggestSubTreeDispatcher" sourcefilename="BiggestSubTreeDispatcher.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/resolve/resolvers/ResolverRepository;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="processTree" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/domain/ResolvingContext;Lorg/tensorics/core/commons/options/OptionRegistry;)Lorg/tensorics/core/tree/domain/ResolvingContext;" line="75"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findResolverCandidates" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/domain/ResolvingContext;)Lorg/tensorics/core/resolve/engine/BiggestSubTreeDispatcher$ResolverCandidateRepository;" line="88"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DefaultResolvingEngine.java"><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="6" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="2"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="88" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="1" cb="1"/><line nr="94" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="1" cb="1"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="0" ci="1" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="1" cb="1"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="114" mi="0" ci="3" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="85"/><counter type="BRANCH" missed="3" covered="5"/><counter type="LINE" missed="6" covered="27"/><counter type="COMPLEXITY" missed="5" covered="8"/><counter type="METHOD" missed="2" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Dispatcher.java"/><sourcefile name="ResolvingEngines.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EmergencyAbortLimitReachedException.java"><line nr="37" mi="12" ci="0" mb="0" cb="0"/><line nr="41" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ResolvingEngine.java"/><sourcefile name="ResolvedContextDidNotGrowException.java"><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BiggestSubTreeDispatcher.java"><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="76" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="20" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="1" cb="1"/><line nr="95" mi="14" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="5" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="2"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="6" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="2"/><line nr="108" mi="0" ci="6" mb="0" cb="2"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="1" mb="0" cb="0"/><line nr="113" mi="0" ci="7" mb="0" cb="2"/><line nr="114" mi="0" ci="5" mb="1" cb="1"/><line nr="115" mi="14" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="2" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="2" mb="0" cb="0"/><line nr="132" mi="0" ci="3" mb="0" cb="0"/><line nr="133" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="13" mb="0" cb="2"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="147" mi="0" ci="4" mb="0" cb="0"/><line nr="148" mi="0" ci="1" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="153" mi="0" ci="6" mb="0" cb="0"/><line nr="154" mi="0" ci="1" mb="0" cb="0"/><line nr="157" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="4" mb="0" cb="0"/><line nr="163" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="8" mb="0" cb="0"/><line nr="165" mi="0" ci="1" mb="0" cb="0"/><line nr="168" mi="0" ci="2" mb="0" cb="0"/><line nr="169" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="0" ci="11" mb="0" cb="2"/><line nr="173" mi="0" ci="5" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="1" ci="1" mb="0" cb="0"/><line nr="176" mi="0" ci="6" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="178" mi="0" ci="1" mb="0" cb="0"/><line nr="179" mi="0" ci="1" mb="0" cb="0"/><line nr="180" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="217"/><counter type="BRANCH" missed="2" covered="14"/><counter type="LINE" missed="2" covered="51"/><counter type="COMPLEXITY" missed="2" covered="19"/><counter type="METHOD" missed="0" covered="13"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="79" covered="322"/><counter type="BRANCH" missed="5" covered="19"/><counter type="LINE" missed="12" covered="85"/><counter type="COMPLEXITY" missed="9" covered="30"/><counter type="METHOD" missed="4" covered="23"/><counter type="CLASS" missed="2" covered="5"/></package><package name="org/tensorics/core/quantity/options"><class name="org/tensorics/core/quantity/options/UncorrelatedErrorPropagationStrategy" sourcefilename="UncorrelatedErrorPropagationStrategy.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorForSumAndDifference" desc="(Lorg/tensorics/core/quantity/ErronousValue;Lorg/tensorics/core/quantity/ErronousValue;)Lcom/google/common/base/Optional;" line="48"><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorForProductAndDivision" desc="(Lorg/tensorics/core/quantity/ErronousValue;Lorg/tensorics/core/quantity/ErronousValue;)Lcom/google/common/base/Optional;" line="58"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="squaredValueErrorProduct" desc="(Lorg/tensorics/core/quantity/ErronousValue;Lorg/tensorics/core/quantity/ErronousValue;)Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMarkerInterface" desc="()Ljava/lang/Class;" line="73"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/options/OperandPair" sourcefilename="OperandPair.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/ErronousValue;Lorg/tensorics/core/quantity/ErronousValue;Lorg/tensorics/core/units/Unit;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofLeftRightUnit" desc="(Lorg/tensorics/core/quantity/ErronousValue;Lorg/tensorics/core/quantity/ErronousValue;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/quantity/options/OperandPair;" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="left" desc="()Lorg/tensorics/core/quantity/ErronousValue;" line="58"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="right" desc="()Lorg/tensorics/core/quantity/ErronousValue;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unit" desc="()Lorg/tensorics/core/units/Unit;" line="66"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="71"><counter type="INSTRUCTION" missed="69" covered="0"/><counter type="BRANCH" missed="24" covered="0"/><counter type="LINE" missed="23" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="107"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="114" covered="28"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="29" covered="9"/><counter type="COMPLEXITY" missed="17" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/options/BinaryOperationValidityStrategy" sourcefilename="BinaryOperationValidityStrategy.java"/><class name="org/tensorics/core/quantity/options/ConfidenceLevel" sourcefilename="ConfidenceLevel.java"/><class name="org/tensorics/core/quantity/options/ImmutableConfidenceLevel" sourcefilename="ImmutableConfidenceLevel.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMarkerInterface" desc="()Ljava/lang/Class;" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="confidenceLevel" desc="()Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="58"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="66"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="88"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="68" covered="13"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="5"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/options/JScienceQuantificationStrategy" sourcefilename="JScienceQuantificationStrategy.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/Cheating;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="asSameUnit" desc="(Lorg/tensorics/core/quantity/ErronousValue;Lorg/tensorics/core/quantity/ErronousValue;)Lorg/tensorics/core/quantity/options/OperandPair;" line="57"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="standardUnitOf" desc="(Lorg/tensorics/core/quantity/Quantified;)Lorg/tensorics/core/units/Unit;" line="71"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toStandardUnit" desc="(Lorg/tensorics/core/quantity/ErronousValue;)Lorg/tensorics/core/quantity/ErronousValue;" line="77"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljavax/measure/converter/UnitConverter;Lorg/tensorics/core/quantity/ErronousValue;)Lorg/tensorics/core/quantity/ImmutableErronousValue;" line="85"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convert" desc="(Ljavax/measure/converter/UnitConverter;Ljava/lang/Object;)Ljava/lang/Object;" line="93"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiply" desc="(Lorg/tensorics/core/units/Unit;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/units/Unit;" line="98"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="divide" desc="(Lorg/tensorics/core/units/Unit;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/units/Unit;" line="104"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertValueToUnit" desc="(Lorg/tensorics/core/quantity/ErronousValue;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/quantity/ErronousValue;" line="110"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract" desc="(Lorg/tensorics/core/units/Unit;)Ljavax/measure/unit/Unit;" line="116"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="throwIfNotJScience" desc="([Lorg/tensorics/core/units/Unit;)V" line="120"><counter type="INSTRUCTION" missed="5" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="one" desc="()Lorg/tensorics/core/units/Unit;" line="129"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMarkerInterface" desc="()Ljava/lang/Class;" line="135"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="root" desc="(Lorg/tensorics/core/units/Unit;Ljava/lang/Object;)Lorg/tensorics/core/units/Unit;" line="140"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="power" desc="(Lorg/tensorics/core/units/Unit;Ljava/lang/Object;)Lorg/tensorics/core/units/Unit;" line="146"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="152"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="160"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="182"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="47"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="73" covered="272"/><counter type="BRANCH" missed="15" covered="9"/><counter type="LINE" missed="19" covered="40"/><counter type="COMPLEXITY" missed="11" covered="20"/><counter type="METHOD" missed="3" covered="16"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/options/ErrorPropagationStrategy" sourcefilename="ErrorPropagationStrategy.java"/><class name="org/tensorics/core/quantity/options/QuantificationStrategy" sourcefilename="QuantificationStrategy.java"/><class name="org/tensorics/core/quantity/options/QuantityEnvironment" sourcefilename="QuantityEnvironment.java"/><class name="org/tensorics/core/quantity/options/RequireBothValidStrategy" sourcefilename="RequireBothValidStrategy.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validityForBinaryOperation" desc="(Lorg/tensorics/core/quantity/ValidityAware;Lorg/tensorics/core/quantity/ValidityAware;)Z" line="36"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMarkerInterface" desc="()Ljava/lang/Class;" line="41"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/options/ThrowIfOneInvalidStrategy" sourcefilename="ThrowIfOneInvalidStrategy.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validityForBinaryOperation" desc="(Lorg/tensorics/core/quantity/ValidityAware;Lorg/tensorics/core/quantity/ValidityAware;)Z" line="36"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMarkerInterface" desc="()Ljava/lang/Class;" line="44"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="QuantityEnvironment.java"/><sourcefile name="ThrowIfOneInvalidStrategy.java"><line nr="32" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="8" ci="0" mb="4" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BinaryOperationValidityStrategy.java"/><sourcefile name="ErrorPropagationStrategy.java"/><sourcefile name="ConfidenceLevel.java"/><sourcefile name="QuantificationStrategy.java"/><sourcefile name="JScienceQuantificationStrategy.java"><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="2"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="2"/><line nr="63" mi="0" ci="18" mb="0" cb="0"/><line nr="66" mi="0" ci="9" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="87" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="10" mb="0" cb="0"/><line nr="98" mi="0" ci="12" mb="0" cb="0"/><line nr="99" mi="0" ci="9" mb="0" cb="0"/><line nr="104" mi="0" ci="12" mb="0" cb="0"/><line nr="105" mi="0" ci="9" mb="0" cb="0"/><line nr="110" mi="0" ci="14" mb="0" cb="0"/><line nr="111" mi="0" ci="10" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="16" mb="0" cb="2"/><line nr="121" mi="0" ci="3" mb="1" cb="1"/><line nr="122" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="1" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="135" mi="0" ci="2" mb="0" cb="0"/><line nr="140" mi="0" ci="8" mb="0" cb="0"/><line nr="141" mi="0" ci="11" mb="0" cb="0"/><line nr="146" mi="0" ci="8" mb="0" cb="0"/><line nr="147" mi="0" ci="11" mb="0" cb="0"/><line nr="152" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="13" ci="0" mb="2" cb="0"/><line nr="155" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="3" ci="0" mb="2" cb="0"/><line nr="161" mi="2" ci="0" mb="0" cb="0"/><line nr="163" mi="2" ci="0" mb="2" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="2" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="170" mi="3" ci="0" mb="2" cb="0"/><line nr="171" mi="3" ci="0" mb="2" cb="0"/><line nr="172" mi="2" ci="0" mb="0" cb="0"/><line nr="174" mi="6" ci="0" mb="2" cb="0"/><line nr="175" mi="2" ci="0" mb="0" cb="0"/><line nr="177" mi="2" ci="0" mb="0" cb="0"/><line nr="182" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="272"/><counter type="BRANCH" missed="15" covered="9"/><counter type="LINE" missed="19" covered="40"/><counter type="COMPLEXITY" missed="11" covered="20"/><counter type="METHOD" missed="3" covered="16"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OperandPair.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="2" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="2" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="3" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="6" ci="0" mb="2" cb="0"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="13" ci="0" mb="2" cb="0"/><line nr="110" mi="13" ci="0" mb="2" cb="0"/><line nr="111" mi="13" ci="0" mb="2" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="114" covered="28"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="29" covered="9"/><counter type="COMPLEXITY" missed="17" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RequireBothValidStrategy.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="12" mb="1" cb="3"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="UncorrelatedErrorPropagationStrategy.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="8" mb="0" cb="4"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="9" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="8" mb="1" cb="3"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="9" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="13" mb="0" cb="0"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="79"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ImmutableConfidenceLevel.java"><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="13" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="2" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="2" ci="0" mb="2" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="5" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="3" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="6" ci="0" mb="2" cb="0"/><line nr="81" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="68" covered="13"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="18" covered="5"/><counter type="COMPLEXITY" missed="10" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="275" covered="409"/><counter type="BRANCH" missed="65" covered="19"/><counter type="LINE" missed="71" covered="71"/><counter type="COMPLEXITY" missed="45" covered="40"/><counter type="METHOD" missed="11" covered="32"/><counter type="CLASS" missed="1" covered="5"/></package><package name="org/tensorics/core/math/predicates"><class name="org/tensorics/core/math/predicates/IsEqualTo" sourcefilename="IsEqualTo.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="perform" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;" line="13"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="test" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="18"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEqualTo" desc="()Lorg/tensorics/core/math/predicates/IsEqualTo;" line="23"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/math/predicates/IsNotEqualTo" sourcefilename="IsNotEqualTo.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="perform" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;" line="13"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="test" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="18"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotEqualTo" desc="()Lorg/tensorics/core/math/predicates/IsNotEqualTo;" line="23"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/math/predicates/BinaryPredicate" sourcefilename="BinaryPredicate.java"><method name="perform" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Boolean;" line="45"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="IsNotEqualTo.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="13" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="8" ci="0" mb="2" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="BinaryPredicate.java"><line nr="45" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IsEqualTo.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="13" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="4" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="11" covered="0"/><counter type="CLASS" missed="3" covered="0"/></package><package name="org/tensorics/incubate/spaces"><class name="org/tensorics/incubate/spaces/Metric" sourcefilename="Metric.java"/><sourcefile name="Metric.java"/></package><package name="org/tensorics/incubate/function"><class name="org/tensorics/incubate/function/SortedMapBackedDiscreteFunction" sourcefilename="SortedMapBackedDiscreteFunction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/incubate/function/SortedMapBackedDiscreteFunction$Builder;)V" line="56"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getY" desc="(Ljava/lang/Comparable;)Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="12" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getXs" desc="()Ljava/util/List;" line="78"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getYs" desc="()Ljava/util/List;" line="83"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getYsErr" desc="()Ljava/util/List;" line="88"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getName" desc="()Ljava/lang/String;" line="93"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lorg/tensorics/incubate/function/SortedMapBackedDiscreteFunction$Builder;" line="159"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="57"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="14"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/incubate/function/InterpolatedFunction" sourcefilename="InterpolatedFunction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/incubate/function/DiscreteFunction;Lorg/tensorics/incubate/function/InterpolationStrategy;)V" line="39"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getY" desc="(Ljava/lang/Comparable;)Ljava/lang/Object;" line="50"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/tensorics/incubate/function/DiscreteFunction;Lorg/tensorics/incubate/function/InterpolationStrategy;)Lorg/tensorics/incubate/function/InterpolatedFunction;" line="55"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/incubate/function/ContinuousFunction" sourcefilename="ContinuousFunction.java"/><class name="org/tensorics/incubate/function/DiscreteFunction" sourcefilename="DiscreteFunction.java"/><class name="org/tensorics/incubate/function/KeyValueFunction" sourcefilename="KeyValueFunction.java"/><class name="org/tensorics/incubate/function/ExponentialFunction" sourcefilename="ExponentialFunction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/incubate/function/ExponentialFunction$Builder;)V" line="46"><counter type="INSTRUCTION" missed="1" covered="26"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getY" desc="(Lorg/jscience/physics/amount/Amount;)Lorg/jscience/physics/amount/Amount;" line="59"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toText" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getAmplitude" desc="()Lorg/jscience/physics/amount/Amount;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInverseExponentialConstant" desc="()Lorg/jscience/physics/amount/Amount;" line="73"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lorg/tensorics/incubate/function/ExponentialFunction$Builder;" line="110"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tensor" desc="()Lorg/tensorics/core/tensor/Tensor;" line="114"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="11" covered="46"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="4" covered="5"/><counter type="METHOD" missed="3" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/incubate/function/SortedMapBackedDiscreteFunction$Builder" sourcefilename="SortedMapBackedDiscreteFunction.java"><method name="&lt;init&gt;" desc="()V" line="107"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/util/Map$Entry;)Lorg/tensorics/incubate/function/DiscreteFunctionBuilder;" line="118"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/lang/Comparable;Ljava/lang/Object;)Lorg/tensorics/incubate/function/DiscreteFunctionBuilder;" line="124"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/lang/Comparable;Ljava/lang/Object;Ljava/lang/Object;)Lorg/tensorics/incubate/function/DiscreteFunctionBuilder;" line="130"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)Lorg/tensorics/incubate/function/DiscreteFunctionBuilder;" line="136"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withInterpolationStrategy" desc="(Lorg/tensorics/incubate/function/InterpolationStrategy;)Lorg/tensorics/incubate/function/DiscreteFunctionBuilder;" line="142"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withName" desc="(Ljava/lang/String;)Lorg/tensorics/incubate/function/DiscreteFunctionBuilder;" line="148"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/tensorics/incubate/function/SortedMapBackedDiscreteFunction;" line="154"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="33"/><counter type="LINE" missed="9" covered="11"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="4" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/incubate/function/IllegalDiscreteFunctionUsageException" sourcefilename="IllegalDiscreteFunctionUsageException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/incubate/function/ExponentialFunction$Builder" sourcefilename="ExponentialFunction.java"><method name="&lt;init&gt;" desc="()V" line="88"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withAmplitude" desc="(Lorg/jscience/physics/amount/Amount;)Lorg/tensorics/incubate/function/ExponentialFunction$Builder;" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withInverseExponentialConstant" desc="(Lorg/jscience/physics/amount/Amount;)Lorg/tensorics/incubate/function/ExponentialFunction$Builder;" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/tensorics/incubate/function/ExponentialFunction;" line="105"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/incubate/function/InterpolationStrategy" sourcefilename="InterpolationStrategy.java"/><class name="org/tensorics/incubate/function/ConstantFunction" sourcefilename="ConstantFunction.java"><method name="&lt;init&gt;" desc="(Lorg/jscience/physics/amount/Amount;)V" line="42"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getY" desc="(Lorg/jscience/physics/amount/Amount;)Lorg/jscience/physics/amount/Amount;" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toText" desc="()Ljava/lang/String;" line="54"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tensor" desc="()Lorg/tensorics/core/tensor/Tensor;" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getConstant" desc="()Lorg/jscience/physics/amount/Amount;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/jscience/physics/amount/Amount;)Lorg/tensorics/incubate/function/ConstantFunction;" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/incubate/function/AnalyticalFunction" sourcefilename="AnalyticalFunction.java"/><class name="org/tensorics/incubate/function/LinearInterpolationStrategy" sourcefilename="LinearInterpolationStrategy.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interpolate" desc="(Ljava/lang/Double;Lorg/tensorics/incubate/function/DiscreteFunction;)Ljava/lang/Double;" line="39"><counter type="INSTRUCTION" missed="5" covered="128"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="20"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="5" covered="131"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/incubate/function/Functions" sourcefilename="Functions.java"><method name="convertToDiscreteFunctionFrom" desc="([D[D)Lorg/tensorics/incubate/function/DiscreteFunction;" line="45"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getXsIntersection" desc="(Lorg/tensorics/incubate/function/DiscreteFunction;Lorg/tensorics/incubate/function/DiscreteFunction;)Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="75" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToDiscreteFunctionFrom" desc="([D[D[D)Lorg/tensorics/incubate/function/DiscreteFunction;" line="76"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToDiscreteFunctionFrom" desc="(Ljava/util/Map;Ljava/lang/String;)Lorg/tensorics/incubate/function/DiscreteFunction;" line="87"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="emptyDiscreteFunction" desc="()Lorg/tensorics/incubate/function/DiscreteFunction;" line="95"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createInterpolatedFunctionFromTwoPoints" desc="(DDD)Lorg/tensorics/incubate/function/DiscreteFunction;" line="101"><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scaleFunction" desc="(Lorg/tensorics/incubate/function/DiscreteFunction;D)Lorg/tensorics/incubate/function/DiscreteFunction;" line="118"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="integrate" desc="(Lorg/tensorics/incubate/function/DiscreteFunction;)D" line="134"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="integrate" desc="(Lorg/tensorics/incubate/function/DiscreteFunction;DD)D" line="149"><counter type="INSTRUCTION" missed="0" covered="46"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cutBeginingOfExp" desc="(Lorg/tensorics/incubate/function/DiscreteFunction;D)Lorg/tensorics/incubate/function/DiscreteFunction;" line="170"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="278" covered="69"/><counter type="BRANCH" missed="26" covered="6"/><counter type="LINE" missed="46" covered="13"/><counter type="COMPLEXITY" missed="21" covered="5"/><counter type="METHOD" missed="8" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/incubate/function/DiscreteFunctionBuilder" sourcefilename="DiscreteFunctionBuilder.java"/><sourcefile name="LinearInterpolationStrategy.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="1" cb="1"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="12" mb="1" cb="3"/><line nr="53" mi="0" ci="20" mb="0" cb="0"/><line nr="57" mi="0" ci="10" mb="0" cb="2"/><line nr="58" mi="0" ci="2" mb="0" cb="2"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="2"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="1" mb="0" cb="0"/><line nr="66" mi="0" ci="11" mb="0" cb="0"/><line nr="68" mi="0" ci="20" mb="0" cb="0"/><line nr="69" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="131"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="21"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConstantFunction.java"><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="7" ci="0" mb="2" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="KeyValueFunction.java"/><sourcefile name="InterpolatedFunction.java"><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="8" ci="0" mb="2" cb="0"/><line nr="44" mi="8" ci="0" mb="2" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="7" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Functions.java"><line nr="45" mi="4" ci="0" mb="0" cb="0"/><line nr="46" mi="8" ci="0" mb="2" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="4" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="18" ci="0" mb="0" cb="0"/><line nr="64" mi="12" ci="0" mb="0" cb="0"/><line nr="66" mi="10" ci="0" mb="2" cb="0"/><line nr="67" mi="10" ci="0" mb="4" cb="0"/><line nr="68" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="10" ci="0" mb="4" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="2" cb="0"/><line nr="81" mi="15" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="11" ci="0" mb="2" cb="0"/><line nr="89" mi="11" ci="0" mb="0" cb="0"/><line nr="90" mi="1" ci="0" mb="0" cb="0"/><line nr="91" mi="9" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="9" ci="0" mb="0" cb="0"/><line nr="103" mi="9" ci="0" mb="0" cb="0"/><line nr="104" mi="8" ci="0" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="118" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="120" mi="11" ci="0" mb="2" cb="0"/><line nr="121" mi="12" ci="0" mb="0" cb="0"/><line nr="122" mi="1" ci="0" mb="0" cb="0"/><line nr="123" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="6" mb="0" cb="0"/><line nr="136" mi="0" ci="9" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="149" mi="0" ci="2" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="2" mb="0" cb="0"/><line nr="152" mi="0" ci="10" mb="0" cb="2"/><line nr="153" mi="0" ci="10" mb="0" cb="4"/><line nr="154" mi="0" ci="13" mb="0" cb="0"/><line nr="155" mi="0" ci="3" mb="0" cb="0"/><line nr="157" mi="0" ci="1" mb="0" cb="0"/><line nr="158" mi="0" ci="2" mb="0" cb="0"/><line nr="170" mi="2" ci="0" mb="0" cb="0"/><line nr="172" mi="11" ci="0" mb="2" cb="0"/><line nr="173" mi="8" ci="0" mb="2" cb="0"/><line nr="174" mi="8" ci="0" mb="0" cb="0"/><line nr="176" mi="1" ci="0" mb="0" cb="0"/><line nr="178" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="278" covered="69"/><counter type="BRANCH" missed="26" covered="6"/><counter type="LINE" missed="46" covered="13"/><counter type="COMPLEXITY" missed="21" covered="5"/><counter type="METHOD" missed="8" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DiscreteFunctionBuilder.java"/><sourcefile name="ExponentialFunction.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="2"/><line nr="51" mi="1" ci="7" mb="1" cb="1"/><line nr="53" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><line nr="110" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="11" covered="64"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="17"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="IllegalDiscreteFunctionUsageException.java"><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AnalyticalFunction.java"/><sourcefile name="ContinuousFunction.java"/><sourcefile name="SortedMapBackedDiscreteFunction.java"><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="2"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="1" cb="1"/><line nr="70" mi="12" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="7" mb="0" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="3" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="113" mi="0" ci="2" mb="0" cb="0"/><line nr="115" mi="0" ci="1" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="6" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="0" cb="0"/><line nr="131" mi="6" ci="0" mb="0" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="5" ci="0" mb="0" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="3" mb="0" cb="0"/><line nr="143" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="3" ci="0" mb="0" cb="0"/><line nr="149" mi="2" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="90"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="12" covered="25"/><counter type="COMPLEXITY" missed="7" covered="10"/><counter type="METHOD" missed="6" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="DiscreteFunction.java"/><sourcefile name="InterpolationStrategy.java"/><counter type="INSTRUCTION" missed="422" covered="354"/><counter type="BRANCH" missed="36" covered="22"/><counter type="LINE" missed="81" covered="76"/><counter type="COMPLEXITY" missed="47" covered="30"/><counter type="METHOD" missed="27" covered="21"/><counter type="CLASS" missed="3" covered="6"/></package><package name="org/tensorics/core/function/operations"><class name="org/tensorics/core/function/operations/CodomainExtraction" sourcefilename="CodomainExtraction.java"><method name="&lt;init&gt;" desc="()V" line="37"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Lorg/tensorics/core/function/DiscreteFunction;)Ljava/lang/Iterable;" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="yValuesOf" desc="(Lorg/tensorics/core/function/DiscreteFunction;)Ljava/util/Collection;" line="45"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/operations/DiscreteFunctionMultiplication" sourcefilename="DiscreteFunctionMultiplication.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/operations/DiscreteFunctionDivision" sourcefilename="DiscreteFunctionDivision.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/operations/DiscreteFunctionSubtraction" sourcefilename="DiscreteFunctionSubtraction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/operations/DiscreteFunctionAddition" sourcefilename="DiscreteFunctionAddition.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/operations/DiscreteFunctionOperationRepository" sourcefilename="DiscreteFunctionOperationRepository.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addition" desc="()Lorg/tensorics/core/function/operations/DiscreteFunctionAddition;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtraction" desc="()Lorg/tensorics/core/function/operations/DiscreteFunctionSubtraction;" line="61"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplication" desc="()Lorg/tensorics/core/function/operations/DiscreteFunctionMultiplication;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="division" desc="()Lorg/tensorics/core/function/operations/DiscreteFunctionDivision;" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/operations/AbstractDiscreteFunctionBinaryOperation" sourcefilename="AbstractDiscreteFunctionBinaryOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Lorg/tensorics/core/commons/operations/Conversion;Lorg/tensorics/core/math/operations/BinaryOperation;Ljava/util/Comparator;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Lorg/tensorics/core/function/DiscreteFunction;Lorg/tensorics/core/function/DiscreteFunction;)Lorg/tensorics/core/function/DiscreteFunction;" line="67"><counter type="INSTRUCTION" missed="0" covered="61"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="91"><counter type="INSTRUCTION" missed="8" covered="50"/><counter type="BRANCH" missed="4" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="4" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="102"><counter type="INSTRUCTION" missed="85" covered="0"/><counter type="BRANCH" missed="30" covered="0"/><counter type="LINE" missed="28" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="145"><counter type="INSTRUCTION" missed="27" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="120" covered="126"/><counter type="BRANCH" missed="34" covered="6"/><counter type="LINE" missed="29" covered="24"/><counter type="COMPLEXITY" missed="21" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DiscreteFunctionSubtraction.java"><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CodomainExtraction.java"><line nr="37" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="13" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DiscreteFunctionAddition.java"><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DiscreteFunctionOperationRepository.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="8" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><line nr="52" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="47"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DiscreteFunctionDivision.java"><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractDiscreteFunctionBinaryOperation.java"><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="0" ci="13" mb="0" cb="2"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="2" ci="11" mb="1" cb="1"/><line nr="94" mi="2" ci="11" mb="1" cb="1"/><line nr="95" mi="2" ci="11" mb="1" cb="1"/><line nr="96" mi="2" ci="11" mb="1" cb="1"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="2" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="2" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="2" cb="0"/><line nr="113" mi="3" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="2" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="3" ci="0" mb="2" cb="0"/><line nr="120" mi="3" ci="0" mb="2" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="6" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="2" cb="0"/><line nr="127" mi="3" ci="0" mb="2" cb="0"/><line nr="128" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="6" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="2" cb="0"/><line nr="134" mi="3" ci="0" mb="2" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="137" mi="6" ci="0" mb="2" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="27" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="120" covered="126"/><counter type="BRANCH" missed="34" covered="6"/><counter type="LINE" missed="29" covered="24"/><counter type="COMPLEXITY" missed="21" covered="4"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DiscreteFunctionMultiplication.java"><line nr="42" mi="0" ci="8" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="120" covered="232"/><counter type="BRANCH" missed="34" covered="6"/><counter type="LINE" missed="29" covered="46"/><counter type="COMPLEXITY" missed="21" covered="16"/><counter type="METHOD" missed="2" covered="15"/><counter type="CLASS" missed="0" covered="7"/></package><package name="org/tensorics/core/math/impl"><class name="org/tensorics/core/math/impl/ExtendedFieldImpl$PowerOperation" sourcefilename="ExtendedFieldImpl.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/Math;)V" line="83"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="89"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="94"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="102"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="124"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="41"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="13" covered="9"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/math/impl/ExtendedFieldImpl" sourcefilename="ExtendedFieldImpl.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/structures/ringlike/OrderedField;Lorg/tensorics/core/math/Math;Lorg/tensorics/core/math/Cheating;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="power" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="54"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="root" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="cheating" desc="()Lorg/tensorics/core/math/Cheating;" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$root$0" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="31"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/math/impl/ExplicitFieldImpl" sourcefilename="ExplicitFieldImpl.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/structures/ringlike/OrderedField;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="51"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addition" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="75"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplication" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="80"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="additiveInversion" desc="()Lorg/tensorics/core/math/operations/UnaryOperation;" line="85"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="absoluteValue" desc="()Lorg/tensorics/core/math/operations/UnaryOperation;" line="90"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtraction" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zero" desc="()Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="division" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="111"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplicativeInversion" desc="()Lorg/tensorics/core/math/operations/UnaryOperation;" line="116"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="one" desc="()Ljava/lang/Object;" line="121"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="two" desc="()Ljava/lang/Object;" line="126"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="less" desc="()Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="131"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lessOrEqual" desc="()Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="136"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equal" desc="()Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="141"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="greaterOrEqual" desc="()Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="146"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="greater" desc="()Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="151"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="comparator" desc="()Ljava/util/Comparator;" line="156"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$absoluteValue$1" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/Object;Ljava/lang/Object;)I" line="63"><counter type="INSTRUCTION" missed="2" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="142"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ExplicitFieldImpl.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="9" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="2"/><line nr="64" mi="0" ci="6" mb="1" cb="1"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="5" mb="0" cb="0"/><line nr="90" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="0" ci="7" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="106" mi="0" ci="5" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="121" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="3" mb="0" cb="0"/><line nr="131" mi="0" ci="3" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="3" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="3" mb="0" cb="0"/><line nr="156" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="142"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="34"/><counter type="COMPLEXITY" missed="1" covered="21"/><counter type="METHOD" missed="0" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExtendedFieldImpl.java"><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="94" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="2" ci="11" mb="1" cb="1"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="102" mi="3" ci="0" mb="2" cb="0"/><line nr="103" mi="2" ci="0" mb="0" cb="0"/><line nr="105" mi="2" ci="0" mb="2" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="2" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="3" ci="0" mb="2" cb="0"/><line nr="113" mi="3" ci="0" mb="2" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="116" mi="6" ci="0" mb="2" cb="0"/><line nr="117" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="72"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="13" covered="17"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="41" covered="214"/><counter type="BRANCH" missed="14" covered="6"/><counter type="LINE" missed="14" covered="51"/><counter type="COMPLEXITY" missed="9" covered="30"/><counter type="METHOD" missed="1" covered="28"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/tensorics/core/tensorbacked/dimtyped"><class name="org/tensorics/core/tensorbacked/dimtyped/TensorbackedScalarBuilder" sourcefilename="TensorbackedScalarBuilder.java"/><class name="org/tensorics/core/tensorbacked/dimtyped/Tensorbacked3dBuilder" sourcefilename="Tensorbacked3dBuilder.java"/><class name="org/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilderImpl" sourcefilename="DimtypedTensorbackedBuilderImpl.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/TensorBuilder;Ljava/lang/Class;Ljava/lang/Class;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/tensorics/core/tensor/TensorBuilder;Ljava/lang/Class;Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="32"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="immutableBuilderFrom" desc="(Ljava/lang/Class;Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="36"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="build" desc="()Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbacked;" line="43"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="context" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="48"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="context" desc="([Ljava/lang/Object;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="54"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="61"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensor/Position;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="67"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensor/Position;Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="73"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbacked;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="79"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Lorg/tensorics/core/tensor/Position;Ljava/lang/Object;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="85"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Set;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="91"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Ljava/util/Map$Entry;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="97"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="103"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="109"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensor/Position;Ljava/util/Map;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="115"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="proxy" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder;" line="121"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="93" covered="70"/><counter type="LINE" missed="22" covered="12"/><counter type="COMPLEXITY" missed="11" covered="6"/><counter type="METHOD" missed="11" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/dimtyped/Tensorbacked3d" sourcefilename="Tensorbacked3d.java"><method name="get" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="6"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="10"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="18"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/dimtyped/Tensorbacked4d" sourcefilename="Tensorbacked4d.java"><method name="get" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="6"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="10"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="22" covered="22"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/dimtyped/Tensorbacked1dBuilder" sourcefilename="Tensorbacked1dBuilder.java"/><class name="org/tensorics/core/tensorbacked/dimtyped/Tensorbacked5d" sourcefilename="Tensorbacked5d.java"><method name="get" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="6"><counter type="INSTRUCTION" missed="0" covered="26"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z" line="10"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="26" covered="26"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbacked" sourcefilename="DimtypedTensorbacked.java"/><class name="org/tensorics/core/tensorbacked/dimtyped/Tensorbacked1d" sourcefilename="Tensorbacked1d.java"><method name="get" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="6"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;)Z" line="10"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="10" covered="10"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/dimtyped/Tensorbacked2d" sourcefilename="Tensorbacked2d.java"><method name="get" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="6"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="11"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="14" covered="14"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilder" sourcefilename="DimtypedTensorbackedBuilder.java"/><class name="org/tensorics/core/tensorbacked/dimtyped/Tensorbacked5dBuilder" sourcefilename="Tensorbacked5dBuilder.java"/><class name="org/tensorics/core/tensorbacked/dimtyped/Tensorbacked2dBuilder" sourcefilename="Tensorbacked2dBuilder.java"/><class name="org/tensorics/core/tensorbacked/dimtyped/DimtypedTypes" sourcefilename="DimtypedTypes.java"><method name="coordinateParametrizedSubtypeOf" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="46"><counter type="INSTRUCTION" missed="0" covered="84"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensionListFrom" desc="(Ljava/lang/Class;)Ljava/util/List;" line="71"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertNoObjectDimension" desc="(Ljava/lang/Class;Ljava/util/Collection;)V" line="86"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertDistinctDimensionality" desc="(Ljava/lang/Class;Ljava/util/Collection;)V" line="95"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensionsFrom" desc="(Ljava/lang/Class;)Ljava/util/Set;" line="105"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allowedTypes" desc="()Lcom/google/common/collect/ImmutableSet;" line="109"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$dimensionListFrom$2" desc="(Lcom/google/common/reflect/TypeToken;)Ljava/lang/Class;" line="77"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$dimensionListFrom$1" desc="(Lcom/google/common/reflect/TypeToken;Ljava/lang/Class;I)Lcom/google/common/reflect/TypeToken;" line="76"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$coordinateParametrizedSubtypeOf$0" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z" line="52"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="230"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/dimtyped/DimtypedTensorbackedBuilderImpl$DelegatingInvocationHandler" sourcefilename="DimtypedTensorbackedBuilderImpl.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Lorg/tensorics/core/tensorbacked/TensorbackedBuilder;)V" line="129"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;" line="136"><counter type="INSTRUCTION" missed="18" covered="40"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="7"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="55"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="11"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/dimtyped/TensorbackedScalar" sourcefilename="TensorbackedScalar.java"><method name="get" desc="()Ljava/lang/Object;" line="6"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="()Ljava/lang/Object;" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensorbacked/dimtyped/Tensorbacked4dBuilder" sourcefilename="Tensorbacked4dBuilder.java"/><sourcefile name="Tensorbacked4d.java"><line nr="6" mi="0" ci="22" mb="0" cb="0"/><line nr="10" mi="22" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="22"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DimtypedTensorbackedBuilder.java"/><sourcefile name="Tensorbacked2dBuilder.java"/><sourcefile name="Tensorbacked1dBuilder.java"/><sourcefile name="Tensorbacked1d.java"><line nr="6" mi="0" ci="10" mb="0" cb="0"/><line nr="10" mi="10" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="10"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tensorbacked2d.java"><line nr="6" mi="0" ci="14" mb="0" cb="0"/><line nr="11" mi="14" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="14"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tensorbacked3d.java"><line nr="6" mi="0" ci="18" mb="0" cb="0"/><line nr="10" mi="18" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="18"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tensorbacked5d.java"><line nr="6" mi="0" ci="26" mb="0" cb="0"/><line nr="10" mi="26" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="26" covered="26"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DimtypedTypes.java"><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="4" mb="0" cb="0"/><line nr="24" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="4" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="2"/><line nr="47" mi="0" ci="18" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="22" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="2"/><line nr="62" mi="0" ci="20" mb="0" cb="0"/><line nr="67" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="9" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="2"/><line nr="89" mi="0" ci="18" mb="0" cb="0"/><line nr="92" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="6" mb="0" cb="0"/><line nr="96" mi="0" ci="3" mb="0" cb="0"/><line nr="97" mi="0" ci="4" mb="0" cb="2"/><line nr="98" mi="0" ci="27" mb="0" cb="0"/><line nr="102" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="4" mb="0" cb="0"/><line nr="109" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="230"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="38"/><counter type="COMPLEXITY" missed="0" covered="15"/><counter type="METHOD" missed="0" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorbackedScalar.java"><line nr="6" mi="6" ci="0" mb="0" cb="0"/><line nr="10" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TensorbackedScalarBuilder.java"/><sourcefile name="DimtypedTensorbacked.java"/><sourcefile name="Tensorbacked5dBuilder.java"/><sourcefile name="Tensorbacked4dBuilder.java"/><sourcefile name="DimtypedTensorbackedBuilderImpl.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="8" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="6" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="0" ci="16" mb="0" cb="0"/><line nr="129" mi="0" ci="2" mb="0" cb="0"/><line nr="130" mi="0" ci="6" mb="0" cb="0"/><line nr="131" mi="0" ci="6" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="2"/><line nr="137" mi="0" ci="5" mb="1" cb="1"/><line nr="138" mi="0" ci="7" mb="0" cb="0"/><line nr="139" mi="0" ci="7" mb="0" cb="0"/><line nr="140" mi="0" ci="7" mb="0" cb="0"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="14" ci="0" mb="0" cb="0"/><line nr="148" mi="0" ci="6" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="150" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="111" covered="125"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="25" covered="23"/><counter type="COMPLEXITY" missed="12" covered="9"/><counter type="METHOD" missed="11" covered="8"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Tensorbacked3dBuilder.java"/><counter type="INSTRUCTION" missed="210" covered="445"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="32" covered="66"/><counter type="COMPLEXITY" missed="19" covered="29"/><counter type="METHOD" missed="18" covered="23"/><counter type="CLASS" missed="1" covered="8"/></package><package name="org/tensorics/core/util/chains"><class name="org/tensorics/core/util/chains/Chains$OngoingMainChain" sourcefilename="Chains.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="154"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endRecursionWith" desc="(Ljava/util/function/Function;)Lorg/tensorics/core/util/chains/Chains$OngoingMainChain;" line="161"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endRecursionDefaultDepth" desc="(I)Lorg/tensorics/core/util/chains/Chains$OngoingMainChain;" line="166"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="either" desc="(Ljava/util/function/Function;)Lorg/tensorics/core/util/chains/Chains$OngoingMainChain;" line="171"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="either" desc="(Ljava/util/function/BiFunction;)Lorg/tensorics/core/util/chains/Chains$OngoingMainChain;" line="176"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElseThrow" desc="()Lorg/tensorics/core/util/chains/Chain;" line="181"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElseNull" desc="()Lorg/tensorics/core/util/chains/Chain;" line="185"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElse" desc="(Ljava/lang/Object;)Lorg/tensorics/core/util/chains/Chain;" line="189"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lorg/tensorics/core/util/chains/AbstractChainBuilder;" line="196"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="40"/><counter type="LINE" missed="6" covered="10"/><counter type="COMPLEXITY" missed="3" covered="6"/><counter type="METHOD" missed="3" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/chains/CaseMatchings" sourcefilename="CaseMatchings.java"><method name="from" desc="(Ljava/lang/Class;Ljava/lang/Class;)Lorg/tensorics/core/util/chains/CaseMatchings$ClassDispatcher;" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/tensorics/core/util/chains/CaseMatchings$ClassDispatcher;" line="58"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="typeOfOnlyParameter" desc="(Lcom/google/common/reflect/Invokable;)Ljava/lang/Class;" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="methods" desc="(Ljava/lang/Class;)Ljava/util/Set;" line="70"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sortByHierarchy" desc="(Ljava/util/Set;)Ljava/util/SortedMap;" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertValidReprMethods" desc="(Ljava/util/Set;Ljava/lang/Class;)V" line="87"><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$sortByHierarchy$3" desc="(Lcom/google/common/reflect/Invokable;)Lcom/google/common/reflect/Invokable;" line="82"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$methods$2" desc="(Lcom/google/common/reflect/Invokable;)Z" line="74"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$methods$1" desc="(Ljava/lang/reflect/Method;)Lcom/google/common/reflect/Invokable;" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$static$0" desc="(Ljava/lang/Class;Ljava/lang/Class;)I" line="34"><counter type="INSTRUCTION" missed="2" covered="30"/><counter type="BRANCH" missed="3" covered="7"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="31"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="149"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="1" covered="29"/><counter type="COMPLEXITY" missed="3" covered="18"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/chains/ImmutableRecursion" sourcefilename="ImmutableRecursion.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/BiFunction;ILjava/util/Set;Ljava/util/function/Function;)V" line="26"><counter type="INSTRUCTION" missed="1" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="delegatingTo" desc="(Ljava/util/function/BiFunction;)Lorg/tensorics/core/util/chains/ImmutableRecursion;" line="35"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endRecursionAtDepth" desc="(I)Lorg/tensorics/core/util/chains/ImmutableRecursion;" line="39"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endingRecursionWith" desc="(Ljava/util/function/Function;)Lorg/tensorics/core/util/chains/ImmutableRecursion;" line="43"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withAdditionalQuery" desc="(Ljava/lang/Object;)Lorg/tensorics/core/util/chains/ImmutableRecursion;" line="47"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="24" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="actualRecursionDepth" desc="()I" line="64"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$delegatingTo$0" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="35"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="102"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/chains/Chain" sourcefilename="Chain.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/BiFunction;Ljava/util/function/Function;I)V" line="15"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;I)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/chains/MainChainBuilder" sourcefilename="MainChainBuilder.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="endRecursionWith" desc="(Ljava/util/function/Function;)Lorg/tensorics/core/util/chains/MainChainBuilder;" line="17"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="endRecursionAtDepth" desc="(I)Lorg/tensorics/core/util/chains/MainChainBuilder;" line="22"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/tensorics/core/util/chains/Chain;" line="28"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="13"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="21"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/chains/CaseMatchings$ClassInstantiator" sourcefilename="CaseMatchings.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="187"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="194"><counter type="INSTRUCTION" missed="17" covered="4"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="13"/><counter type="LINE" missed="2" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/chains/AbstractRecursiveRepresenter" sourcefilename="AbstractRecursiveRepresenter.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="recurse" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="15"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/chains/Branch" sourcefilename="Branch.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/util/chains/AbstractChainBuilder;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="14" covered="36"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="52"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/chains/ConditionedMapper" sourcefilename="ConditionedMapper.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Predicate;Ljava/util/function/Function;Ljava/util/function/BiFunction;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="condition" desc="()Ljava/util/function/Predicate;" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/chains/CaseMatchings$ClassDispatcher" sourcefilename="CaseMatchings.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/function/Supplier;Ljava/util/SortedMap;)V" line="112"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="assertSupplierCreatesInstancesWhenRecursive" desc="()V" line="120"><counter type="INSTRUCTION" missed="26" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="3" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="apply" desc="(Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;" line="136"><counter type="INSTRUCTION" missed="9" covered="47"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="4" covered="10"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newInstance" desc="(Ljava/util/function/Function;)Ljava/lang/Object;" line="158"><counter type="INSTRUCTION" missed="20" covered="18"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="103"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="9" covered="27"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/chains/BranchChainBuilder" sourcefilename="BranchChainBuilder.java"><method name="&lt;init&gt;" desc="()V" line="7"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/tensorics/core/util/chains/Branch;" line="11"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/util/chains/Chains" sourcefilename="Chains.java"><method name="chainFor" desc="(Ljava/lang/Class;)Lorg/tensorics/core/util/chains/Chains$OngoingMainChain;" line="43"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newFunctionBuilder" desc="(Ljava/lang/Class;)Lorg/tensorics/core/util/chains/Chains$OngoingMainChain;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/chains/Chains$OngoingBranch" sourcefilename="Chains.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/function/Predicate;Ljava/util/function/Function;Lorg/tensorics/core/util/chains/BranchChainBuilder;Lorg/tensorics/core/util/chains/Chains$AbstractOngoingChain;)V" line="111"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="then" desc="(Ljava/util/function/Function;)Lorg/tensorics/core/util/chains/Chains$OngoingBranch;" line="119"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="then" desc="(Ljava/util/function/BiFunction;)Lorg/tensorics/core/util/chains/Chains$OngoingBranch;" line="124"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orElseThrow" desc="()Lorg/tensorics/core/util/chains/Chains$AbstractOngoingChain;" line="129"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orElseFallThrough" desc="()Lorg/tensorics/core/util/chains/Chains$AbstractOngoingChain;" line="134"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orElseBreakWith" desc="(Ljava/lang/Object;)Lorg/tensorics/core/util/chains/Chains$AbstractOngoingChain;" line="139"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="()Lorg/tensorics/core/util/chains/AbstractChainBuilder;" line="147"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="99" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/util/chains/Chains$AbstractOngoingChain" sourcefilename="Chains.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Ljava/util/function/Function;)Lorg/tensorics/core/util/chains/Chains$AbstractOngoingChain;" line="62"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Ljava/util/function/BiFunction;)Lorg/tensorics/core/util/chains/Chains$AbstractOngoingChain;" line="67"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchCasesFrom" desc="(Ljava/lang/Class;)Lorg/tensorics/core/util/chains/Chains$AbstractOngoingChain;" line="72"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchCasesFrom" desc="(Ljava/lang/Class;Ljava/util/function/Supplier;)Lorg/tensorics/core/util/chains/Chains$AbstractOngoingChain;" line="77"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="branchIf" desc="(Ljava/util/function/Predicate;)Lorg/tensorics/core/util/chains/Chains$OngoingBranch;" line="82"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="branchIf" desc="(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lorg/tensorics/core/util/chains/Chains$OngoingBranch;" line="86"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="branchCase" desc="(Ljava/lang/Class;)Lorg/tensorics/core/util/chains/Chains$OngoingBranch;" line="90"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newBranchBuilder" desc="(Ljava/util/function/Predicate;Ljava/util/function/Function;)Lorg/tensorics/core/util/chains/Chains$OngoingBranch;" line="94"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="19"/><counter type="LINE" missed="10" covered="6"/><counter type="COMPLEXITY" missed="7" covered="2"/><counter type="METHOD" missed="7" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/chains/AbstractChainBuilder" sourcefilename="AbstractChainBuilder.java"><method name="&lt;init&gt;" desc="()V" line="15"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMapper" desc="(Ljava/util/function/Function;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMapper" desc="(Ljava/util/function/BiFunction;)V" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addMapper" desc="(Ljava/util/function/Predicate;Ljava/util/function/Function;Ljava/util/function/Function;)V" line="34"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="addConditionedMapper" desc="(Ljava/util/function/Predicate;Ljava/util/function/Function;Ljava/util/function/BiFunction;)Lorg/tensorics/core/util/chains/AbstractChainBuilder;" line="40"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElseThrow" desc="()Lorg/tensorics/core/util/chains/AbstractChainBuilder;" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElseNull" desc="()Lorg/tensorics/core/util/chains/AbstractChainBuilder;" line="52"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="orElse" desc="(Ljava/lang/Object;)Lorg/tensorics/core/util/chains/AbstractChainBuilder;" line="58"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$addMapper$2" desc="(Ljava/util/function/Function;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;" line="35"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$addMapper$1" desc="(Ljava/lang/Object;)Z" line="30"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$addMapper$0" desc="(Ljava/util/function/Function;Ljava/lang/Object;Ljava/util/function/Function;)Ljava/lang/Object;" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="66"/><counter type="LINE" missed="6" covered="17"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ConditionedMapper.java"><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="5" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Chains.java"><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="72" mi="7" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="0" cb="0"/><line nr="77" mi="8" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="13" ci="0" mb="0" cb="0"/><line nr="94" mi="13" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="0" cb="0"/><line nr="112" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="6" ci="0" mb="0" cb="0"/><line nr="114" mi="6" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="129" mi="14" ci="0" mb="0" cb="0"/><line nr="130" mi="3" ci="0" mb="0" cb="0"/><line nr="134" mi="14" ci="0" mb="0" cb="0"/><line nr="135" mi="3" ci="0" mb="0" cb="0"/><line nr="139" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="15" ci="0" mb="0" cb="0"/><line nr="142" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="3" ci="0" mb="0" cb="0"/><line nr="154" mi="0" ci="5" mb="0" cb="0"/><line nr="157" mi="0" ci="3" mb="0" cb="0"/><line nr="158" mi="0" ci="1" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="2" ci="0" mb="0" cb="0"/><line nr="166" mi="5" ci="0" mb="0" cb="0"/><line nr="167" mi="2" ci="0" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="4" mb="0" cb="0"/><line nr="176" mi="0" ci="4" mb="0" cb="0"/><line nr="177" mi="0" ci="4" mb="0" cb="0"/><line nr="181" mi="0" ci="6" mb="0" cb="0"/><line nr="185" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="191" mi="7" ci="0" mb="0" cb="0"/><line nr="196" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="188" covered="67"/><counter type="LINE" missed="34" covered="18"/><counter type="COMPLEXITY" missed="17" covered="10"/><counter type="METHOD" missed="17" covered="10"/><counter type="CLASS" missed="1" covered="3"/></sourcefile><sourcefile name="Chain.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="16" mi="0" ci="6" mb="0" cb="0"/><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="26" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MainChainBuilder.java"><line nr="11" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="2" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="4" mb="0" cb="0"/><line nr="17" mi="6" ci="0" mb="0" cb="0"/><line nr="18" mi="2" ci="0" mb="0" cb="0"/><line nr="22" mi="3" ci="0" mb="0" cb="0"/><line nr="23" mi="2" ci="0" mb="0" cb="0"/><line nr="28" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="21"/><counter type="LINE" missed="4" covered="4"/><counter type="COMPLEXITY" missed="3" covered="2"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ImmutableRecursion.java"><line nr="26" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="6" mb="0" cb="0"/><line nr="29" mi="1" ci="7" mb="1" cb="1"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="6" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="35" mi="2" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="11" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="8" mb="0" cb="0"/><line nr="48" mi="0" ci="11" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="1" cb="1"/><line nr="54" mi="19" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="1" cb="1"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="102"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="2" covered="16"/><counter type="COMPLEXITY" missed="4" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractChainBuilder.java"><line nr="15" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="25" mi="0" ci="4" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="35" mi="11" ci="0" mb="0" cb="0"/><line nr="36" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="41" mi="0" ci="10" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="3" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="66"/><counter type="LINE" missed="6" covered="17"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BranchChainBuilder.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="11" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractRecursiveRepresenter.java"><line nr="9" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Branch.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="4" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="28" mi="0" ci="11" mb="0" cb="2"/><line nr="29" mi="0" ci="5" mb="1" cb="1"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="32" mi="0" ci="2" mb="0" cb="2"/><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="0" ci="3" mb="1" cb="1"/><line nr="38" mi="14" ci="0" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="52"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="1" covered="14"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CaseMatchings.java"><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="1" cb="1"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="1" cb="3"/><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="1" cb="3"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="58" mi="0" ci="3" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="70" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="0"/><line nr="83" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="0" ci="4" mb="0" cb="0"/><line nr="88" mi="0" ci="10" mb="0" cb="2"/><line nr="89" mi="0" ci="6" mb="0" cb="2"/><line nr="90" mi="0" ci="6" mb="0" cb="2"/><line nr="91" mi="0" ci="3" mb="0" cb="2"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="94" mi="0" ci="1" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="2"/><line nr="96" mi="0" ci="16" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="112" mi="0" ci="2" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><line nr="114" mi="0" ci="6" mb="0" cb="0"/><line nr="115" mi="0" ci="6" mb="0" cb="0"/><line nr="116" mi="0" ci="2" mb="0" cb="0"/><line nr="117" mi="0" ci="1" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="3" mb="0" cb="2"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="3" mb="1" cb="1"/><line nr="124" mi="14" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="0" ci="1" mb="0" cb="0"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="137" mi="0" ci="4" mb="0" cb="0"/><line nr="139" mi="0" ci="12" mb="1" cb="1"/><line nr="140" mi="0" ci="4" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="2"/><line nr="142" mi="0" ci="4" mb="0" cb="0"/><line nr="144" mi="0" ci="10" mb="0" cb="0"/><line nr="145" mi="0" ci="2" mb="1" cb="1"/><line nr="146" mi="0" ci="2" mb="0" cb="0"/><line nr="148" mi="1" ci="0" mb="0" cb="0"/><line nr="149" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="1" ci="0" mb="0" cb="0"/><line nr="152" mi="0" ci="1" mb="0" cb="0"/><line nr="154" mi="2" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="4" mb="0" cb="0"/><line nr="159" mi="0" ci="3" mb="0" cb="2"/><line nr="167" mi="0" ci="3" mb="0" cb="0"/><line nr="168" mi="0" ci="3" mb="1" cb="1"/><line nr="169" mi="13" ci="0" mb="0" cb="0"/><line nr="171" mi="7" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="178" mi="0" ci="2" mb="0" cb="0"/><line nr="187" mi="0" ci="2" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="189" mi="0" ci="1" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="1" ci="0" mb="0" cb="0"/><line nr="196" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="265"/><counter type="BRANCH" missed="7" covered="27"/><counter type="LINE" missed="12" covered="60"/><counter type="COMPLEXITY" missed="7" covered="27"/><counter type="METHOD" missed="0" covered="17"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><counter type="INSTRUCTION" missed="351" covered="639"/><counter type="BRANCH" missed="12" covered="36"/><counter type="LINE" missed="61" covered="145"/><counter type="COMPLEXITY" missed="38" covered="66"/><counter type="METHOD" missed="26" covered="54"/><counter type="CLASS" missed="2" covered="13"/></package><package name="org/tensorics/core/commons/lang"><class name="org/tensorics/core/commons/lang/OngoingOperation" sourcefilename="OngoingOperation.java"/><class name="org/tensorics/core/commons/lang/BasicOperationSupport" sourcefilename="BasicOperationSupport.java"/><class name="org/tensorics/core/commons/lang/OngoingBinaryOperation" sourcefilename="OngoingBinaryOperation.java"/><sourcefile name="OngoingOperation.java"/><sourcefile name="BasicOperationSupport.java"/><sourcefile name="OngoingBinaryOperation.java"/></package><package name="org/tensorics/core/util/names"><class name="org/tensorics/core/util/names/NameRepository" sourcefilename="NameRepository.java"/><class name="org/tensorics/core/util/names/ImmutableNameRepository" sourcefilename="ImmutableNameRepository.java"><method name="&lt;init&gt;" desc="(Ljava/util/Map;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="()Lorg/tensorics/core/util/names/ImmutableNameRepository;" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromMap" desc="(Ljava/util/Map;)Lorg/tensorics/core/util/names/ImmutableNameRepository;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nameFor" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="content" desc="()Ljava/util/Map;" line="66"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="8" covered="22"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/names/Names" sourcefilename="Names.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="45"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromNameMethod" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromGetNameMethod" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="53"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="fromSimpleClassName" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromOverriddenToString" desc="(Ljava/lang/Object;)Ljava/lang/String;" line="61"><counter type="INSTRUCTION" missed="3" covered="5"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isToStringOverriden" desc="(Ljava/lang/Object;)Z" line="69"><counter type="INSTRUCTION" missed="5" covered="12"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nameFromMethodOfName" desc="(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;" line="79"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="50" covered="30"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="16" covered="8"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/names/ClasspathConstantScanner" sourcefilename="ClasspathConstantScanner.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="scan" desc="()Lorg/tensorics/core/util/names/NameRepository;" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constantsToNames" desc="()V" line="44"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allClasses" desc="()Ljava/util/Set;" line="55"><counter type="INSTRUCTION" missed="6" covered="15"/><counter type="LINE" missed="3" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constantsToNameFrom" desc="(Lcom/google/common/reflect/ClassPath$ClassInfo;)V" line="70"><counter type="INSTRUCTION" missed="31" covered="55"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="6" covered="11"/><counter type="COMPLEXITY" missed="2" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constantsFrom" desc="(Lcom/google/common/reflect/ClassPath$ClassInfo;)Ljava/util/Set;" line="101"><counter type="INSTRUCTION" missed="15" covered="12"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$constantsFrom$3" desc="(Ljava/lang/reflect/Field;)Z" line="103"><counter type="INSTRUCTION" missed="1" covered="6"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$allClasses$2" desc="(Lcom/google/common/reflect/ClassPath$ClassInfo;)Z" line="61"><counter type="INSTRUCTION" missed="2" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$allClasses$1" desc="(Lcom/google/common/reflect/ClassPath$ClassInfo;Ljava/lang/String;)Z" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$constantsToNames$0" desc="(Lcom/google/common/reflect/ClassPath$ClassInfo;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="55" covered="169"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="13" covered="34"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Names.java"><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><line nr="53" mi="4" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="1" cb="1"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="2" ci="12" mb="1" cb="1"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="0" cb="0"/><line nr="80" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="5" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="1" ci="0" mb="0" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="30"/><counter type="BRANCH" missed="4" covered="2"/><counter type="LINE" missed="16" covered="8"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ClasspathConstantScanner.java"><line nr="27" mi="0" ci="4" mb="0" cb="0"/><line nr="29" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="4" mb="0" cb="0"/><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="9" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="23" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="7" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="1" cb="1"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="0" ci="12" mb="0" cb="0"/><line nr="66" mi="0" ci="3" mb="0" cb="0"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="2"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="1" cb="1"/><line nr="76" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="1" cb="1"/><line nr="82" mi="9" ci="0" mb="0" cb="0"/><line nr="84" mi="15" ci="0" mb="0" cb="0"/><line nr="86" mi="0" ci="19" mb="0" cb="0"/><line nr="88" mi="1" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="94" mi="1" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="1" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="1" ci="12" mb="1" cb="1"/><line nr="104" mi="0" ci="3" mb="0" cb="0"/><line nr="105" mi="1" ci="0" mb="0" cb="0"/><line nr="106" mi="12" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="169"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="13" covered="34"/><counter type="COMPLEXITY" missed="4" covered="12"/><counter type="METHOD" missed="0" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="NameRepository.java"/><sourcefile name="ImmutableNameRepository.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="22"/><counter type="LINE" missed="2" covered="6"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="113" covered="221"/><counter type="BRANCH" missed="8" covered="8"/><counter type="LINE" missed="31" covered="48"/><counter type="COMPLEXITY" missed="14" covered="19"/><counter type="METHOD" missed="7" covered="18"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/tensorics/core/reduction"><class name="org/tensorics/core/reduction/RootMeanSquare" sourcefilename="RootMeanSquare.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reduce" desc="(Ljava/util/Map;Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/reduction/AbstractInterpolationStrategy" sourcefilename="AbstractInterpolationStrategy.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="29"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getOrderedListOfComparableCoordinate" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Object;)Ljava/util/List;" line="43"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkIfOnlyCoordinatesOfTypeCAreIn" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Object;)V" line="57"><counter type="INSTRUCTION" missed="17" covered="19"/><counter type="BRANCH" missed="5" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="findIndex" desc="(Ljava/util/List;Ljava/lang/Object;I)Ljava/lang/Object;" line="79"><counter type="INSTRUCTION" missed="5" covered="46"/><counter type="BRANCH" missed="1" covered="11"/><counter type="LINE" missed="1" covered="11"/><counter type="COMPLEXITY" missed="1" covered="6"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="95"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/reduction/Averaging" sourcefilename="Averaging.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reduce" desc="(Ljava/util/Map;Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/reduction/Slicing" sourcefilename="Slicing.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reduce" desc="(Ljava/util/Map;Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="context" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Position;" line="52"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/reduction/ReductionStrategy" sourcefilename="ReductionStrategy.java"><method name="context" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Position;" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/reduction/AbstractLinearDoubleInterpolationStrategy" sourcefilename="AbstractLinearDoubleInterpolationStrategy.java"><method name="&lt;init&gt;" desc="(Ljava/util/Comparator;)V" line="31"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getInterpolatedValue" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Object;)Ljava/lang/Double;" line="37"><counter type="INSTRUCTION" missed="51" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/reduction/LinearInterpolation" sourcefilename="LinearInterpolation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;Ljava/util/function/Function;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInterpolatedValue" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Object;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="0" covered="86"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$new$0" desc="(Lorg/tensorics/core/math/ExtendedField;Ljava/util/function/Function;Ljava/lang/Object;Ljava/lang/Object;)I" line="25"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="111"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/reduction/ToFunctions" sourcefilename="ToFunctions.java"><method name="&lt;init&gt;" desc="()V" line="21"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reduce" desc="(Ljava/util/Map;Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/function/DiscreteFunction;" line="24"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/reduction/InterpolatedSlicing" sourcefilename="InterpolatedSlicing.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/tensorics/core/reduction/InterpolationStrategy;Lorg/tensorics/core/tensor/Tensor;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reduce" desc="(Ljava/util/Map;Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="33"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/reduction/InterpolationStrategy" sourcefilename="InterpolationStrategy.java"/><sourcefile name="ToFunctions.java"><line nr="21" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InterpolationStrategy.java"/><sourcefile name="AbstractInterpolationStrategy.java"><line nr="29" mi="0" ci="2" mb="0" cb="0"/><line nr="30" mi="0" ci="6" mb="0" cb="0"/><line nr="31" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="4" ci="3" mb="5" cb="1"/><line nr="62" mi="8" ci="0" mb="0" cb="0"/><line nr="65" mi="5" ci="0" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="1" cb="3"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="0" ci="9" mb="0" cb="2"/><line nr="84" mi="0" ci="6" mb="0" cb="2"/><line nr="85" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="1" mb="0" cb="0"/><line nr="91" mi="0" ci="2" mb="0" cb="2"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="2"/><line nr="94" mi="0" ci="5" mb="0" cb="0"/><line nr="96" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="95"/><counter type="BRANCH" missed="6" covered="12"/><counter type="LINE" missed="3" covered="25"/><counter type="COMPLEXITY" missed="4" covered="9"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Averaging.java"><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ReductionStrategy.java"><line nr="48" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractLinearDoubleInterpolationStrategy.java"><line nr="31" mi="3" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="40" mi="6" ci="0" mb="0" cb="0"/><line nr="42" mi="10" ci="0" mb="0" cb="0"/><line nr="43" mi="21" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="55" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Slicing.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="11" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InterpolatedSlicing.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="2"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="7" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LinearInterpolation.java"><line nr="25" mi="0" ci="15" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="6" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="9" mb="0" cb="0"/><line nr="39" mi="0" ci="9" mb="0" cb="0"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="12" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="12" mb="0" cb="0"/><line nr="50" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="111"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RootMeanSquare.java"><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="77" covered="287"/><counter type="BRANCH" missed="6" covered="14"/><counter type="LINE" missed="11" covered="63"/><counter type="COMPLEXITY" missed="6" covered="25"/><counter type="METHOD" missed="2" covered="19"/><counter type="CLASS" missed="1" covered="8"/></package><package name="org/tensorics/core/booleans"><class name="org/tensorics/core/booleans/BooleanSupport" sourcefilename="BooleanSupport.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/OptionRegistry;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcLogical" desc="(Ljava/lang/Boolean;)Lorg/tensorics/core/booleans/lang/OngoingBooleanScalarOperation;" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcLogical" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/booleans/lang/OngoingBooleanTensorOperation;" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detectWhere" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/booleans/lang/OngoingDetection;" line="57"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Lorg/tensorics/core/commons/options/ManipulationOption;)Lorg/tensorics/core/booleans/BooleanSupport;" line="61"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/booleans/ScalarBooleanSupport" sourcefilename="ScalarBooleanSupport.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcLogical" desc="(Ljava/lang/Boolean;)Lorg/tensorics/core/booleans/lang/OngoingBooleanScalarOperation;" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/booleans/TensorBooleanSupport" sourcefilename="TensorBooleanSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/OptionRegistry;)V" line="25"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calcLogical" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/booleans/lang/OngoingBooleanTensorOperation;" line="30"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="detectWhere" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/booleans/lang/OngoingDetection;" line="34"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ScalarBooleanSupport.java"><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BooleanSupport.java"><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="54"/><counter type="LINE" missed="0" covered="14"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorBooleanSupport.java"><line nr="25" mi="0" ci="2" mb="0" cb="0"/><line nr="26" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="7" mb="0" cb="0"/><line nr="34" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="82"/><counter type="LINE" missed="0" covered="21"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/tensorics/core/analysis/lang"><class name="org/tensorics/core/analysis/lang/IterableBooleanConversion" sourcefilename="IterableBooleanConversion.java"/><class name="org/tensorics/core/analysis/lang/OngoingBooleanCondition" sourcefilename="OngoingBooleanCondition.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/ConditionBuilder;Lorg/tensorics/core/tree/domain/Expression;)V" line="31"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTrue" desc="()Lorg/tensorics/core/analysis/lang/OngoingNamedCondition;" line="35"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFalse" desc="()Lorg/tensorics/core/analysis/lang/OngoingNamedCondition;" line="40"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/lang/OngoingAnyBooleanCondition" sourcefilename="OngoingAnyBooleanCondition.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/ConditionBuilder;Lorg/tensorics/core/tree/domain/Expression;)V" line="32"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withName" desc="(Ljava/lang/String;)Lorg/tensorics/core/analysis/lang/OngoingAnyBooleanCondition;" line="46"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withKey" desc="(Ljava/lang/String;)Lorg/tensorics/core/analysis/lang/OngoingAnyBooleanCondition;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isTrue" desc="()Lorg/tensorics/core/analysis/lang/OngoingAnyBooleanCondition;" line="57"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/lang/OngoingNamedCondition" sourcefilename="OngoingNamedCondition.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/ConditionBuilder;Lorg/tensorics/core/tree/domain/Expression;)V" line="35"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withName" desc="(Ljava/lang/String;)Lorg/tensorics/core/analysis/lang/OngoingNamedCondition;" line="41"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withKey" desc="(Ljava/lang/String;)Lorg/tensorics/core/analysis/lang/OngoingNamedCondition;" line="46"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/lang/OngoingAllBooleanExcludableCondition" sourcefilename="OngoingAllBooleanExcludableCondition.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/ConditionBuilder;Ljava/util/Set;)V" line="43"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="excluding" desc="([Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingAllBooleanExcludableCondition;" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="excluding" desc="(Ljava/util/Set;)Lorg/tensorics/core/analysis/lang/OngoingAllBooleanExcludableCondition;" line="54"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withName" desc="(Ljava/lang/String;)Lorg/tensorics/core/analysis/lang/OngoingAllBooleanExcludableCondition;" line="59"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withKey" desc="(Ljava/lang/String;)Lorg/tensorics/core/analysis/lang/OngoingAllBooleanExcludableCondition;" line="64"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="areTrue" desc="()Lorg/tensorics/core/analysis/lang/OngoingAllBooleanExcludableCondition;" line="69"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/lang/OngoingAllBooleanCondition" sourcefilename="OngoingAllBooleanCondition.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/ConditionBuilder;Lorg/tensorics/core/tree/domain/Expression;)V" line="37"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="areTrue" desc="()Lorg/tensorics/core/analysis/lang/OngoingAllBooleanCondition;" line="46"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withName" desc="(Ljava/lang/String;)Lorg/tensorics/core/analysis/lang/OngoingAllBooleanCondition;" line="51"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withKey" desc="(Ljava/lang/String;)Lorg/tensorics/core/analysis/lang/OngoingAllBooleanCondition;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/lang/OngoingAnalysisEnabler" sourcefilename="OngoingAnalysisEnabler.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/ConditionBuilder;)V" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="when" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingCondition;" line="40"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whenBoolean" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingBooleanCondition;" line="44"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="always" desc="()V" line="48"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/lang/OngoingPrecondition" sourcefilename="OngoingPrecondition.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/AssertionBuilder;Lorg/tensorics/core/tree/domain/Expression;)V" line="41"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/AssertionBuilder;Ljava/lang/Object;)V" line="47"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEqualTo" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingPrecondition;" line="51"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEqualTo" desc="(Ljava/lang/Object;)Lorg/tensorics/core/analysis/lang/OngoingPrecondition;" line="56"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="or" desc="()Lorg/tensorics/core/analysis/lang/OngoingPrecondition;" line="60"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAssertThat" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingCondition;" line="65"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAssertThat" desc="(Ljava/lang/Object;)Lorg/tensorics/core/analysis/lang/OngoingCondition;" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAssertBoolean" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingBooleanCondition;" line="73"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAssertAllBoolean" desc="(Ljava/util/Set;)Lorg/tensorics/core/analysis/lang/OngoingAllBooleanExcludableCondition;" line="78"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAssertAtLeastOneBooleanOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingAnyBooleanCondition;" line="83"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAssertBoolean" desc="(Ljava/lang/Boolean;)Lorg/tensorics/core/analysis/lang/OngoingBooleanCondition;" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="thenAssertLatestBooleanOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingBooleanCondition;" line="91"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/lang/OngoingCondition" sourcefilename="OngoingCondition.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/ConditionBuilder;Lorg/tensorics/core/tree/domain/Expression;)V" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="is" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingNamedCondition;" line="41"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="is" desc="(Ljava/util/function/Predicate;)Lorg/tensorics/core/analysis/lang/OngoingNamedCondition;" line="46"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEqualTo" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingNamedCondition;" line="51"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotEqualTo" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingNamedCondition;" line="56"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEqualTo" desc="(Ljava/lang/Object;)Lorg/tensorics/core/analysis/lang/OngoingNamedCondition;" line="61"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotEqualTo" desc="(Ljava/lang/Object;)Lorg/tensorics/core/analysis/lang/OngoingNamedCondition;" line="66"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="OngoingAnalysisEnabler.java"><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><line nr="44" mi="7" ci="0" mb="0" cb="0"/><line nr="48" mi="9" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingNamedCondition.java"><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingCondition.java"><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="8" ci="0" mb="0" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="10" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="10" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingAllBooleanExcludableCondition.java"><line nr="38" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="8" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="13" ci="0" mb="0" cb="0"/><line nr="71" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingPrecondition.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="44" mi="1" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="10" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="60" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="93" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="12" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingAllBooleanCondition.java"><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="10" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="IterableBooleanConversion.java"/><sourcefile name="OngoingBooleanCondition.java"><line nr="31" mi="4" ci="0" mb="0" cb="0"/><line nr="32" mi="1" ci="0" mb="0" cb="0"/><line nr="35" mi="5" ci="0" mb="0" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="40" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingAnyBooleanCondition.java"><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="40" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="11" ci="0" mb="0" cb="0"/><line nr="59" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="43" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="378" covered="0"/><counter type="LINE" missed="91" covered="0"/><counter type="COMPLEXITY" missed="45" covered="0"/><counter type="METHOD" missed="45" covered="0"/><counter type="CLASS" missed="8" covered="0"/></package><package name="org/tensorics/core/tensor/options"><class name="org/tensorics/core/tensor/options/BroadcastMissingDimensionsStrategy" sourcefilename="BroadcastMissingDimensionsStrategy.java"><method name="&lt;init&gt;" desc="()V" line="69"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lorg/tensorics/core/tensor/options/BroadcastMissingDimensionsStrategy;" line="74"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="broadcast" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;Ljava/util/Set;)Lorg/tensorics/core/tensor/TensorPair;" line="79"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMarkerInterface" desc="()Ljava/lang/Class;" line="95"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/options/ContextPropagationStrategy" sourcefilename="ContextPropagationStrategy.java"/><class name="org/tensorics/core/tensor/options/IntersectionShapingStrategy" sourcefilename="IntersectionShapingStrategy.java"><method name="get" desc="()Lorg/tensorics/core/tensor/options/IntersectionShapingStrategy;" line="58"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shapeLeftRight" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Shape;" line="63"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMarkerInterface" desc="()Ljava/lang/Class;" line="68"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="48"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/options/ShapingStrategy" sourcefilename="ShapingStrategy.java"/><class name="org/tensorics/core/tensor/options/LeftContextPreservedStrategy" sourcefilename="LeftContextPreservedStrategy.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lorg/tensorics/core/tensor/options/LeftContextPreservedStrategy;" line="38"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contextForLeftRight" desc="(Lorg/tensorics/core/tensor/Position;Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Position;" line="43"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMarkerInterface" desc="()Ljava/lang/Class;" line="48"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/options/ExactShapesOrOneZeroStrategy" sourcefilename="ExactShapesOrOneZeroStrategy.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Lorg/tensorics/core/tensor/options/ExactShapesOrOneZeroStrategy;" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shapeLeftRight" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Shape;" line="51"><counter type="INSTRUCTION" missed="37" covered="12"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMarkerInterface" desc="()Ljava/lang/Class;" line="71"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="37" covered="21"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/options/BroadcastingStrategy" sourcefilename="BroadcastingStrategy.java"/><sourcefile name="BroadcastMissingDimensionsStrategy.java"><line nr="69" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="4" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="5" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="89" mi="0" ci="12" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BroadcastingStrategy.java"/><sourcefile name="ExactShapesOrOneZeroStrategy.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="1" cb="1"/><line nr="54" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="4" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="8" ci="0" mb="4" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="65" mi="15" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="37" covered="21"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="LeftContextPreservedStrategy.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="0" ci="1" mb="0" cb="0"/><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ContextPropagationStrategy.java"/><sourcefile name="ShapingStrategy.java"/><sourcefile name="IntersectionShapingStrategy.java"><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="37" covered="97"/><counter type="BRANCH" missed="9" covered="1"/><counter type="LINE" missed="5" covered="29"/><counter type="COMPLEXITY" missed="5" covered="16"/><counter type="METHOD" missed="0" covered="16"/><counter type="CLASS" missed="0" covered="4"/></package><package name="org/tensorics/core/commons/util"><class name="org/tensorics/core/commons/util/ValuePair" sourcefilename="ValuePair.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromLeftRight" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/tensorics/core/commons/util/ValuePair;" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/commons/util/AbstractPair" sourcefilename="AbstractPair.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="left" desc="()Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="right" desc="()Ljava/lang/Object;" line="57"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="62"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="71"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="85" covered="15"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="23" covered="6"/><counter type="COMPLEXITY" missed="13" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/commons/util/Named" sourcefilename="Named.java"/><sourcefile name="AbstractPair.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="2" ci="0" mb="0" cb="0"/><line nr="64" mi="13" ci="0" mb="2" cb="0"/><line nr="65" mi="13" ci="0" mb="2" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="2" cb="0"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="2" ci="0" mb="2" cb="0"/><line nr="75" mi="2" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="2" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="3" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="2" cb="0"/><line nr="82" mi="3" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="6" ci="0" mb="2" cb="0"/><line nr="86" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="2" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="6" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="85" covered="15"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="23" covered="6"/><counter type="COMPLEXITY" missed="13" covered="3"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ValuePair.java"><line nr="46" mi="0" ci="7" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Named.java"/><counter type="INSTRUCTION" missed="85" covered="30"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="23" covered="10"/><counter type="COMPLEXITY" missed="13" covered="5"/><counter type="METHOD" missed="2" covered="5"/><counter type="CLASS" missed="0" covered="2"/></package><package name="org/tensorics/core/commons/operations"><class name="org/tensorics/core/commons/operations/Conversions$IdentityConversion" sourcefilename="Conversions.java"><method name="apply" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="40"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/commons/operations/Conversions" sourcefilename="Conversions.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="identity" desc="()Lorg/tensorics/core/commons/operations/Conversion;" line="37"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="2"/><counter type="LINE" missed="1" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/commons/operations/Conversion" sourcefilename="Conversion.java"/><sourcefile name="Conversion.java"/><sourcefile name="Conversions.java"><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="8" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="45" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="18"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="3" covered="18"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="2"/></package><package name="org/tensorics/core/math/structures/ringlike"><class name="org/tensorics/core/math/structures/ringlike/Field" sourcefilename="Field.java"/><class name="org/tensorics/core/math/structures/ringlike/Ring" sourcefilename="Ring.java"/><class name="org/tensorics/core/math/structures/ringlike/Semiring" sourcefilename="Semiring.java"/><class name="org/tensorics/core/math/structures/ringlike/OrderedField" sourcefilename="OrderedField.java"/><class name="org/tensorics/core/math/structures/ringlike/RinglikeStructure" sourcefilename="RinglikeStructure.java"/><sourcefile name="RinglikeStructure.java"/><sourcefile name="Field.java"/><sourcefile name="OrderedField.java"/><sourcefile name="Semiring.java"/><sourcefile name="Ring.java"/></package><package name="org/tensorics/core/function/interpolation"><class name="org/tensorics/core/function/interpolation/InterpolationStrategy" sourcefilename="InterpolationStrategy.java"><method name="getMarkerInterface" desc="()Ljava/lang/Class;" line="54"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/function/interpolation/LinearInterpolationStrategy" sourcefilename="LinearInterpolationStrategy.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="26"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interpolate" desc="(Ljava/lang/Object;Lorg/tensorics/core/function/DiscreteFunction;Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)Ljava/lang/Object;" line="32"><counter type="INSTRUCTION" missed="0" covered="131"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="31"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateInterpolation" desc="(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="171"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="LinearInterpolationStrategy.java"><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="4" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="4" mb="0" cb="0"/><line nr="36" mi="0" ci="4" mb="0" cb="0"/><line nr="38" mi="0" ci="3" mb="0" cb="2"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="9" mb="0" cb="2"/><line nr="50" mi="0" ci="9" mb="0" cb="2"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="2"/><line nr="56" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="2"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="2"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="8" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="85" mi="0" ci="6" mb="0" cb="0"/><line nr="87" mi="0" ci="6" mb="0" cb="0"/><line nr="89" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="6" mb="0" cb="0"/><line nr="93" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="171"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="39"/><counter type="COMPLEXITY" missed="0" covered="9"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InterpolationStrategy.java"><line nr="54" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="173"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="40"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></package><package name="org/tensorics/core/math/operations"><class name="org/tensorics/core/math/operations/UnaryOperation" sourcefilename="UnaryOperation.java"/><class name="org/tensorics/core/math/operations/CommutativeAssociativeOperation" sourcefilename="CommutativeAssociativeOperation.java"/><class name="org/tensorics/core/math/operations/BinaryOperation" sourcefilename="BinaryOperation.java"/><class name="org/tensorics/core/math/operations/CreationOperation" sourcefilename="CreationOperation.java"/><class name="org/tensorics/core/math/operations/BinaryFunction" sourcefilename="BinaryFunction.java"/><class name="org/tensorics/core/math/operations/CommutativeOperation" sourcefilename="CommutativeOperation.java"/><class name="org/tensorics/core/math/operations/AssociativeOperation" sourcefilename="AssociativeOperation.java"/><sourcefile name="CommutativeOperation.java"/><sourcefile name="CreationOperation.java"/><sourcefile name="BinaryFunction.java"/><sourcefile name="BinaryOperation.java"/><sourcefile name="AssociativeOperation.java"/><sourcefile name="CommutativeAssociativeOperation.java"/><sourcefile name="UnaryOperation.java"/></package><package name="org/tensorics/core/resolve/resolvers"><class name="org/tensorics/core/resolve/resolvers/BinaryOperationResolver" sourcefilename="BinaryOperationResolver.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/expressions/BinaryOperationExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Lorg/tensorics/core/expressions/BinaryOperationExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/IterableExpressionToIterableResolver" sourcefilename="IterableExpressionToIterableResolver.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/iterable/expressions/IterableExpressionToIterable;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="17"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="(Lorg/tensorics/core/iterable/expressions/IterableExpressionToIterable;Lorg/tensorics/core/tree/domain/ResolvingContext;)Ljava/lang/Iterable;" line="22"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/AbstractResolver$1" sourcefilename="AbstractResolver.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/resolve/resolvers/AbstractResolver;Ljava/lang/Class;)V" line="43"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/IterableResolvingExpressionResolver" sourcefilename="IterableResolvingExpressionResolver.java"><method name="&lt;init&gt;" desc="()V" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/expressions/IterableResolvingExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="24"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="(Lorg/tensorics/core/expressions/IterableResolvingExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Ljava/lang/Iterable;" line="29"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/BinaryPredicateIterableResolver" sourcefilename="BinaryPredicateIterableResolver.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/iterable/expressions/BinaryPredicateIterableExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="40"><counter type="INSTRUCTION" missed="1" covered="13"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Lorg/tensorics/core/iterable/expressions/BinaryPredicateIterableExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Ljava/lang/Boolean;" line="45"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resolve$0" desc="(Lorg/tensorics/core/math/predicates/BinaryPredicate;Ljava/lang/Object;Ljava/lang/Object;)Z" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="1" covered="45"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/CreationOperationResolver" sourcefilename="CreationOperationResolver.java"><method name="&lt;init&gt;" desc="()V" line="34"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/expressions/CreationOperationExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="38"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="(Lorg/tensorics/core/expressions/CreationOperationExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Ljava/lang/Object;" line="43"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/FunctionalExpressionResolver" sourcefilename="FunctionalExpressionResolver.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/functional/expressions/FunctionalExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="14"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Lorg/tensorics/core/functional/expressions/FunctionalExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Ljava/lang/Object;" line="19"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$resolve$0" desc="(Lorg/tensorics/core/tree/domain/ResolvingContext;Lorg/tensorics/core/tree/domain/Expression;)Ljava/lang/Object;" line="19"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/AbstractResolver" sourcefilename="AbstractResolver.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getExpressionClass" desc="()Ljava/lang/Class;" line="53"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/Resolver" sourcefilename="Resolver.java"/><class name="org/tensorics/core/resolve/resolvers/PickResolver" sourcefilename="PickResolver.java"><method name="&lt;init&gt;" desc="()V" line="18"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/iterable/expressions/PickExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="22"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Lorg/tensorics/core/iterable/expressions/PickExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Ljava/lang/Object;" line="27"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/ResolverRepository" sourcefilename="ResolverRepository.java"/><class name="org/tensorics/core/resolve/resolvers/PredicateConditionResolver" sourcefilename="PredicateConditionResolver.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/expressions/PredicateExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="16"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="(Lorg/tensorics/core/expressions/PredicateExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Ljava/lang/Boolean;" line="21"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="21" covered="3"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/BinaryPredicateResolver" sourcefilename="BinaryPredicateResolver.java"><method name="&lt;init&gt;" desc="()V" line="32"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/expressions/BinaryPredicateExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="36"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Lorg/tensorics/core/expressions/BinaryPredicateExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Ljava/lang/Boolean;" line="41"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/ListBackedResolverRepository" sourcefilename="ListBackedResolverRepository.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolversFor" desc="(Lorg/tensorics/core/tree/domain/Expression;)Ljava/util/List;" line="42"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setResolvers" desc="(Ljava/util/List;)V" line="57"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/UnaryOperationResolver" sourcefilename="UnaryOperationResolver.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/expressions/UnaryOperationExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="39"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resolve" desc="(Lorg/tensorics/core/expressions/UnaryOperationExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="3"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/TensoricScriptResolver" sourcefilename="TensoricScriptResolver.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/lang/TensoricScript;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Lorg/tensorics/core/lang/TensoricScript;Lorg/tensorics/core/tree/domain/ResolvingContext;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/Resolvers" sourcefilename="Resolvers.java"><method name="defaultRepository" desc="()Lorg/tensorics/core/resolve/resolvers/ResolverRepository;" line="47"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultRepositoryWithAdditional" desc="([Lorg/tensorics/core/resolve/resolvers/Resolver;)Lorg/tensorics/core/resolve/resolvers/ResolverRepository;" line="52"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="repositoryWithResolvers" desc="(Ljava/util/List;)Lorg/tensorics/core/resolve/resolvers/ResolverRepository;" line="58"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createDefaultResolvers" desc="()Ljava/util/List;" line="64"><counter type="INSTRUCTION" missed="0" covered="90"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contextResolvesAll" desc="(Ljava/util/List;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="84"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contextResolvesAllNodes" desc="(Ljava/util/List;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="89"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$contextResolvesAllNodes$0" desc="(Lorg/tensorics/core/tree/domain/Node;)Lorg/tensorics/core/tree/domain/Expression;" line="89"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/resolve/resolvers/ConversionOperationResolver" sourcefilename="ConversionOperationResolver.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="canResolve" desc="(Lorg/tensorics/core/expressions/ConversionOperationExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Z" line="39"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolve" desc="(Lorg/tensorics/core/expressions/ConversionOperationExpression;Lorg/tensorics/core/tree/domain/ResolvingContext;)Ljava/lang/Object;" line="44"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="BinaryPredicateResolver.java"><line nr="32" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="14" mb="1" cb="3"/><line nr="41" mi="0" ci="5" mb="0" cb="0"/><line nr="42" mi="0" ci="5" mb="0" cb="0"/><line nr="43" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CreationOperationResolver.java"><line nr="34" mi="0" ci="3" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="0" cb="0"/><line nr="43" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinaryOperationResolver.java"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="14" mb="1" cb="3"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PredicateConditionResolver.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="16" mi="5" ci="0" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="6" ci="0" mb="0" cb="0"/><line nr="23" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="3"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractResolver.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="15" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="BinaryPredicateIterableResolver.java"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="1" ci="13" mb="2" cb="2"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="9" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="45"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResolverRepository.java"/><sourcefile name="Resolvers.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="2" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="6" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="6" mb="0" cb="0"/><line nr="77" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="6" mb="0" cb="0"/><line nr="79" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="9" mb="0" cb="0"/><line nr="89" mi="0" ci="14" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="LINE" missed="0" covered="26"/><counter type="COMPLEXITY" missed="0" covered="7"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ListBackedResolverRepository.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="11" mb="0" cb="2"/><line nr="44" mi="0" ci="6" mb="0" cb="2"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Resolver.java"/><sourcefile name="UnaryOperationResolver.java"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="3"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ConversionOperationResolver.java"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PickResolver.java"><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="22" mi="0" ci="5" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="FunctionalExpressionResolver.java"><line nr="10" mi="0" ci="3" mb="0" cb="0"/><line nr="14" mi="0" ci="5" mb="0" cb="0"/><line nr="19" mi="0" ci="12" mb="0" cb="0"/><line nr="20" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensoricScriptResolver.java"><line nr="35" mi="0" ci="3" mb="0" cb="0"/><line nr="39" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableResolvingExpressionResolver.java"><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="24" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="IterableExpressionToIterableResolver.java"><line nr="12" mi="0" ci="3" mb="0" cb="0"/><line nr="17" mi="5" ci="0" mb="0" cb="0"/><line nr="22" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="3"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="79" covered="424"/><counter type="BRANCH" missed="4" covered="12"/><counter type="LINE" missed="13" covered="82"/><counter type="COMPLEXITY" missed="14" covered="46"/><counter type="METHOD" missed="10" covered="42"/><counter type="CLASS" missed="0" covered="16"/></package><package name="org/tensorics/core/testing/hamcrest"><class name="org/tensorics/core/testing/hamcrest/ScalarIsCloseTo" sourcefilename="ScalarIsCloseTo.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/scalar/lang/ScalarSupport;Ljava/lang/Object;Ljava/lang/Object;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeTo" desc="(Lorg/hamcrest/Description;)V" line="55"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchesSafely" desc="(Ljava/lang/Object;)Z" line="60"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="18" covered="50"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/testing/hamcrest/TensoricsMatchers" sourcefilename="TensoricsMatchers.java"><method name="allElementsEqualTo" desc="(Ljava/lang/Object;)Lorg/hamcrest/Matcher;" line="40"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/testing/hamcrest/AllElementsEqualTo" sourcefilename="AllElementsEqualTo.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="45"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="allElementsEqualTo" desc="(Ljava/lang/Object;)Lorg/hamcrest/Matcher;" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="describeTo" desc="(Lorg/hamcrest/Description;)V" line="56"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchesSafely" desc="(Lorg/tensorics/core/tensor/Tensor;)Z" line="62"><counter type="INSTRUCTION" missed="24" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/testing/hamcrest/TensorIsCloseTo$Mismatch" sourcefilename="TensorIsCloseTo.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Ljava/lang/Object;)V" line="105"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/testing/hamcrest/TensorIsCloseTo" sourcefilename="TensorIsCloseTo.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/lang/TensorSupport;Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Object;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="describeTo" desc="(Lorg/hamcrest/Description;)V" line="64"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="matchesSafely" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/hamcrest/Description;)Z" line="69"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="13"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mismatches" desc="(Lorg/tensorics/core/tensor/Tensor;)Ljava/util/Map;" line="89"><counter type="INSTRUCTION" missed="0" covered="56"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="152"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="2" covered="27"/><counter type="COMPLEXITY" missed="1" covered="8"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="AllElementsEqualTo.java"><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="56" mi="5" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="12" ci="0" mb="2" cb="0"/><line nr="63" mi="7" ci="0" mb="2" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="1" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ScalarIsCloseTo.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="5" mb="0" cb="0"/><line nr="49" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="17" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="60" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="50"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensoricsMatchers.java"><line nr="40" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TensorIsCloseTo.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="10" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="14" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="69" mi="0" ci="7" mb="0" cb="2"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="0" cb="2"/><line nr="76" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="0" ci="11" mb="0" cb="2"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="7" mb="0" cb="0"/><line nr="80" mi="0" ci="15" mb="0" cb="0"/><line nr="81" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="91" mi="0" ci="12" mb="0" cb="2"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="93" mi="0" ci="8" mb="0" cb="2"/><line nr="94" mi="0" ci="14" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="106" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="0" ci="3" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="161"/><counter type="BRANCH" missed="0" covered="10"/><counter type="LINE" missed="2" covered="31"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="81" covered="211"/><counter type="BRANCH" missed="4" covered="10"/><counter type="LINE" missed="17" covered="40"/><counter type="COMPLEXITY" missed="9" covered="11"/><counter type="METHOD" missed="7" covered="6"/><counter type="CLASS" missed="2" covered="3"/></package><package name="org/tensorics/core/analysis/util"><class name="org/tensorics/core/analysis/util/Predicates" sourcefilename="Predicates.java"><method name="not" desc="(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;" line="34"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Predicates.java"><line nr="34" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="org/tensorics/core/testing"><class name="org/tensorics/core/testing/TensoricTests" sourcefilename="TensoricTests.java"><method name="&lt;init&gt;" desc="()V" line="30"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="TensoricTests.java"><line nr="30" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></package><package name="org/tensorics/core/quantity"><class name="org/tensorics/core/quantity/ValidityAware" sourcefilename="ValidityAware.java"/><class name="org/tensorics/core/quantity/ImmutableQuantifiedValue" sourcefilename="ImmutableQuantifiedValue.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/tensorics/core/units/Unit;ZLcom/google/common/base/Optional;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/tensorics/core/units/Unit;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Object;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/quantity/ImmutableQuantifiedValue;" line="59"><counter type="INSTRUCTION" missed="2" covered="18"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withValidity" desc="(Z)Lorg/tensorics/core/quantity/ImmutableQuantifiedValue;" line="65"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withError" desc="(Lcom/google/common/base/Optional;)Lorg/tensorics/core/quantity/ImmutableQuantifiedValue;" line="69"><counter type="INSTRUCTION" missed="1" covered="18"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withError" desc="(Ljava/lang/Object;)Lorg/tensorics/core/quantity/ImmutableQuantifiedValue;" line="74"><counter type="INSTRUCTION" missed="1" covered="11"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="value" desc="()Ljava/lang/Object;" line="80"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="unit" desc="()Lorg/tensorics/core/units/Unit;" line="85"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validity" desc="()Ljava/lang/Boolean;" line="90"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="()Lcom/google/common/base/Optional;" line="95"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="100"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validityToString" desc="()Ljava/lang/String;" line="104"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="errorToString" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="119"><counter type="INSTRUCTION" missed="27" covered="49"/><counter type="BRANCH" missed="15" covered="11"/><counter type="LINE" missed="12" covered="13"/><counter type="COMPLEXITY" missed="12" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="158"><counter type="INSTRUCTION" missed="56" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="132" covered="142"/><counter type="BRANCH" missed="31" covered="15"/><counter type="LINE" missed="26" covered="33"/><counter type="COMPLEXITY" missed="26" covered="12"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/ImmutableErronousValue" sourcefilename="ImmutableErronousValue.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lcom/google/common/base/Optional;)V" line="41"><counter type="INSTRUCTION" missed="2" covered="21"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofValue" desc="(Ljava/lang/Object;)Lorg/tensorics/core/quantity/ImmutableErronousValue;" line="49"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofValueAndError" desc="(Ljava/lang/Object;Ljava/lang/Object;)Lorg/tensorics/core/quantity/ImmutableErronousValue;" line="53"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofValueAndError" desc="(Ljava/lang/Object;Lcom/google/common/base/Optional;)Lorg/tensorics/core/quantity/ImmutableErronousValue;" line="57"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="value" desc="()Ljava/lang/Object;" line="62"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="error" desc="()Lcom/google/common/base/Optional;" line="67"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="101"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="110"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="106" covered="40"/><counter type="BRANCH" missed="24" covered="2"/><counter type="LINE" missed="25" covered="10"/><counter type="COMPLEXITY" missed="17" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/quantity/ErronousValue" sourcefilename="ErronousValue.java"/><class name="org/tensorics/core/quantity/QuantifiedValue" sourcefilename="QuantifiedValue.java"/><class name="org/tensorics/core/quantity/Quantified" sourcefilename="Quantified.java"/><sourcefile name="QuantifiedValue.java"/><sourcefile name="ImmutableQuantifiedValue.java"><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="3" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="1" ci="6" mb="1" cb="1"/><line nr="60" mi="1" ci="6" mb="1" cb="1"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="65" mi="0" ci="11" mb="0" cb="0"/><line nr="69" mi="1" ci="6" mb="1" cb="1"/><line nr="70" mi="0" ci="12" mb="0" cb="0"/><line nr="74" mi="1" ci="6" mb="1" cb="1"/><line nr="75" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="3" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="0"/><line nr="90" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="100" mi="21" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="2" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="2" cb="0"/><line nr="112" mi="11" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="119" mi="0" ci="3" mb="1" cb="1"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="2" mb="1" cb="1"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="0" ci="5" mb="1" cb="1"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="3" mb="0" cb="0"/><line nr="129" mi="0" ci="3" mb="1" cb="1"/><line nr="130" mi="3" ci="0" mb="2" cb="0"/><line nr="131" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="0" ci="6" mb="1" cb="1"/><line nr="134" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="3" mb="1" cb="1"/><line nr="137" mi="3" ci="0" mb="2" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="140" mi="0" ci="6" mb="0" cb="2"/><line nr="141" mi="0" ci="2" mb="0" cb="0"/><line nr="143" mi="0" ci="5" mb="1" cb="1"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="146" mi="0" ci="3" mb="1" cb="1"/><line nr="147" mi="3" ci="0" mb="2" cb="0"/><line nr="148" mi="2" ci="0" mb="0" cb="0"/><line nr="150" mi="0" ci="6" mb="1" cb="1"/><line nr="151" mi="2" ci="0" mb="0" cb="0"/><line nr="153" mi="0" ci="2" mb="0" cb="0"/><line nr="158" mi="2" ci="0" mb="0" cb="0"/><line nr="159" mi="2" ci="0" mb="0" cb="0"/><line nr="160" mi="13" ci="0" mb="2" cb="0"/><line nr="161" mi="13" ci="0" mb="2" cb="0"/><line nr="162" mi="11" ci="0" mb="2" cb="0"/><line nr="163" mi="13" ci="0" mb="2" cb="0"/><line nr="164" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="132" covered="142"/><counter type="BRANCH" missed="31" covered="15"/><counter type="LINE" missed="26" covered="33"/><counter type="COMPLEXITY" missed="26" covered="12"/><counter type="METHOD" missed="4" covered="11"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ErronousValue.java"/><sourcefile name="ImmutableErronousValue.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="1" ci="6" mb="1" cb="1"/><line nr="43" mi="1" ci="6" mb="1" cb="1"/><line nr="44" mi="0" ci="3" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="3" ci="0" mb="2" cb="0"/><line nr="73" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="2" ci="0" mb="2" cb="0"/><line nr="76" mi="2" ci="0" mb="0" cb="0"/><line nr="78" mi="5" ci="0" mb="2" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="3" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="2" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="6" ci="0" mb="2" cb="0"/><line nr="87" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="3" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="2" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="13" ci="0" mb="2" cb="0"/><line nr="104" mi="13" ci="0" mb="2" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="106" covered="40"/><counter type="BRANCH" missed="24" covered="2"/><counter type="LINE" missed="25" covered="10"/><counter type="COMPLEXITY" missed="17" covered="5"/><counter type="METHOD" missed="4" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ValidityAware.java"/><sourcefile name="Quantified.java"/><counter type="INSTRUCTION" missed="238" covered="182"/><counter type="BRANCH" missed="55" covered="17"/><counter type="LINE" missed="51" covered="43"/><counter type="COMPLEXITY" missed="43" covered="17"/><counter type="METHOD" missed="8" covered="16"/><counter type="CLASS" missed="0" covered="2"/></package><package name="org/tensorics/core/tensorbacked/annotation"><class name="org/tensorics/core/tensorbacked/annotation/Dimensions" sourcefilename="Dimensions.java"/><sourcefile name="Dimensions.java"/></package><package name="org/tensorics/core/tensor/lang"><class name="org/tensorics/core/tensor/lang/TensorStructurals" sourcefilename="TensorStructurals.java"><method name="from" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingTensorManipulation;" line="64"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="merge" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensor/Tensor;" line="81"><counter type="INSTRUCTION" missed="0" covered="78"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="16"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isValidInTermsOfDimensions" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/Set;Ljava/util/Set;)Z" line="119"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="flatten" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingFlattening;" line="125"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="complete" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingCompletion;" line="129"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformEntries" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/function/Function;)Lorg/tensorics/core/tensor/Tensor;" line="133"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transformScalars" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/function/Function;)Lorg/tensorics/core/tensor/Tensor;" line="141"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="transformScalars" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/function/BiFunction;)Lorg/tensorics/core/tensor/Tensor;" line="150"><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="consumeScalars" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/function/Consumer;)V" line="159"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="consumeScalars" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/function/BiConsumer;)V" line="163"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stripContext" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="167"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mergeContextIntoShape" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="173"><counter type="INSTRUCTION" missed="5" covered="23"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setContext" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Tensor;" line="183"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filter" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingTensorFiltering;" line="190"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="completeWith" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="194"><counter type="INSTRUCTION" missed="0" covered="55"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resample" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingResamplingStart;" line="232"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$consumeScalars$0" desc="(Ljava/util/function/BiConsumer;Ljava/util/Map$Entry;)V" line="163"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="169" covered="191"/><counter type="BRANCH" missed="9" covered="15"/><counter type="LINE" missed="31" covered="37"/><counter type="COMPLEXITY" missed="16" covered="13"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingEitherGet" sourcefilename="OngoingEitherGet.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Object;)V" line="35"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orGet" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="42"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orGet" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/lang/OngoingTensorManipulation" sourcefilename="OngoingTensorManipulation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;)V" line="59"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractWhereTrue" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="72"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extractCoordinatesOfType" desc="(Ljava/lang/Class;)Ljava/util/Set;" line="88"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="100"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="optional" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/util/Optional;" line="113"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="optional" desc="([Ljava/lang/Object;)Ljava/util/Optional;" line="126"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="list" desc="(Ljava/util/List;Lorg/tensorics/core/tensor/Position;)Ljava/util/List;" line="130"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="list" desc="(Ljava/util/List;[Ljava/lang/Object;)Ljava/util/List;" line="137"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Ljava/lang/Class;Lorg/tensorics/core/tensor/Position;)Ljava/util/Map;" line="141"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Ljava/lang/Class;[Ljava/lang/Object;)Ljava/util/Map;" line="147"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extract" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Tensor;" line="151"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="extract" desc="([Ljava/lang/Object;)Lorg/tensorics/core/tensor/Tensor;" line="155"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="either" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensor/lang/OngoingEitherGet;" line="163"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="extractTensor" desc="(Ljava/util/Collection;)Lorg/tensorics/core/tensor/Tensor;" line="167"><counter type="INSTRUCTION" missed="2" covered="41"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="2" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="slice" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Object;)Lorg/tensorics/core/tensor/Tensor;" line="179"><counter type="INSTRUCTION" missed="2" covered="29"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reduce" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/lang/OngoingDimensionReduction;" line="194"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$map$4" desc="(Ljava/util/Map$Entry;)Ljava/lang/Object;" line="143"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$map$3" desc="(Ljava/lang/Class;Ljava/util/Map$Entry;)Ljava/lang/Object;" line="143"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$list$2" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="132"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$list$1" desc="(Lorg/tensorics/core/tensor/Position;Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Position;" line="131"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$list$0" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensor/Position;" line="130"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="75" covered="215"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="10" covered="41"/><counter type="COMPLEXITY" missed="14" covered="19"/><counter type="METHOD" missed="10" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingQuantityTensorValueExtraction" sourcefilename="OngoingQuantityTensorValueExtraction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/operations/QuantityOperationRepository;Lorg/tensorics/core/tensor/Tensor;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inUnitsOf" desc="(Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/tensor/Tensor;" line="30"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="inUnitsOf" desc="(Ljavax/measure/unit/Unit;)Lorg/tensorics/core/tensor/Tensor;" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueInUnit" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;Lorg/tensorics/core/units/Unit;)Ljava/lang/Object;" line="39"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$inUnitsOf$0" desc="(Lorg/tensorics/core/units/Unit;Lorg/tensorics/core/quantity/QuantifiedValue;)Ljava/lang/Object;" line="30"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingFieldAwareResamplingStart" sourcefilename="OngoingFieldAwareResamplingStart.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/math/ExtendedField;)V" line="18"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linear" desc="(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/tensorics/core/tensor/lang/OngoingFieldAwareResampling;" line="24"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="repeat" desc="(Ljava/lang/Class;Ljava/util/Comparator;)Lorg/tensorics/core/tensor/lang/OngoingFieldAwareResampling;" line="29"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="repeat" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/lang/OngoingFieldAwareResampling;" line="33"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingResamplingStart" sourcefilename="OngoingResamplingStart.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;)V" line="14"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="repeat" desc="(Ljava/lang/Class;Ljava/util/Comparator;)Lorg/tensorics/core/tensor/lang/OngoingResampling;" line="19"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="repeat" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/lang/OngoingResampling;" line="23"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingTensorFiltering" sourcefilename="OngoingTensorFiltering.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;)V" line="46"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="by" desc="(Ljava/lang/Class;Lcom/google/common/collect/Range;)Lorg/tensorics/core/tensor/Tensor;" line="51"><counter type="INSTRUCTION" missed="54" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="9" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/lang/OngoingInterpolation" sourcefilename="OngoingInterpolation.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Class;)V" line="28"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="interpolatingWith" desc="(Lorg/tensorics/core/reduction/InterpolationStrategy;)Lorg/tensorics/core/tensor/Tensor;" line="42"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withLinearInterpolation" desc="(Lorg/tensorics/core/math/ExtendedField;Ljava/util/function/Function;)Lorg/tensorics/core/tensor/Tensor;" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/TensorExpressionSupport" sourcefilename="TensorExpressionSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateT" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tensor/lang/OngoingDeferredTensorOperation;" line="61"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tree/domain/Expression;" line="71"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tree/domain/Expression;" line="81"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementInverseOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="89"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementNegativeOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="97"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="13"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingFlattening" sourcefilename="OngoingFlattening.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;)V" line="36"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inDirectionOf" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/lang/OngoingDimensionFlattening;" line="41"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inDirectionsOf" desc="([Ljava/lang/Class;)Lorg/tensorics/core/tensor/lang/OngoingDimensionFlattening;" line="45"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inDirectionsOf" desc="(Ljava/util/Set;)Lorg/tensorics/core/tensor/lang/OngoingDimensionFlattening;" line="49"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="orderedInDirectionOf" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/lang/OngoingOrderedFlattening;" line="53"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/lang/QuantityTensorExpressionSupport" sourcefilename="QuantityTensorExpressionSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateV" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingDeferredQuantifiedTensorOperation;" line="50"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateT" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tensor/lang/OngoingDeferredQuantifiedTensorOperation;" line="54"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingTensorReduction" sourcefilename="OngoingTensorReduction.java"><method name="&lt;init&gt;" desc="()V" line="10"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="by" desc="(Lorg/tensorics/core/reduction/ReductionStrategy;)Lorg/tensorics/core/tensor/Tensor;" line="13"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="reduceBy" desc="(Lorg/tensorics/core/reduction/ReductionStrategy;)Lorg/tensorics/core/tensor/Tensor;" line="17"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/lang/OngoingResampling" sourcefilename="OngoingResampling.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/resample/MultiDimensionalResampling;)V" line="19"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Class;Lorg/tensorics/core/tensor/resample/SingleDimensionResampler;)Lorg/tensorics/core/tensor/lang/OngoingResampling;" line="26"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="repeat" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/lang/OngoingResampling;" line="30"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="repeating" desc="(Ljava/lang/Class;Ljava/util/Comparator;)Lorg/tensorics/core/tensor/lang/OngoingResampling;" line="34"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="then" desc="(Ljava/lang/Class;Lorg/tensorics/core/tensor/resample/SingleDimensionResampler;)Lorg/tensorics/core/tensor/lang/OngoingResampling;" line="38"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="then" desc="()Lorg/tensorics/core/tensor/lang/OngoingResampling;" line="47"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTensoric" desc="()Lorg/tensorics/core/tensor/Tensoric;" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="59"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="5" covered="65"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingTensorOperation" sourcefilename="OngoingTensorOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Lorg/tensorics/core/tensor/Tensor;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="64"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plusV" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensor/Tensor;" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="74"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minusV" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensor/Tensor;" line="79"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementTimes" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="90"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementDividedByV" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensor/Tensor;" line="95"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/math/operations/BinaryOperation;)Lorg/tensorics/core/tensor/Tensor;" line="99"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementTimesV" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensor/Tensor;" line="104"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementDividedBy" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="109"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="times" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="121"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="84"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/QuantityTensorSupport" sourcefilename="QuantityTensorSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingQuantifiedTensorOperation;" line="47"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingQuantityTensorValueExtraction;" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingDimensionFlattening" sourcefilename="OngoingDimensionFlattening.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/Set;)V" line="46"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intoTensorOfSets" desc="()Lorg/tensorics/core/tensor/Tensor;" line="52"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intoSetMultimap" desc="()Lcom/google/common/collect/SetMultimap;" line="56"><counter type="INSTRUCTION" missed="35" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainingDimensions" desc="()Lcom/google/common/collect/Sets$SetView;" line="66"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/lang/OngoingQuantifiedTensorOperation" sourcefilename="OngoingQuantifiedTensorOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/operations/QuantityOperationRepository;Lorg/tensorics/core/tensor/Tensor;)V" line="49"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plusV" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tensor/Tensor;" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="66"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minusV" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tensor/Tensor;" line="71"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementTimes" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="76"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementTimesV" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tensor/Tensor;" line="81"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementDividedBy" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="86"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementDividedByV" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tensor/Tensor;" line="91"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/math/operations/BinaryOperation;)Lorg/tensorics/core/tensor/Tensor;" line="97"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/lang/OngoingDeferredQuantifiedTensorOperation" sourcefilename="OngoingDeferredQuantifiedTensorOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/operations/QuantityOperationRepository;Lorg/tensorics/core/tree/domain/Expression;)V" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tree/domain/Expression;" line="57"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="62"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plusV" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tree/domain/Expression;" line="67"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tree/domain/Expression;" line="71"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="76"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minusV" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tree/domain/Expression;" line="81"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementTimes" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="86"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementDividedByV" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tree/domain/Expression;" line="91"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementTimesV" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tree/domain/Expression;" line="96"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementDividedBy" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="101"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementDividedByQT" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tree/domain/Expression;" line="105"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/math/operations/BinaryOperation;)Lorg/tensorics/core/tree/domain/Expression;" line="110"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/lang/OngoingFieldAwareResampling" sourcefilename="OngoingFieldAwareResampling.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/resample/MultiDimensionalResampling;Lorg/tensorics/core/math/ExtendedField;)V" line="24"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Class;Lorg/tensorics/core/tensor/resample/SingleDimensionResampler;Lorg/tensorics/core/math/ExtendedField;)Lorg/tensorics/core/tensor/lang/OngoingFieldAwareResampling;" line="32"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="repeat" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/lang/OngoingFieldAwareResampling;" line="37"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="repeat" desc="(Ljava/lang/Class;Ljava/util/Comparator;)Lorg/tensorics/core/tensor/lang/OngoingFieldAwareResampling;" line="41"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="linear" desc="(Ljava/lang/Class;Ljava/util/function/Function;)Lorg/tensorics/core/tensor/lang/OngoingFieldAwareResampling;" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="then" desc="(Ljava/lang/Class;Lorg/tensorics/core/tensor/resample/SingleDimensionResampler;)Lorg/tensorics/core/tensor/lang/OngoingFieldAwareResampling;" line="49"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="then" desc="()Lorg/tensorics/core/tensor/lang/OngoingFieldAwareResampling;" line="58"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTensoric" desc="()Lorg/tensorics/core/tensor/Tensoric;" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="([Ljava/lang/Object;)Ljava/lang/Object;" line="70"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="get" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="74"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/QuantityTensors" sourcefilename="QuantityTensors.java"><method name="valuesOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="52"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorsOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="61"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="errorsOfOr" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Object;)Lorg/tensorics/core/tensor/Tensor;" line="70"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validitiesOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="79"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="quantityTensorOf" desc="(Lorg/tensorics/core/tensor/Tensor;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/tensor/Tensor;" line="88"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="quantityTensorOf" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/tensor/Tensor;" line="92"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unitOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/units/Unit;" line="104"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="173" covered="36"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="28" covered="6"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingCompletion" sourcefilename="OngoingCompletion.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;)V" line="35"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="40"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/lang/Object;)Lorg/tensorics/core/tensor/Tensor;" line="44"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="6" covered="14"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/TensorSupport" sourcefilename="TensorSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingTensorOperation;" line="58"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zeros" desc="(Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tensor/Tensor;" line="68"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tensor/Tensor;" line="78"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementInverseOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="86"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="94"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resample" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingFieldAwareResamplingStart;" line="118"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementwise" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="122"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementwise" desc="(Lorg/tensorics/core/math/operations/BinaryFunction;Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="126"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="33"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingDimensionReduction" sourcefilename="OngoingDimensionReduction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Class;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byAveragingIn" desc="(Lorg/tensorics/core/math/ExtendedField;)Lorg/tensorics/core/tensor/Tensor;" line="45"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byRmsIn" desc="(Lorg/tensorics/core/math/ExtendedField;)Lorg/tensorics/core/tensor/Tensor;" line="49"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingStructuralReduction" sourcefilename="OngoingStructuralReduction.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Class;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="by" desc="(Lorg/tensorics/core/reduction/ReductionStrategy;)Lorg/tensorics/core/tensor/Tensor;" line="50"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="bySlicingAt" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensor/Tensor;" line="54"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byInterpolatedSlicingAt" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensor/lang/OngoingInterpolation;" line="58"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="reduceBy" desc="(Lorg/tensorics/core/reduction/ReductionStrategy;)Lorg/tensorics/core/tensor/Tensor;" line="62"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/lang/OngoingDeferredTensorOperation" sourcefilename="OngoingDeferredTensorOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExplicitField;Lorg/tensorics/core/commons/options/OptionRegistry;Lorg/tensorics/core/tree/domain/Expression;)V" line="59"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="73"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plusV" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="78"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="83"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minusV" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="88"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementDividedByV" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="93"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementTimes" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="99"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementTimesV" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="104"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementDividedBy" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="109"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="evaluate" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/math/operations/BinaryOperation;)Lorg/tensorics/core/tree/domain/Expression;" line="113"><counter type="INSTRUCTION" missed="13" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensor/lang/OngoingOrderedFlattening" sourcefilename="OngoingOrderedFlattening.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Class;)V" line="50"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intoTensorOfLists" desc="()Lorg/tensorics/core/tensor/Tensor;" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intoListMultimap" desc="()Lcom/google/common/collect/ListMultimap;" line="60"><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intoTensorOfKeyLists" desc="()Lorg/tensorics/core/tensor/Tensor;" line="75"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="intoKeyListMultimap" desc="()Lcom/google/common/collect/ListMultimap;" line="79"><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remainingDimensions" desc="()Lcom/google/common/collect/Sets$SetView;" line="92"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="135" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="OngoingTensorOperation.java"><line nr="51" mi="0" ci="2" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="1" mb="0" cb="0"/><line nr="64" mi="0" ci="8" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="8" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="8" mb="0" cb="0"/><line nr="95" mi="0" ci="5" mb="0" cb="0"/><line nr="99" mi="0" ci="12" mb="0" cb="0"/><line nr="104" mi="0" ci="5" mb="0" cb="0"/><line nr="109" mi="0" ci="8" mb="0" cb="0"/><line nr="121" mi="0" ci="15" mb="0" cb="0"/><line nr="122" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="84"/><counter type="LINE" missed="2" covered="13"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingCompletion.java"><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><line nr="40" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="14"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingDeferredQuantifiedTensorOperation.java"><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="54" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="7" ci="0" mb="0" cb="0"/><line nr="67" mi="6" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="7" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="96" mi="6" ci="0" mb="0" cb="0"/><line nr="101" mi="7" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="4" ci="0" mb="0" cb="0"/><line nr="113" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="92" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="13" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingInterpolation.java"><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="3" mb="0" cb="0"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="32" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="16" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingFieldAwareResampling.java"><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="6" mb="0" cb="0"/><line nr="28" mi="0" ci="1" mb="0" cb="0"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="37" mi="0" ci="5" mb="0" cb="0"/><line nr="41" mi="0" ci="8" mb="0" cb="0"/><line nr="45" mi="0" ci="10" mb="0" cb="0"/><line nr="49" mi="0" ci="13" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="74"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="3" covered="8"/><counter type="METHOD" missed="3" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorSupport.java"><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="10" ci="0" mb="0" cb="0"/><line nr="78" mi="10" ci="0" mb="0" cb="0"/><line nr="86" mi="10" ci="0" mb="0" cb="0"/><line nr="94" mi="0" ci="10" mb="0" cb="0"/><line nr="118" mi="0" ci="8" mb="0" cb="0"/><line nr="122" mi="11" ci="0" mb="0" cb="0"/><line nr="126" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="33"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="5" covered="4"/><counter type="METHOD" missed="5" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityTensorExpressionSupport.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="5" ci="0" mb="0" cb="0"/><line nr="54" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="12" covered="10"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingStructuralReduction.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="9" mb="0" cb="0"/><line nr="62" mi="0" ci="10" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityTensorSupport.java"><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="6" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="7" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="7" covered="17"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingFlattening.java"><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="37" mi="3" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><line nr="45" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="7" ci="0" mb="0" cb="0"/><line nr="53" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingTensorManipulation.java"><line nr="59" mi="0" ci="2" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="13" mb="0" cb="2"/><line nr="74" mi="0" ci="8" mb="0" cb="2"/><line nr="75" mi="0" ci="8" mb="0" cb="0"/><line nr="77" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="13" mb="0" cb="2"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="96" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="5" mb="0" cb="0"/><line nr="113" mi="0" ci="5" mb="0" cb="2"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="5" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="2"/><line nr="118" mi="0" ci="2" mb="0" cb="0"/><line nr="120" mi="0" ci="15" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="0" ci="5" mb="0" cb="0"/><line nr="130" mi="15" ci="0" mb="0" cb="0"/><line nr="131" mi="7" ci="0" mb="0" cb="0"/><line nr="132" mi="5" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="0" cb="0"/><line nr="137" mi="6" ci="0" mb="0" cb="0"/><line nr="141" mi="4" ci="0" mb="0" cb="0"/><line nr="142" mi="6" ci="0" mb="0" cb="0"/><line nr="143" mi="12" ci="0" mb="0" cb="0"/><line nr="147" mi="6" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="7" ci="0" mb="0" cb="0"/><line nr="167" mi="1" ci="6" mb="1" cb="1"/><line nr="168" mi="0" ci="9" mb="0" cb="2"/><line nr="169" mi="1" ci="6" mb="1" cb="1"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="3" mb="0" cb="0"/><line nr="172" mi="0" ci="9" mb="0" cb="2"/><line nr="173" mi="0" ci="4" mb="0" cb="0"/><line nr="174" mi="0" ci="1" mb="0" cb="0"/><line nr="175" mi="0" ci="2" mb="0" cb="0"/><line nr="179" mi="1" ci="6" mb="1" cb="1"/><line nr="180" mi="1" ci="7" mb="1" cb="1"/><line nr="187" mi="0" ci="3" mb="0" cb="0"/><line nr="188" mi="0" ci="6" mb="0" cb="0"/><line nr="190" mi="0" ci="7" mb="0" cb="0"/><line nr="194" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="75" covered="215"/><counter type="BRANCH" missed="4" covered="18"/><counter type="LINE" missed="10" covered="41"/><counter type="COMPLEXITY" missed="14" covered="19"/><counter type="METHOD" missed="10" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingDimensionFlattening.java"><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="1" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="13" ci="0" mb="2" cb="0"/><line nr="59" mi="6" ci="0" mb="0" cb="0"/><line nr="60" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="66" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="59" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingQuantityTensorValueExtraction.java"><line nr="24" mi="0" ci="2" mb="0" cb="0"/><line nr="25" mi="0" ci="6" mb="0" cb="0"/><line nr="26" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="1" mb="0" cb="0"/><line nr="30" mi="0" ci="16" mb="0" cb="0"/><line nr="31" mi="0" ci="5" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="9" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="50"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingResamplingStart.java"><line nr="14" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="1" mb="0" cb="0"/><line nr="19" mi="0" ci="9" mb="0" cb="0"/><line nr="23" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingFieldAwareResamplingStart.java"><line nr="18" mi="0" ci="2" mb="0" cb="0"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="13" mb="0" cb="0"/><line nr="29" mi="0" ci="11" mb="0" cb="0"/><line nr="33" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="44"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingDimensionReduction.java"><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><line nr="49" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityTensors.java"><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="53" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="12" mb="0" cb="2"/><line nr="55" mi="0" ci="10" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="63" mi="12" ci="0" mb="2" cb="0"/><line nr="64" mi="10" ci="0" mb="0" cb="0"/><line nr="65" mi="1" ci="0" mb="0" cb="0"/><line nr="66" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="72" mi="12" ci="0" mb="2" cb="0"/><line nr="73" mi="12" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="75" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="12" ci="0" mb="2" cb="0"/><line nr="82" mi="10" ci="0" mb="0" cb="0"/><line nr="83" mi="1" ci="0" mb="0" cb="0"/><line nr="84" mi="3" ci="0" mb="0" cb="0"/><line nr="88" mi="5" ci="0" mb="0" cb="0"/><line nr="92" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="12" ci="0" mb="2" cb="0"/><line nr="95" mi="10" ci="0" mb="0" cb="0"/><line nr="96" mi="1" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="104" mi="12" ci="0" mb="2" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="173" covered="36"/><counter type="BRANCH" missed="10" covered="2"/><counter type="LINE" missed="28" covered="6"/><counter type="COMPLEXITY" missed="11" covered="2"/><counter type="METHOD" missed="6" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorStructurals.java"><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="7" mb="1" cb="3"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="86" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="10" mb="0" cb="2"/><line nr="96" mi="0" ci="5" mb="0" cb="2"/><line nr="97" mi="0" ci="1" mb="0" cb="0"/><line nr="98" mi="0" ci="7" mb="0" cb="0"/><line nr="100" mi="0" ci="12" mb="0" cb="0"/><line nr="104" mi="0" ci="1" mb="0" cb="0"/><line nr="105" mi="0" ci="3" mb="0" cb="0"/><line nr="119" mi="0" ci="4" mb="0" cb="0"/><line nr="120" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="0" ci="12" mb="1" cb="3"/><line nr="125" mi="5" ci="0" mb="0" cb="0"/><line nr="129" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="12" ci="0" mb="2" cb="0"/><line nr="135" mi="9" ci="0" mb="0" cb="0"/><line nr="136" mi="1" ci="0" mb="0" cb="0"/><line nr="137" mi="3" ci="0" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="12" ci="0" mb="2" cb="0"/><line nr="144" mi="10" ci="0" mb="0" cb="0"/><line nr="145" mi="1" ci="0" mb="0" cb="0"/><line nr="146" mi="3" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><line nr="152" mi="12" ci="0" mb="2" cb="0"/><line nr="153" mi="13" ci="0" mb="0" cb="0"/><line nr="154" mi="1" ci="0" mb="0" cb="0"/><line nr="155" mi="3" ci="0" mb="0" cb="0"/><line nr="159" mi="6" ci="0" mb="0" cb="0"/><line nr="160" mi="1" ci="0" mb="0" cb="0"/><line nr="163" mi="13" ci="0" mb="0" cb="0"/><line nr="164" mi="1" ci="0" mb="0" cb="0"/><line nr="167" mi="5" ci="0" mb="0" cb="0"/><line nr="168" mi="4" ci="0" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="5" mb="1" cb="1"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="1" mb="0" cb="0"/><line nr="177" mi="0" ci="8" mb="0" cb="0"/><line nr="178" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="5" ci="0" mb="0" cb="0"/><line nr="184" mi="4" ci="0" mb="0" cb="0"/><line nr="185" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="3" ci="0" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="0" ci="4" mb="0" cb="0"/><line nr="196" mi="0" ci="5" mb="0" cb="0"/><line nr="197" mi="0" ci="5" mb="0" cb="0"/><line nr="199" mi="0" ci="6" mb="0" cb="0"/><line nr="200" mi="0" ci="11" mb="0" cb="2"/><line nr="201" mi="0" ci="5" mb="0" cb="2"/><line nr="202" mi="0" ci="8" mb="0" cb="0"/><line nr="204" mi="0" ci="7" mb="0" cb="0"/><line nr="206" mi="0" ci="1" mb="0" cb="0"/><line nr="207" mi="0" ci="3" mb="0" cb="0"/><line nr="232" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="169" covered="191"/><counter type="BRANCH" missed="9" covered="15"/><counter type="LINE" missed="31" covered="37"/><counter type="COMPLEXITY" missed="16" covered="13"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingEitherGet.java"><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="6" ci="0" mb="2" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingQuantifiedTensorOperation.java"><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="50" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="7" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="7" ci="0" mb="0" cb="0"/><line nr="91" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="72" covered="0"/><counter type="LINE" missed="14" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TensorExpressionSupport.java"><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="4" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="9" ci="0" mb="0" cb="0"/><line nr="71" mi="6" ci="0" mb="0" cb="0"/><line nr="81" mi="6" ci="0" mb="0" cb="0"/><line nr="89" mi="6" ci="0" mb="0" cb="0"/><line nr="97" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="13"/><counter type="LINE" missed="5" covered="4"/><counter type="COMPLEXITY" missed="5" covered="1"/><counter type="METHOD" missed="5" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingTensorFiltering.java"><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="4" ci="0" mb="0" cb="0"/><line nr="52" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="6" ci="0" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="13" ci="0" mb="2" cb="0"/><line nr="57" mi="9" ci="0" mb="2" cb="0"/><line nr="58" mi="8" ci="0" mb="0" cb="0"/><line nr="60" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingResampling.java"><line nr="19" mi="0" ci="2" mb="0" cb="0"/><line nr="20" mi="0" ci="6" mb="0" cb="0"/><line nr="21" mi="0" ci="6" mb="0" cb="0"/><line nr="22" mi="0" ci="1" mb="0" cb="0"/><line nr="26" mi="0" ci="8" mb="0" cb="0"/><line nr="30" mi="0" ci="5" mb="0" cb="0"/><line nr="34" mi="0" ci="8" mb="0" cb="0"/><line nr="38" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="2" mb="0" cb="0"/><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="55" mi="0" ci="5" mb="0" cb="0"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="5" covered="65"/><counter type="LINE" missed="1" covered="12"/><counter type="COMPLEXITY" missed="1" covered="9"/><counter type="METHOD" missed="1" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingTensorReduction.java"><line nr="10" mi="3" ci="0" mb="0" cb="0"/><line nr="13" mi="4" ci="0" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingOrderedFlattening.java"><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="3" ci="0" mb="0" cb="0"/><line nr="52" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="7" ci="0" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="0" cb="0"/><line nr="62" mi="11" ci="0" mb="2" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="64" mi="4" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="66" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="10" ci="0" mb="2" cb="0"/><line nr="68" mi="7" ci="0" mb="0" cb="0"/><line nr="69" mi="1" ci="0" mb="0" cb="0"/><line nr="70" mi="1" ci="0" mb="0" cb="0"/><line nr="71" mi="3" ci="0" mb="0" cb="0"/><line nr="75" mi="7" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="80" mi="7" ci="0" mb="0" cb="0"/><line nr="81" mi="11" ci="0" mb="2" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="1" ci="0" mb="0" cb="0"/><line nr="88" mi="3" ci="0" mb="0" cb="0"/><line nr="92" mi="9" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="135" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="29" covered="0"/><counter type="COMPLEXITY" missed="9" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingDeferredTensorOperation.java"><line nr="59" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="3" ci="0" mb="0" cb="0"/><line nr="61" mi="3" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><line nr="63" mi="1" ci="0" mb="0" cb="0"/><line nr="73" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="88" mi="6" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="7" ci="0" mb="0" cb="0"/><line nr="104" mi="6" ci="0" mb="0" cb="0"/><line nr="109" mi="7" ci="0" mb="0" cb="0"/><line nr="113" mi="13" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="79" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="10" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="1124" covered="964"/><counter type="BRANCH" missed="37" covered="35"/><counter type="LINE" missed="208" covered="182"/><counter type="COMPLEXITY" missed="124" covered="93"/><counter type="METHOD" missed="102" covered="79"/><counter type="CLASS" missed="9" covered="17"/></package><package name="org/tensorics/core/function/expressions"><class name="org/tensorics/core/function/expressions/DiscreteFunctionToIterableExpression" sourcefilename="DiscreteFunctionToIterableExpression.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/operations/Conversion;Lorg/tensorics/core/tree/domain/Expression;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="DiscreteFunctionToIterableExpression.java"><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></package><package name="org/tensorics/core/lang"><class name="org/tensorics/core/lang/DoubleScript" sourcefilename="DoubleScript.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/TensoricDoubles" sourcefilename="TensoricDoubles.java"><method name="calculate" desc="(Ljava/lang/Double;)Lorg/tensorics/core/commons/lang/OngoingBinaryOperation;" line="65"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avarageOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Double;" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Ljava/lang/Double;)Ljava/lang/Double;" line="73"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Ljava/lang/Double;)Ljava/lang/Double;" line="77"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Double;" line="81"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zero" desc="()Ljava/lang/Double;" line="85"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="two" desc="()Ljava/lang/Double;" line="89"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="one" desc="()Ljava/lang/Double;" line="93"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countOf" desc="(I)Ljava/lang/Double;" line="97"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Double;" line="101"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rmsOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Double;" line="105"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="squareRootOf" desc="(Ljava/lang/Double;)Ljava/lang/Double;" line="109"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="squareOf" desc="(Ljava/lang/Double;)Ljava/lang/Double;" line="113"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingTensorOperation;" line="117"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sumOfSquaresOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Double;" line="121"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tensor/Tensor;" line="125"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tensor/Tensor;" line="129"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementInverseOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="133"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="137"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="averageOfQ" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="141"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rmsOfQ" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="145"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="varOfQ" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="149"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stdOfQ" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="153"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateQ" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingQuantifiedTensorOperation;" line="157"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOfQ" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="161"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/Double;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="165"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Ljava/lang/Double;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/lang/OngoingQuantifiedScalarOperation;" line="170"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumOfQ" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="174"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/lang/OngoingQuantifiedScalarOperation;" line="178"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="182"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="186"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="190"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/lang/OngoingTensorBackedOperation;" line="195"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negativeOfQ" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="199"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateQ" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/lang/OngoingQuantifiedTensorBackedOperation;" line="204"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testIf" desc="(Ljava/lang/Double;)Lorg/tensorics/core/scalar/lang/OngoingScalarBinaryPredicate;" line="208"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testIf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/lang/OngoingQuantifiedScalarBinaryPredicate;" line="212"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="absoluteValueOf" desc="(Ljava/lang/Double;)Ljava/lang/Double;" line="216"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="absoluteValueOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="220"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementwise" desc="(Lorg/tensorics/core/math/operations/BinaryFunction;Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="224"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementwise" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="229"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/Double;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="233"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/lang/OngoingQuantityValueExtraction;" line="237"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesOfI" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/iterable/lang/OngoingQuantityIterableValueExtraction;" line="242"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="confidenceLevelOf" desc="(Ljava/lang/Double;)Lorg/tensorics/core/quantity/options/ConfidenceLevel;" line="246"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Lorg/tensorics/core/commons/options/ManipulationOption;)Lorg/tensorics/core/lang/TensoricSupport;" line="250"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valuesOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/iterable/lang/OngoingQuantityIterableValueExtraction;" line="255"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/lang/OngoingQuantifiedScalarConversion;" line="259"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingQuantityTensorValueExtraction;" line="263"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="averageOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Double;" line="267"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="varOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Double;" line="271"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stdOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Double;" line="275"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resample" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingFieldAwareResamplingStart;" line="279"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;clinit&gt;" desc="()V" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="180" covered="58"/><counter type="LINE" missed="40" covered="14"/><counter type="COMPLEXITY" missed="40" covered="14"/><counter type="METHOD" missed="40" covered="14"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/ManipulationOptions" sourcefilename="ManipulationOptions.java"><method name="defaultOptions" desc="(Lorg/tensorics/core/math/ExtendedField;)Lorg/tensorics/core/commons/options/OptionRegistry;" line="73"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="defaultStructuralOnly" desc="()Lorg/tensorics/core/commons/options/OptionRegistry;" line="98"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/QuantityDoubleSupport" sourcefilename="QuantityDoubleSupport.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/Tensorics" sourcefilename="Tensorics.java"><method name="using" desc="(Lorg/tensorics/core/math/ExtendedField;)Lorg/tensorics/core/lang/TensoricSupport;" line="99"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="merge" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensor/Tensor;" line="103"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mergeContextIntoShape" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="110"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensor/TensorBuilder;" line="117"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builder" desc="([Ljava/lang/Class;)Lorg/tensorics/core/tensor/TensorBuilder;" line="124"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderBacked" desc="()Lorg/tensorics/core/tensorbacked/dimtyped/TensorbackedScalarBuilder;" line="128"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builderBacked" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked1dBuilder;" line="132"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builderBacked" desc="(Ljava/lang/Class;Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked2dBuilder;" line="136"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderBacked" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked3dBuilder;" line="140"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderBacked" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked4dBuilder;" line="144"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderBacked" desc="(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked5dBuilder;" line="148"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromMap" desc="(Ljava/lang/Iterable;Ljava/util/Map;)Lorg/tensorics/core/tensor/Tensor;" line="155"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="162"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderFrom" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/TensorBuilder;" line="169"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="scalarOf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensor/ImmutableScalar;" line="176"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quantityOf" desc="(Ljava/lang/Object;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/quantity/ImmutableQuantifiedValue;" line="183"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quantityOf" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/ImmutableQuantifiedValue;" line="195"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderFor" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="202"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderForScalar" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/TensorbackedScalarBuilder;" line="209"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builderFor1D" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked1dBuilder;" line="216"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderFor2D" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked2dBuilder;" line="223"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builderFor3D" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked3dBuilder;" line="230"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builderFor4D" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked4dBuilder;" line="237"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builderFor5D" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked5dBuilder;" line="244"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)I" line="252"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeOf" desc="(Lorg/tensorics/core/tensor/Tensor;)I" line="256"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dimensionalityOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)I" line="263"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="270"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="empty" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensor/Tensor;" line="274"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="empty" desc="([Ljava/lang/Class;)Lorg/tensorics/core/tensor/Tensor;" line="278"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validitiesOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/Tensor;" line="285"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/Tensor;" line="292"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="errorsOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/Tensor;" line="299"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="positionsOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Ljava/util/Set;" line="306"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convertToQuantified" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/tensor/Tensor;" line="314"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="quantityTensorOf" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/tensor/Tensor;" line="321"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="quantityTensorOf" desc="(Lorg/tensorics/core/tensor/Tensor;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/tensor/Tensor;" line="328"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unitOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/units/Unit;" line="335"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unitOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/units/Unit;" line="342"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shapeOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/Shape;" line="349"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dimensionsOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Ljava/util/Set;" line="353"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="from" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingTensorManipulation;" line="360"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/lang/OngoingTensorManipulation;" line="364"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dimensionsOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Ljava/util/Set;" line="368"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="positionsOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Ljava/util/Set;" line="372"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="validitiesOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="376"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="380"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="errorsOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="384"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="errorsOfOr" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Object;)Lorg/tensorics/core/tensor/Tensor;" line="388"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingFlattening;" line="392"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/lang/OngoingFlattening;" line="396"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sameValues" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/lang/Object;)Lorg/tensorics/core/tensor/Tensor;" line="400"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFrom" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/util/function/Supplier;)Lorg/tensorics/core/tensor/Tensor;" line="408"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tensor" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/util/function/Supplier;)Lorg/tensorics/core/tensor/Tensor;" line="412"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="createFrom" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/util/function/Function;)Lorg/tensorics/core/tensor/Tensor;" line="420"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tensor" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/util/function/Function;)Lorg/tensorics/core/tensor/Tensor;" line="424"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="complete" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingCompletion;" line="428"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="transformEntries" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/function/Function;)Lorg/tensorics/core/tensor/Tensor;" line="436"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/function/Function;)Lorg/tensorics/core/tensor/Tensor;" line="440"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="map" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/function/BiFunction;)Lorg/tensorics/core/tensor/Tensor;" line="444"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;Ljava/util/function/Consumer;)V" line="448"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;Ljava/util/function/BiConsumer;)V" line="452"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/function/Consumer;)V" line="456"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="forEach" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/function/BiConsumer;)V" line="460"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeroDimensionalOf" desc="(DLjavax/measure/unit/Unit;)Lorg/tensorics/core/tensor/Scalar;" line="465"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeroDimensionalOf" desc="(DLorg/tensorics/core/units/Unit;)Lorg/tensorics/core/tensor/Scalar;" line="470"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tensorsOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Iterable;" line="478"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="construct" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/lang/OngoingTensorbackedConstruction;" line="486"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stripContext" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="493"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stripContext" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="500"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filter" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingTensorFiltering;" line="507"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filter" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/lang/OngoingTensorbackedFiltering;" line="514"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setContext" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Tensor;" line="518"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setContext" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="522"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stream" desc="(Lorg/tensorics/core/tensor/Tensor;)Ljava/util/stream/Stream;" line="529"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stream" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Ljava/util/stream/Stream;" line="536"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shapesOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Iterable;" line="543"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="complete" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/OngoingTensorbackedCompletion;" line="550"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mapFrom" desc="(Lorg/tensorics/core/tensor/Tensor;)Ljava/util/Map;" line="557"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="at" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensor/Position;" line="564"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="at" desc="([Ljava/lang/Object;)Lorg/tensorics/core/tensor/Position;" line="571"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resample" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingResamplingStart;" line="578"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="227" covered="157"/><counter type="LINE" missed="64" covered="24"/><counter type="COMPLEXITY" missed="58" covered="24"/><counter type="METHOD" missed="58" covered="24"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/EnvironmentImpl" sourcefilename="EnvironmentImpl.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;Lorg/tensorics/core/commons/options/OptionRegistry;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Lorg/tensorics/core/math/ExtendedField;Lorg/tensorics/core/commons/options/OptionRegistry;)Lorg/tensorics/core/lang/EnvironmentImpl;" line="55"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="field" desc="()Lorg/tensorics/core/math/ExtendedField;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="errorPropagation" desc="()Lorg/tensorics/core/quantity/options/ErrorPropagationStrategy;" line="66"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="quantification" desc="()Lorg/tensorics/core/quantity/options/QuantificationStrategy;" line="72"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="confidenceLevel" desc="()Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="options" desc="()Lorg/tensorics/core/commons/options/OptionRegistry;" line="83"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Lorg/tensorics/core/commons/options/ManipulationOption;)Lorg/tensorics/core/lang/EnvironmentImpl;" line="87"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="92"><counter type="INSTRUCTION" missed="4" covered="28"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="101"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="130"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="74" covered="78"/><counter type="BRANCH" missed="20" covered="2"/><counter type="LINE" missed="19" covered="16"/><counter type="COMPLEXITY" missed="13" covered="9"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/TensoricSupport" sourcefilename="TensoricSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/lang/EnvironmentImpl;)V" line="70"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Ljava/lang/Object;)Lorg/tensorics/core/commons/lang/OngoingBinaryOperation;" line="79"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="avarageOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="91"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="95"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zero" desc="()Ljava/lang/Object;" line="99"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="two" desc="()Ljava/lang/Object;" line="103"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="one" desc="()Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="countOf" desc="(I)Ljava/lang/Object;" line="111"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="115"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rmsOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="119"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="squareRootOf" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="123"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="squareOf" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="127"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingTensorOperation;" line="131"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sumOfSquaresOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="135"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tensor/Tensor;" line="139"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="ones" desc="(Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tensor/Tensor;" line="143"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementInverseOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="147"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="151"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="averageOfQ" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="155"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rmsOfQ" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="159"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="varOfQ" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="163"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stdOfQ" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="167"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateQ" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingQuantifiedTensorOperation;" line="171"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/Object;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="175"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/lang/OngoingQuantifiedScalarOperation;" line="179"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/lang/OngoingQuantifiedScalarOperation;" line="183"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="187"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="191"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="195"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="199"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/lang/OngoingTensorBackedOperation;" line="203"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negativeOfQ" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="207"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculateQ" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/lang/OngoingQuantifiedTensorBackedOperation;" line="212"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testIf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/scalar/lang/OngoingScalarBinaryPredicate;" line="216"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testIf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/lang/OngoingQuantifiedScalarBinaryPredicate;" line="220"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="absoluteValueOf" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="224"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="absoluteValueOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="228"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementwise" desc="(Lorg/tensorics/core/math/operations/BinaryFunction;Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="232"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementwise" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="236"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/lang/OngoingQuantityValueExtraction;" line="240"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesOfI" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/iterable/lang/OngoingQuantityIterableValueExtraction;" line="244"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesOf" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingQuantityTensorValueExtraction;" line="248"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeOfQ" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="252"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumOfQ" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/quantity/QuantifiedValue;" line="256"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/iterable/lang/OngoingQuantityIterableValueExtraction;" line="260"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="convert" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/quantity/lang/OngoingQuantifiedScalarConversion;" line="264"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(Lorg/tensorics/core/commons/options/ManipulationOption;)Lorg/tensorics/core/lang/TensoricSupport;" line="268"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="confidenceLevelOf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/quantity/options/ConfidenceLevel;" line="272"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="averageOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="276"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="varOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="280"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stdOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Object;" line="284"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resample" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingFieldAwareResamplingStart;" line="288"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="178" covered="124"/><counter type="LINE" missed="35" covered="25"/><counter type="COMPLEXITY" missed="35" covered="19"/><counter type="METHOD" missed="35" covered="19"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/TensoricDoubleExpressions" sourcefilename="TensoricDoubleExpressions.java"><method name="&lt;init&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="30"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="averageOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="34"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="38"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="averageOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="42"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="squareRootOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="50"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="54"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="squareOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="58"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateT" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tensor/lang/OngoingDeferredTensorOperation;" line="62"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rmsOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="66"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/scalar/lang/OngoingDeferredBinaryOperation;" line="70"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumOfSquaresOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="74"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementInverseOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementNegativeOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="82"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateQT" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingDeferredQuantifiedTensorOperation;" line="87"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateQ" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/quantity/lang/OngoingDeferredQuantifiedScalarOperation;" line="92"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementNegativeOfTB" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="96"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateTB" desc="(Ljava/lang/Class;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tensorbacked/lang/OngoingDeferredTensorBackedOperation;" line="101"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementNegativeOfQTB" desc="(Ljava/lang/Class;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="106"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateQTB" desc="(Ljava/lang/Class;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tensorbacked/lang/OngoingDeferredQuantifiedTensorBackedOperation;" line="111"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testIf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/scalar/lang/OngoingDeferredBinaryPredicate;" line="115"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testIfIt" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/iterable/lang/OngoingDeferredIterableBinaryPredicate;" line="120"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rmsOfF" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="124"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="averageOfF" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="129"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withConversionAndComparator" desc="(Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)Lorg/tensorics/core/function/lang/FunctionExpressionSupportWithConversionAndComparator;" line="134"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="87" covered="25"/><counter type="LINE" missed="21" covered="6"/><counter type="COMPLEXITY" missed="21" covered="6"/><counter type="METHOD" missed="21" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/TensoricBooleanExpressions" sourcefilename="TensoricBooleanExpressions.java"><method name="or" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="25"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="or" desc="([Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="30"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="or" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="34"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="and" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="39"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="and" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="43"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="and" desc="([Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="49"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="17"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/lang/TensoricExpressionSupport" sourcefilename="TensoricExpressionSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/lang/EnvironmentImpl;)V" line="68"><counter type="INSTRUCTION" missed="0" covered="36"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="with" desc="(Lorg/tensorics/core/commons/options/ManipulationOption;)Lorg/tensorics/core/lang/TensoricExpressionSupport;" line="78"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="82"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="86"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="90"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="averageOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="94"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="98"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="averageOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="102"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zero" desc="()Ljava/lang/Object;" line="106"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="110"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="two" desc="()Ljava/lang/Object;" line="114"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="one" desc="()Ljava/lang/Object;" line="118"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sizeOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="122"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="squareRootOf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="126"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="squareRootOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="130"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="134"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="squareOf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="138"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="142"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="squareOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="146"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateT" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tensor/lang/OngoingDeferredTensorOperation;" line="150"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="rmsOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="154"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(Ljava/lang/Object;)Lorg/tensorics/core/scalar/lang/OngoingDeferredBinaryOperation;" line="158"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rmsOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="162"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/scalar/lang/OngoingDeferredBinaryOperation;" line="166"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sumOfSquaresOf" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/Expression;" line="170"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zeros" desc="(Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tree/domain/Expression;" line="174"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="sumOfSquaresOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="178"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ones" desc="(Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tree/domain/Expression;" line="182"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementInverseOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="186"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementNegativeOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="190"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/lang/OngoingDeferredQuantifiedTensorOperation;" line="194"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/Object;Lorg/tensorics/core/units/Unit;)Lorg/tensorics/core/tree/domain/Expression;" line="198"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/quantity/lang/OngoingDeferredQuantifiedScalarOperation;" line="202"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateQ" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/quantity/lang/OngoingDeferredQuantifiedScalarOperation;" line="206"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tree/domain/Expression;" line="210"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tree/domain/Expression;" line="214"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOf" desc="(Ljava/lang/Object;Ljavax/measure/unit/Unit;)Lorg/tensorics/core/tree/domain/Expression;" line="218"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementNegativeOfTB" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="222"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateTB" desc="(Ljava/lang/Class;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tensorbacked/lang/OngoingDeferredTensorBackedOperation;" line="227"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementNegativeOfQTB" desc="(Ljava/lang/Class;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="232"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateQTB" desc="(Ljava/lang/Class;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tensorbacked/lang/OngoingDeferredQuantifiedTensorBackedOperation;" line="237"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testIf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/scalar/lang/OngoingDeferredBinaryPredicate;" line="241"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testIfIt" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/iterable/lang/OngoingDeferredIterableBinaryPredicate;" line="245"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="rmsOfF" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="250"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="averageOfF" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="255"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withConversionAndComparator" desc="(Lorg/tensorics/core/commons/operations/Conversion;Ljava/util/Comparator;)Lorg/tensorics/core/function/lang/FunctionExpressionSupportWithConversionAndComparator;" line="261"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="187" covered="81"/><counter type="LINE" missed="36" covered="17"/><counter type="COMPLEXITY" missed="36" covered="10"/><counter type="METHOD" missed="36" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/TensoricTask" sourcefilename="TensoricTask.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/lang/EnvironmentImpl;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="call" desc="()Ljava/lang/Object;" line="46"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/TensoricDoubleSupport" sourcefilename="TensoricDoubleSupport.java"><method name="&lt;init&gt;" desc="()V" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/OngoingBasicDeferredBinaryPredicate" sourcefilename="OngoingBasicDeferredBinaryPredicate.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/Expression;)V" line="17"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEqualTo" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="22"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEqualTo" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="26"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotEqualTo" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="30"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isNotEqualTo" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="34"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/lang/TensoricExpressions" sourcefilename="TensoricExpressions.java"><method name="use" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/lang/TensoricExpressions$OngoingLambdaExpressionCreation;" line="39"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="use" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/lang/TensoricExpressions$OngoingLambdaExpressionCreation;" line="43"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="use" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/lang/TensoricExpressions$OngoingLambdaExpressionCreation;" line="48"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="use" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/lang/TensoricExpressions$OngoingLambdaExpressionCreation;" line="53"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="use" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/lang/TensoricExpressions$OngoingLambdaExpressionCreation;" line="58"><counter type="INSTRUCTION" missed="26" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="use" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/lang/TensoricExpressions$OngoingLambdaExpressionCreation;" line="64"><counter type="INSTRUCTION" missed="30" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="use" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/lang/TensoricExpressions$OngoingLambdaExpressionCreation;" line="70"><counter type="INSTRUCTION" missed="34" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="use" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/lang/TensoricExpressions$OngoingLambdaExpressionCreation;" line="76"><counter type="INSTRUCTION" missed="38" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="use" desc="(Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/lang/TensoricExpressions$OngoingLambdaExpressionCreation;" line="82"><counter type="INSTRUCTION" missed="42" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lastOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="107"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testIf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/lang/OngoingBasicDeferredBinaryPredicate;" line="111"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="testIf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/lang/OngoingBasicDeferredBinaryPredicate;" line="115"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="228" covered="18"/><counter type="LINE" missed="11" covered="1"/><counter type="COMPLEXITY" missed="11" covered="1"/><counter type="METHOD" missed="11" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/TensoricExpressions$OngoingLambdaExpressionCreation" sourcefilename="TensoricExpressions.java"><method name="&lt;init&gt;" desc="([Lorg/tensorics/core/tree/domain/Expression;)V" line="88"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="in" desc="(Lorg/tensorics/core/functional/FiniteArgumentFunction;)Lorg/tensorics/core/tree/domain/Expression;" line="94"><counter type="INSTRUCTION" missed="25" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="25" covered="21"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/TensoricDoubleExpressionSupport" sourcefilename="TensoricDoubleExpressionSupport.java"><method name="&lt;init&gt;" desc="()V" line="12"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/lang/TensoricScript" sourcefilename="TensoricScript.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/lang/EnvironmentImpl;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="62"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isResolved" desc="()Z" line="67"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getInternalExpression" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="76"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="81"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="89"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="111"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="50"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="13" covered="12"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TensoricSupport.java"><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="6" mb="0" cb="0"/><line nr="75" mi="0" ci="6" mb="0" cb="0"/><line nr="76" mi="0" ci="1" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><line nr="91" mi="5" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="4" ci="0" mb="0" cb="0"/><line nr="103" mi="4" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="5" ci="0" mb="0" cb="0"/><line nr="123" mi="5" ci="0" mb="0" cb="0"/><line nr="127" mi="5" ci="0" mb="0" cb="0"/><line nr="131" mi="0" ci="5" mb="0" cb="0"/><line nr="135" mi="5" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="5" ci="0" mb="0" cb="0"/><line nr="147" mi="5" ci="0" mb="0" cb="0"/><line nr="151" mi="0" ci="5" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="159" mi="0" ci="5" mb="0" cb="0"/><line nr="163" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="171" mi="5" ci="0" mb="0" cb="0"/><line nr="175" mi="0" ci="6" mb="0" cb="0"/><line nr="179" mi="6" ci="0" mb="0" cb="0"/><line nr="183" mi="0" ci="5" mb="0" cb="0"/><line nr="187" mi="5" ci="0" mb="0" cb="0"/><line nr="191" mi="5" ci="0" mb="0" cb="0"/><line nr="195" mi="6" ci="0" mb="0" cb="0"/><line nr="199" mi="0" ci="5" mb="0" cb="0"/><line nr="203" mi="0" ci="5" mb="0" cb="0"/><line nr="207" mi="0" ci="5" mb="0" cb="0"/><line nr="212" mi="0" ci="5" mb="0" cb="0"/><line nr="216" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="5" mb="0" cb="0"/><line nr="224" mi="5" ci="0" mb="0" cb="0"/><line nr="228" mi="0" ci="5" mb="0" cb="0"/><line nr="232" mi="7" ci="0" mb="0" cb="0"/><line nr="236" mi="7" ci="0" mb="0" cb="0"/><line nr="240" mi="5" ci="0" mb="0" cb="0"/><line nr="244" mi="5" ci="0" mb="0" cb="0"/><line nr="248" mi="0" ci="5" mb="0" cb="0"/><line nr="252" mi="5" ci="0" mb="0" cb="0"/><line nr="256" mi="5" ci="0" mb="0" cb="0"/><line nr="260" mi="5" ci="0" mb="0" cb="0"/><line nr="264" mi="5" ci="0" mb="0" cb="0"/><line nr="268" mi="0" ci="8" mb="0" cb="0"/><line nr="272" mi="0" ci="5" mb="0" cb="0"/><line nr="276" mi="5" ci="0" mb="0" cb="0"/><line nr="280" mi="5" ci="0" mb="0" cb="0"/><line nr="284" mi="5" ci="0" mb="0" cb="0"/><line nr="288" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="178" covered="124"/><counter type="LINE" missed="35" covered="25"/><counter type="COMPLEXITY" missed="35" covered="19"/><counter type="METHOD" missed="35" covered="19"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensoricExpressions.java"><line nr="39" mi="10" ci="0" mb="0" cb="0"/><line nr="43" mi="14" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="18" mb="0" cb="0"/><line nr="53" mi="22" ci="0" mb="0" cb="0"/><line nr="58" mi="26" ci="0" mb="0" cb="0"/><line nr="64" mi="30" ci="0" mb="0" cb="0"/><line nr="70" mi="34" ci="0" mb="0" cb="0"/><line nr="76" mi="38" ci="0" mb="0" cb="0"/><line nr="82" mi="42" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="90" mi="0" ci="1" mb="0" cb="0"/><line nr="94" mi="0" ci="6" mb="1" cb="1"/><line nr="95" mi="15" ci="0" mb="0" cb="0"/><line nr="99" mi="10" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="8" mb="0" cb="0"/><line nr="107" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="253" covered="39"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="13" covered="6"/><counter type="COMPLEXITY" missed="12" covered="3"/><counter type="METHOD" missed="11" covered="3"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TensoricDoubleSupport.java"><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="DoubleScript.java"><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensoricScript.java"><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="0"/><line nr="76" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="83" mi="2" ci="11" mb="1" cb="1"/><line nr="84" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="2" ci="0" mb="2" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="5" ci="0" mb="2" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="3" ci="0" mb="0" cb="0"/><line nr="99" mi="3" ci="0" mb="2" cb="0"/><line nr="100" mi="3" ci="0" mb="2" cb="0"/><line nr="101" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="6" ci="0" mb="2" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="111" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="50"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="13" covered="12"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensoricExpressionSupport.java"><line nr="68" mi="0" ci="2" mb="0" cb="0"/><line nr="69" mi="0" ci="6" mb="0" cb="0"/><line nr="70" mi="0" ci="6" mb="0" cb="0"/><line nr="71" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="73" mi="0" ci="6" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="8" ci="0" mb="0" cb="0"/><line nr="82" mi="5" ci="0" mb="0" cb="0"/><line nr="86" mi="5" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="5" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="106" mi="4" ci="0" mb="0" cb="0"/><line nr="110" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="4" ci="0" mb="0" cb="0"/><line nr="118" mi="4" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="5" mb="0" cb="0"/><line nr="126" mi="5" ci="0" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><line nr="138" mi="5" ci="0" mb="0" cb="0"/><line nr="142" mi="0" ci="5" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><line nr="150" mi="5" ci="0" mb="0" cb="0"/><line nr="154" mi="5" ci="0" mb="0" cb="0"/><line nr="158" mi="0" ci="5" mb="0" cb="0"/><line nr="162" mi="0" ci="5" mb="0" cb="0"/><line nr="166" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="5" ci="0" mb="0" cb="0"/><line nr="178" mi="0" ci="5" mb="0" cb="0"/><line nr="182" mi="5" ci="0" mb="0" cb="0"/><line nr="186" mi="5" ci="0" mb="0" cb="0"/><line nr="190" mi="5" ci="0" mb="0" cb="0"/><line nr="194" mi="5" ci="0" mb="0" cb="0"/><line nr="198" mi="6" ci="0" mb="0" cb="0"/><line nr="202" mi="6" ci="0" mb="0" cb="0"/><line nr="206" mi="5" ci="0" mb="0" cb="0"/><line nr="210" mi="5" ci="0" mb="0" cb="0"/><line nr="214" mi="5" ci="0" mb="0" cb="0"/><line nr="218" mi="6" ci="0" mb="0" cb="0"/><line nr="222" mi="5" ci="0" mb="0" cb="0"/><line nr="227" mi="6" ci="0" mb="0" cb="0"/><line nr="232" mi="6" ci="0" mb="0" cb="0"/><line nr="237" mi="6" ci="0" mb="0" cb="0"/><line nr="241" mi="0" ci="5" mb="0" cb="0"/><line nr="245" mi="0" ci="5" mb="0" cb="0"/><line nr="250" mi="5" ci="0" mb="0" cb="0"/><line nr="255" mi="5" ci="0" mb="0" cb="0"/><line nr="261" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="187" covered="81"/><counter type="LINE" missed="36" covered="17"/><counter type="COMPLEXITY" missed="36" covered="10"/><counter type="METHOD" missed="36" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingBasicDeferredBinaryPredicate.java"><line nr="17" mi="2" ci="0" mb="0" cb="0"/><line nr="18" mi="3" ci="0" mb="0" cb="0"/><line nr="19" mi="1" ci="0" mb="0" cb="0"/><line nr="22" mi="8" ci="0" mb="0" cb="0"/><line nr="26" mi="5" ci="0" mb="0" cb="0"/><line nr="30" mi="8" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Tensorics.java"><line nr="99" mi="0" ci="8" mb="0" cb="0"/><line nr="103" mi="3" ci="0" mb="0" cb="0"/><line nr="110" mi="0" ci="3" mb="0" cb="0"/><line nr="117" mi="0" ci="3" mb="0" cb="0"/><line nr="124" mi="0" ci="3" mb="0" cb="0"/><line nr="128" mi="8" ci="0" mb="0" cb="0"/><line nr="132" mi="12" ci="0" mb="0" cb="0"/><line nr="136" mi="0" ci="16" mb="0" cb="0"/><line nr="140" mi="0" ci="20" mb="0" cb="0"/><line nr="144" mi="0" ci="24" mb="0" cb="0"/><line nr="148" mi="0" ci="28" mb="0" cb="0"/><line nr="155" mi="0" ci="4" mb="0" cb="0"/><line nr="162" mi="0" ci="3" mb="0" cb="0"/><line nr="169" mi="3" ci="0" mb="0" cb="0"/><line nr="176" mi="0" ci="3" mb="0" cb="0"/><line nr="183" mi="0" ci="4" mb="0" cb="0"/><line nr="195" mi="0" ci="5" mb="0" cb="0"/><line nr="202" mi="0" ci="3" mb="0" cb="0"/><line nr="209" mi="3" ci="0" mb="0" cb="0"/><line nr="216" mi="0" ci="3" mb="0" cb="0"/><line nr="223" mi="3" ci="0" mb="0" cb="0"/><line nr="230" mi="3" ci="0" mb="0" cb="0"/><line nr="237" mi="3" ci="0" mb="0" cb="0"/><line nr="244" mi="3" ci="0" mb="0" cb="0"/><line nr="252" mi="0" ci="3" mb="0" cb="0"/><line nr="256" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="3" mb="0" cb="0"/><line nr="270" mi="3" ci="0" mb="0" cb="0"/><line nr="274" mi="4" ci="0" mb="0" cb="0"/><line nr="278" mi="4" ci="0" mb="0" cb="0"/><line nr="285" mi="3" ci="0" mb="0" cb="0"/><line nr="292" mi="3" ci="0" mb="0" cb="0"/><line nr="299" mi="3" ci="0" mb="0" cb="0"/><line nr="306" mi="3" ci="0" mb="0" cb="0"/><line nr="314" mi="4" ci="0" mb="0" cb="0"/><line nr="321" mi="4" ci="0" mb="0" cb="0"/><line nr="328" mi="5" ci="0" mb="0" cb="0"/><line nr="335" mi="3" ci="0" mb="0" cb="0"/><line nr="342" mi="3" ci="0" mb="0" cb="0"/><line nr="349" mi="3" ci="0" mb="0" cb="0"/><line nr="353" mi="4" ci="0" mb="0" cb="0"/><line nr="360" mi="0" ci="3" mb="0" cb="0"/><line nr="364" mi="4" ci="0" mb="0" cb="0"/><line nr="368" mi="4" ci="0" mb="0" cb="0"/><line nr="372" mi="4" ci="0" mb="0" cb="0"/><line nr="376" mi="3" ci="0" mb="0" cb="0"/><line nr="380" mi="3" ci="0" mb="0" cb="0"/><line nr="384" mi="3" ci="0" mb="0" cb="0"/><line nr="388" mi="4" ci="0" mb="0" cb="0"/><line nr="392" mi="3" ci="0" mb="0" cb="0"/><line nr="396" mi="3" ci="0" mb="0" cb="0"/><line nr="400" mi="4" ci="0" mb="0" cb="0"/><line nr="408" mi="4" ci="0" mb="0" cb="0"/><line nr="412" mi="4" ci="0" mb="0" cb="0"/><line nr="420" mi="4" ci="0" mb="0" cb="0"/><line nr="424" mi="4" ci="0" mb="0" cb="0"/><line nr="428" mi="0" ci="3" mb="0" cb="0"/><line nr="436" mi="4" ci="0" mb="0" cb="0"/><line nr="440" mi="4" ci="0" mb="0" cb="0"/><line nr="444" mi="4" ci="0" mb="0" cb="0"/><line nr="448" mi="4" ci="0" mb="0" cb="0"/><line nr="449" mi="1" ci="0" mb="0" cb="0"/><line nr="452" mi="4" ci="0" mb="0" cb="0"/><line nr="453" mi="1" ci="0" mb="0" cb="0"/><line nr="456" mi="3" ci="0" mb="0" cb="0"/><line nr="457" mi="1" ci="0" mb="0" cb="0"/><line nr="460" mi="3" ci="0" mb="0" cb="0"/><line nr="461" mi="1" ci="0" mb="0" cb="0"/><line nr="465" mi="5" ci="0" mb="0" cb="0"/><line nr="466" mi="3" ci="0" mb="0" cb="0"/><line nr="470" mi="5" ci="0" mb="0" cb="0"/><line nr="471" mi="3" ci="0" mb="0" cb="0"/><line nr="478" mi="3" ci="0" mb="0" cb="0"/><line nr="486" mi="3" ci="0" mb="0" cb="0"/><line nr="493" mi="3" ci="0" mb="0" cb="0"/><line nr="500" mi="3" ci="0" mb="0" cb="0"/><line nr="507" mi="3" ci="0" mb="0" cb="0"/><line nr="514" mi="3" ci="0" mb="0" cb="0"/><line nr="518" mi="4" ci="0" mb="0" cb="0"/><line nr="522" mi="4" ci="0" mb="0" cb="0"/><line nr="529" mi="0" ci="3" mb="0" cb="0"/><line nr="536" mi="4" ci="0" mb="0" cb="0"/><line nr="543" mi="3" ci="0" mb="0" cb="0"/><line nr="550" mi="3" ci="0" mb="0" cb="0"/><line nr="557" mi="0" ci="3" mb="0" cb="0"/><line nr="564" mi="0" ci="3" mb="0" cb="0"/><line nr="571" mi="0" ci="3" mb="0" cb="0"/><line nr="578" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="227" covered="157"/><counter type="LINE" missed="64" covered="24"/><counter type="COMPLEXITY" missed="58" covered="24"/><counter type="METHOD" missed="58" covered="24"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ManipulationOptions.java"><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="74" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="11" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="80" mi="0" ci="8" mb="0" cb="0"/><line nr="98" mi="0" ci="3" mb="0" cb="0"/><line nr="99" mi="0" ci="1" mb="0" cb="0"/><line nr="100" mi="0" ci="1" mb="0" cb="0"/><line nr="101" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityDoubleSupport.java"><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="37" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="EnvironmentImpl.java"><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="50" mi="0" ci="3" mb="0" cb="0"/><line nr="51" mi="0" ci="3" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="72" mi="0" ci="6" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="0" ci="3" mb="0" cb="0"/><line nr="87" mi="0" ci="10" mb="0" cb="0"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="93" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="2" ci="11" mb="1" cb="1"/><line nr="95" mi="2" ci="11" mb="1" cb="1"/><line nr="96" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="2" cb="0"/><line nr="105" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="2" cb="0"/><line nr="108" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="3" ci="0" mb="0" cb="0"/><line nr="111" mi="3" ci="0" mb="2" cb="0"/><line nr="112" mi="3" ci="0" mb="2" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="115" mi="6" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="3" ci="0" mb="2" cb="0"/><line nr="119" mi="3" ci="0" mb="2" cb="0"/><line nr="120" mi="2" ci="0" mb="0" cb="0"/><line nr="122" mi="6" ci="0" mb="2" cb="0"/><line nr="123" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="2" ci="0" mb="0" cb="0"/><line nr="130" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="74" covered="78"/><counter type="BRANCH" missed="20" covered="2"/><counter type="LINE" missed="19" covered="16"/><counter type="COMPLEXITY" missed="13" covered="9"/><counter type="METHOD" missed="2" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensoricBooleanExpressions.java"><line nr="17" mi="4" ci="0" mb="0" cb="0"/><line nr="18" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="6" ci="0" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="49" mi="4" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="45" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TensoricDoubles.java"><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="4" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="5" ci="0" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="5" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="4" mb="0" cb="0"/><line nr="121" mi="5" ci="0" mb="0" cb="0"/><line nr="125" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="133" mi="4" ci="0" mb="0" cb="0"/><line nr="137" mi="4" ci="0" mb="0" cb="0"/><line nr="141" mi="0" ci="4" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="4" mb="0" cb="0"/><line nr="153" mi="0" ci="4" mb="0" cb="0"/><line nr="157" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="4" ci="0" mb="0" cb="0"/><line nr="165" mi="0" ci="5" mb="0" cb="0"/><line nr="170" mi="5" ci="0" mb="0" cb="0"/><line nr="174" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="182" mi="4" ci="0" mb="0" cb="0"/><line nr="186" mi="4" ci="0" mb="0" cb="0"/><line nr="190" mi="4" ci="0" mb="0" cb="0"/><line nr="195" mi="0" ci="4" mb="0" cb="0"/><line nr="199" mi="4" ci="0" mb="0" cb="0"/><line nr="204" mi="4" ci="0" mb="0" cb="0"/><line nr="208" mi="4" ci="0" mb="0" cb="0"/><line nr="212" mi="0" ci="4" mb="0" cb="0"/><line nr="216" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="0" ci="4" mb="0" cb="0"/><line nr="224" mi="6" ci="0" mb="0" cb="0"/><line nr="229" mi="6" ci="0" mb="0" cb="0"/><line nr="233" mi="5" ci="0" mb="0" cb="0"/><line nr="237" mi="4" ci="0" mb="0" cb="0"/><line nr="242" mi="4" ci="0" mb="0" cb="0"/><line nr="246" mi="0" ci="4" mb="0" cb="0"/><line nr="250" mi="0" ci="4" mb="0" cb="0"/><line nr="255" mi="4" ci="0" mb="0" cb="0"/><line nr="259" mi="4" ci="0" mb="0" cb="0"/><line nr="263" mi="0" ci="4" mb="0" cb="0"/><line nr="267" mi="5" ci="0" mb="0" cb="0"/><line nr="271" mi="5" ci="0" mb="0" cb="0"/><line nr="275" mi="5" ci="0" mb="0" cb="0"/><line nr="279" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="180" covered="58"/><counter type="LINE" missed="40" covered="14"/><counter type="COMPLEXITY" missed="40" covered="14"/><counter type="METHOD" missed="40" covered="14"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensoricDoubleExpressions.java"><line nr="25" mi="3" ci="0" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="30" mi="4" ci="0" mb="0" cb="0"/><line nr="34" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="4" ci="0" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="58" mi="4" ci="0" mb="0" cb="0"/><line nr="62" mi="4" ci="0" mb="0" cb="0"/><line nr="66" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="4" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="4" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="82" mi="4" ci="0" mb="0" cb="0"/><line nr="87" mi="4" ci="0" mb="0" cb="0"/><line nr="92" mi="4" ci="0" mb="0" cb="0"/><line nr="96" mi="4" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="0" cb="0"/><line nr="111" mi="5" ci="0" mb="0" cb="0"/><line nr="115" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="4" ci="0" mb="0" cb="0"/><line nr="124" mi="4" ci="0" mb="0" cb="0"/><line nr="129" mi="4" ci="0" mb="0" cb="0"/><line nr="134" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="87" covered="25"/><counter type="LINE" missed="21" covered="6"/><counter type="COMPLEXITY" missed="21" covered="6"/><counter type="METHOD" missed="21" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensoricDoubleExpressionSupport.java"><line nr="12" mi="0" ci="6" mb="0" cb="0"/><line nr="13" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensoricTask.java"><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="4"/><counter type="LINE" missed="1" covered="2"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="1305" covered="679"/><counter type="BRANCH" missed="34" covered="4"/><counter type="LINE" missed="259" covered="140"/><counter type="COMPLEXITY" missed="236" covered="99"/><counter type="METHOD" missed="217" covered="99"/><counter type="CLASS" missed="2" covered="15"/></package><package name="org/tensorics/core/scalar/lang"><class name="org/tensorics/core/scalar/lang/OngoingDeferredBinaryOperation" sourcefilename="OngoingDeferredBinaryOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;Lorg/tensorics/core/tree/domain/Expression;)V" line="44"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="54"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="58"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="62"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="times" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="66"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="times" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="70"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dividedBy" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dividedBy" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="78"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toThePowerOf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="82"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toThePowerOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="86"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="root" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="90"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="root" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="94"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/expressions/UnaryOperationExpression;" line="98"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="49"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/scalar/lang/ScalarExpressionSupport" sourcefilename="ScalarExpressionSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negativeOf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="43"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="47"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="51"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="55"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="field" desc="()Lorg/tensorics/core/math/ExtendedField;" line="59"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="zero" desc="()Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="two" desc="()Ljava/lang/Object;" line="67"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="one" desc="()Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="squareRootOf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="squareRootOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="79"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="squareOf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="squareOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="87"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculate" desc="(Ljava/lang/Object;)Lorg/tensorics/core/scalar/lang/OngoingDeferredBinaryOperation;" line="91"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/scalar/lang/OngoingDeferredBinaryOperation;" line="95"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testIf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/scalar/lang/OngoingDeferredBinaryPredicate;" line="99"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="64" covered="28"/><counter type="LINE" missed="11" covered="7"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="11" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/scalar/lang/OngoingDeferredBinaryPredicate" sourcefilename="OngoingDeferredBinaryPredicate.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;Lorg/tensorics/core/tree/domain/Expression;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLessThan" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="47"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLessOrEqualThan" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="51"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isGreaterThan" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="55"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isGreaterOrEqualThan" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="59"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEqualTo" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="63"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isLessThan" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="67"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLessOrEqualThan" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="71"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isGreaterThan" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="75"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isGreaterOrEqualThan" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="79"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isEqualTo" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/Expression;" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="24"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="8" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/scalar/lang/ScalarSupport" sourcefilename="ScalarSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Ljava/lang/Object;)Lorg/tensorics/core/commons/lang/OngoingBinaryOperation;" line="47"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="testIf" desc="(Ljava/lang/Object;)Lorg/tensorics/core/scalar/lang/OngoingScalarBinaryPredicate;" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negativeOf" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="56"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="inverseOf" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="61"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="zero" desc="()Ljava/lang/Object;" line="65"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="two" desc="()Ljava/lang/Object;" line="69"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="one" desc="()Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="countOf" desc="(I)Ljava/lang/Object;" line="77"><counter type="INSTRUCTION" missed="21" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="squareRootOf" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="squareOf" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="absoluteValueOf" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="97"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="field" desc="()Lorg/tensorics/core/math/ExtendedField;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="33" covered="59"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="12"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/scalar/lang/OngoingScalarBinaryOperation" sourcefilename="OngoingScalarBinaryOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExtendedField;Ljava/lang/Object;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="48"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="times" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="58"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dividedBy" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toThePowerOf" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="68"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="root" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="73"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="addition" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="77"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="subtraction" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="81"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="multiplication" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="85"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="division" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="89"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="power" desc="()Lorg/tensorics/core/math/operations/BinaryOperation;" line="93"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/scalar/lang/OngoingScalarBinaryPredicate" sourcefilename="OngoingScalarBinaryPredicate.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/ExplicitField;Ljava/lang/Object;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isEqualTo" desc="(Ljava/lang/Object;)Z" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLessThan" desc="(Ljava/lang/Object;)Z" line="49"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isLessOrEqualTo" desc="(Ljava/lang/Object;)Z" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGreaterThan" desc="(Ljava/lang/Object;)Z" line="57"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isGreaterOrEqualTo" desc="(Ljava/lang/Object;)Z" line="61"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ScalarExpressionSupport.java"><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="47" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="5" ci="0" mb="0" cb="0"/><line nr="55" mi="8" ci="0" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="4" ci="0" mb="0" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="8" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="87" mi="8" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="0"/><line nr="95" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="64" covered="28"/><counter type="LINE" missed="11" covered="7"/><counter type="COMPLEXITY" missed="11" covered="5"/><counter type="METHOD" missed="11" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ScalarSupport.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="7" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="61" mi="6" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="4" mb="0" cb="0"/><line nr="69" mi="0" ci="8" mb="0" cb="0"/><line nr="73" mi="0" ci="4" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="7" ci="0" mb="2" cb="0"/><line nr="80" mi="6" ci="0" mb="0" cb="0"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="92" mi="0" ci="7" mb="0" cb="0"/><line nr="97" mi="0" ci="6" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="33" covered="59"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="7" covered="12"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="3" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingDeferredBinaryOperation.java"><line nr="44" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="10" mb="0" cb="0"/><line nr="58" mi="5" ci="0" mb="0" cb="0"/><line nr="62" mi="10" ci="0" mb="0" cb="0"/><line nr="66" mi="5" ci="0" mb="0" cb="0"/><line nr="70" mi="10" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="0" ci="10" mb="0" cb="0"/><line nr="82" mi="0" ci="5" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="0" cb="0"/><line nr="94" mi="12" ci="0" mb="0" cb="0"/><line nr="98" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="49"/><counter type="LINE" missed="8" covered="9"/><counter type="COMPLEXITY" missed="8" covered="6"/><counter type="METHOD" missed="8" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingDeferredBinaryPredicate.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="10" mb="0" cb="0"/><line nr="51" mi="10" ci="0" mb="0" cb="0"/><line nr="55" mi="10" ci="0" mb="0" cb="0"/><line nr="59" mi="10" ci="0" mb="0" cb="0"/><line nr="63" mi="10" ci="0" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="75" mi="5" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="24"/><counter type="LINE" missed="8" covered="6"/><counter type="COMPLEXITY" missed="8" covered="3"/><counter type="METHOD" missed="8" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingScalarBinaryPredicate.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="8" mb="0" cb="0"/><line nr="49" mi="0" ci="8" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="49"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="6"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingScalarBinaryOperation.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="48" mi="0" ci="7" mb="0" cb="0"/><line nr="53" mi="0" ci="7" mb="0" cb="0"/><line nr="58" mi="0" ci="7" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="0"/><line nr="68" mi="0" ci="7" mb="0" cb="0"/><line nr="73" mi="0" ci="11" mb="0" cb="0"/><line nr="77" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="93" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="75"/><counter type="LINE" missed="0" covered="15"/><counter type="COMPLEXITY" missed="0" covered="12"/><counter type="METHOD" missed="0" covered="12"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="217" covered="284"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="34" covered="58"/><counter type="COMPLEXITY" missed="31" covered="42"/><counter type="METHOD" missed="30" covered="42"/><counter type="CLASS" missed="0" covered="6"/></package><package name="org/tensorics/core/tensorbacked"><class name="org/tensorics/core/tensorbacked/OngoingTensorbackedCompletion" sourcefilename="OngoingTensorbackedCompletion.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)V" line="37"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="42"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="47"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="with" desc="(Lorg/tensorics/core/tensor/Shape;Ljava/lang/Object;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="51"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensorbacked/AbstractTensorbacked" sourcefilename="AbstractTensorbacked.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tensor" desc="()Lorg/tensorics/core/tensor/Tensor;" line="52"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="57"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="65"><counter type="INSTRUCTION" missed="11" covered="26"/><counter type="BRANCH" missed="6" covered="6"/><counter type="LINE" missed="5" covered="8"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="87"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="29" covered="55"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="6" covered="16"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/SimpleTensorbackedBuilder" sourcefilename="SimpleTensorbackedBuilder.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Ljava/util/Map$Entry;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="61"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lorg/tensorics/core/tensor/Position;Ljava/lang/Object;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="66"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Ljava/util/Set;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="71"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensor/Position;Ljava/util/Map;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="78"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensor/Position;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="83"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensor/Position;Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="88"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="93"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="98"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="putAll" desc="(Ljava/util/Map;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="103"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="remove" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="108"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="context" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="113"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="context" desc="([Ljava/lang/Object;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="118"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="128"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="66" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="17" covered="13"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/ProxiedInterfaceTensorbackeds" sourcefilename="ProxiedInterfaceTensorbackeds.java"><method name="create" desc="(Ljava/lang/Class;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="26"><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tensorbackedInterfaceFrom" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Ljava/util/Optional;" line="35"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokationHandlerFrom" desc="(Ljava/lang/Object;)Ljava/util/Optional;" line="39"><counter type="INSTRUCTION" missed="2" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callHandlerFor" desc="(Ljava/lang/Class;Ljava/lang/reflect/Method;)Lorg/tensorics/core/tensorbacked/ProxiedInterfaceTensorbackeds$MethodCallHandler;" line="122"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMethodHandle" desc="(Ljava/lang/Class;Ljava/lang/reflect/Method;)Ljava/lang/invoke/MethodHandle;" line="127"><counter type="INSTRUCTION" missed="46" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="8" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$callHandlerFor$1" desc="(Ljava/lang/invoke/MethodHandle;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;" line="123"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$tensorbackedInterfaceFrom$0" desc="(Lorg/tensorics/core/tensorbacked/ProxiedInterfaceTensorbackeds$DelegatingInvocationHandler;)Ljava/lang/Class;" line="35"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="48" covered="86"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="9" covered="15"/><counter type="COMPLEXITY" missed="2" covered="9"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/TensorbackedBuilder" sourcefilename="TensorbackedBuilder.java"/><class name="org/tensorics/core/tensorbacked/Tensorbacked" sourcefilename="Tensorbacked.java"/><class name="org/tensorics/core/tensorbacked/ProxiedInterfaceTensorbackeds$DelegatingInvocationHandler" sourcefilename="ProxiedInterfaceTensorbackeds.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/lang/Class;)V" line="55"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invoke" desc="(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;" line="63"><counter type="INSTRUCTION" missed="25" covered="60"/><counter type="BRANCH" missed="11" covered="11"/><counter type="LINE" missed="3" covered="10"/><counter type="COMPLEXITY" missed="9" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="88"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="93"><counter type="INSTRUCTION" missed="8" covered="34"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="4" covered="7"/><counter type="COMPLEXITY" missed="5" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="112"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="64" covered="109"/><counter type="BRANCH" missed="16" covered="18"/><counter type="LINE" missed="9" covered="21"/><counter type="COMPLEXITY" missed="16" covered="6"/><counter type="METHOD" missed="2" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/Tensorbackeds" sourcefilename="Tensorbackeds.java"><method name="builderFor" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/SimpleTensorbackedBuilder;" line="65"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderForScalar" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/TensorbackedScalarBuilder;" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builderFor1D" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked1dBuilder;" line="73"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderFor2D" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked2dBuilder;" line="77"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="builderFor3D" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked3dBuilder;" line="81"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builderFor4D" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked4dBuilder;" line="85"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builderFor5D" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/dimtyped/Tensorbacked5dBuilder;" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="dimensionsOf" desc="(Ljava/lang/Class;)Ljava/util/Set;" line="101"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sizeOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)I" line="112"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensionalityOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)I" line="123"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="empty" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="134"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="construct" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/lang/OngoingTensorbackedConstruction;" line="155"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="validitiesOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/Tensor;" line="167"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valuesOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/Tensor;" line="178"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="errorsOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/Tensor;" line="189"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="unitOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/units/Unit;" line="200"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="positionsOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Ljava/util/Set;" line="210"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shapeOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/Shape;" line="220"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="shapesOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Iterable;" line="232"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="flatten" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/lang/OngoingFlattening;" line="243"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="tensorsOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Iterable;" line="255"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="complete" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/OngoingTensorbackedCompletion;" line="265"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mergeTo" desc="(Ljava/lang/Iterable;Ljava/lang/Class;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="282"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="stripContext" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="286"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="setContext" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="291"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="filter" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/lang/OngoingTensorbackedFiltering;" line="295"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="94" covered="33"/><counter type="LINE" missed="20" covered="7"/><counter type="COMPLEXITY" missed="19" covered="7"/><counter type="METHOD" missed="19" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/TensorbackedInternals" sourcefilename="TensorbackedInternals.java"><method name="dimensionsOf" desc="(Ljava/lang/Class;)Ljava/util/Set;" line="68"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="dimensionListFrom" desc="(Ljava/lang/Class;)Ljava/util/List;" line="72"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createBackedByTensor" desc="(Ljava/lang/Class;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="98"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createByConstructor" desc="(Ljava/lang/Class;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="107"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="verifyDimensions" desc="(Ljava/lang/Class;Lorg/tensorics/core/tensor/Tensor;)V" line="111"><counter type="INSTRUCTION" missed="0" covered="30"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="tensorsOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Iterable;" line="121"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="shapesOf" desc="(Ljava/lang/Iterable;)Ljava/lang/Iterable;" line="129"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="classOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Ljava/lang/Class;" line="134"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ensureExactTensorbackedDimensions" desc="(Ljava/lang/Class;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="149"><counter type="INSTRUCTION" missed="4" covered="14"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="copyWithDimensions" desc="(Lorg/tensorics/core/tensor/Tensor;Ljava/util/Set;)Lorg/tensorics/core/tensor/Tensor;" line="159"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueTypeFrom" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="173"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$shapesOf$0" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensor/Shape;" line="129"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="31" covered="187"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="6" covered="35"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/ProxiedInterfaceTensorbackeds$MethodCallHandler" sourcefilename="ProxiedInterfaceTensorbackeds.java"/><sourcefile name="OngoingTensorbackedCompletion.java"><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="6" ci="0" mb="0" cb="0"/><line nr="39" mi="1" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="6" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="51" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="LINE" missed="7" covered="0"/><counter type="COMPLEXITY" missed="4" covered="0"/><counter type="METHOD" missed="4" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Tensorbacked.java"/><sourcefile name="AbstractTensorbacked.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="2" mb="0" cb="0"/><line nr="59" mi="2" ci="11" mb="1" cb="1"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="2"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="68" mi="0" ci="2" mb="1" cb="1"/><line nr="69" mi="2" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="5" mb="1" cb="1"/><line nr="72" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="0" ci="3" mb="0" cb="0"/><line nr="75" mi="0" ci="3" mb="1" cb="1"/><line nr="76" mi="3" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="6" mb="1" cb="1"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="0" ci="2" mb="0" cb="0"/><line nr="87" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="29" covered="55"/><counter type="BRANCH" missed="7" covered="7"/><counter type="LINE" missed="6" covered="16"/><counter type="COMPLEXITY" missed="7" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorbackedInternals.java"><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="4" mb="0" cb="2"/><line nr="73" mi="0" ci="4" mb="0" cb="2"/><line nr="74" mi="0" ci="22" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="80" mi="0" ci="2" mb="0" cb="2"/><line nr="81" mi="0" ci="22" mb="0" cb="0"/><line nr="85" mi="0" ci="4" mb="0" cb="0"/><line nr="98" mi="0" ci="4" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="4" mb="0" cb="0"/><line nr="102" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="10" mb="0" cb="0"/><line nr="111" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="4" mb="0" cb="0"/><line nr="114" mi="0" ci="4" mb="0" cb="2"/><line nr="115" mi="0" ci="18" mb="0" cb="0"/><line nr="118" mi="0" ci="1" mb="0" cb="0"/><line nr="121" mi="0" ci="4" mb="0" cb="0"/><line nr="122" mi="0" ci="10" mb="0" cb="2"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="124" mi="0" ci="1" mb="0" cb="0"/><line nr="125" mi="0" ci="2" mb="0" cb="0"/><line nr="129" mi="12" ci="0" mb="0" cb="0"/><line nr="134" mi="0" ci="3" mb="0" cb="0"/><line nr="135" mi="0" ci="3" mb="0" cb="2"/><line nr="136" mi="0" ci="4" mb="0" cb="0"/><line nr="138" mi="0" ci="3" mb="0" cb="0"/><line nr="149" mi="0" ci="3" mb="0" cb="0"/><line nr="150" mi="0" ci="3" mb="0" cb="0"/><line nr="151" mi="0" ci="6" mb="1" cb="1"/><line nr="152" mi="0" ci="2" mb="0" cb="0"/><line nr="154" mi="4" ci="0" mb="0" cb="0"/><line nr="159" mi="3" ci="0" mb="0" cb="0"/><line nr="160" mi="4" ci="0" mb="0" cb="0"/><line nr="161" mi="5" ci="0" mb="0" cb="0"/><line nr="162" mi="3" ci="0" mb="0" cb="0"/><line nr="173" mi="0" ci="3" mb="0" cb="0"/><line nr="174" mi="0" ci="7" mb="0" cb="0"/><line nr="175" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="31" covered="187"/><counter type="BRANCH" missed="1" covered="15"/><counter type="LINE" missed="6" covered="35"/><counter type="COMPLEXITY" missed="4" covered="16"/><counter type="METHOD" missed="3" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ProxiedInterfaceTensorbackeds.java"><line nr="26" mi="0" ci="3" mb="0" cb="2"/><line nr="27" mi="0" ci="14" mb="0" cb="0"/><line nr="30" mi="0" ci="16" mb="0" cb="0"/><line nr="35" mi="0" ci="8" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="3" mb="0" cb="0"/><line nr="44" mi="0" ci="3" mb="1" cb="1"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="63" mi="0" ci="3" mb="0" cb="2"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="11" mb="1" cb="3"/><line nr="69" mi="0" ci="7" mb="2" cb="2"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="73" mi="2" ci="5" mb="3" cb="1"/><line nr="74" mi="3" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="5" mb="3" cb="1"/><line nr="77" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="0" ci="9" mb="2" cb="2"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="83" mi="14" ci="0" mb="0" cb="0"/><line nr="88" mi="14" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="3" mb="1" cb="1"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="96" mi="0" ci="2" mb="1" cb="1"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="1" cb="1"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="103" mi="0" ci="3" mb="1" cb="1"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="106" mi="0" ci="4" mb="0" cb="0"/><line nr="107" mi="0" ci="16" mb="1" cb="3"/><line nr="112" mi="17" ci="0" mb="0" cb="0"/><line nr="122" mi="0" ci="4" mb="0" cb="0"/><line nr="123" mi="0" ci="9" mb="0" cb="0"/><line nr="127" mi="0" ci="3" mb="0" cb="0"/><line nr="134" mi="0" ci="2" mb="1" cb="1"/><line nr="136" mi="0" ci="7" mb="0" cb="0"/><line nr="137" mi="0" ci="5" mb="0" cb="0"/><line nr="138" mi="1" ci="0" mb="0" cb="0"/><line nr="139" mi="5" ci="0" mb="0" cb="0"/><line nr="143" mi="11" ci="0" mb="0" cb="0"/><line nr="144" mi="2" ci="0" mb="0" cb="0"/><line nr="145" mi="3" ci="0" mb="0" cb="0"/><line nr="147" mi="18" ci="0" mb="0" cb="0"/><line nr="149" mi="1" ci="0" mb="0" cb="0"/><line nr="151" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="112" covered="195"/><counter type="BRANCH" missed="18" covered="24"/><counter type="LINE" missed="18" covered="36"/><counter type="COMPLEXITY" missed="18" covered="15"/><counter type="METHOD" missed="2" covered="10"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="TensorbackedBuilder.java"/><sourcefile name="SimpleTensorbackedBuilder.java"><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="5" mb="0" cb="0"/><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="2"/><line nr="72" mi="0" ci="5" mb="0" cb="0"/><line nr="73" mi="0" ci="1" mb="0" cb="0"/><line nr="74" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="6" ci="0" mb="0" cb="0"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="83" mi="6" ci="0" mb="0" cb="0"/><line nr="84" mi="2" ci="0" mb="0" cb="0"/><line nr="88" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="6" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="5" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="103" mi="5" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="108" mi="5" ci="0" mb="0" cb="0"/><line nr="109" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="5" ci="0" mb="0" cb="0"/><line nr="114" mi="2" ci="0" mb="0" cb="0"/><line nr="118" mi="5" ci="0" mb="0" cb="0"/><line nr="128" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="66" covered="51"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="17" covered="13"/><counter type="COMPLEXITY" missed="9" covered="6"/><counter type="METHOD" missed="9" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Tensorbackeds.java"><line nr="65" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="0" ci="5" mb="0" cb="0"/><line nr="77" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="5" ci="0" mb="0" cb="0"/><line nr="85" mi="5" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="112" mi="0" ci="5" mb="0" cb="0"/><line nr="123" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="4" ci="0" mb="0" cb="0"/><line nr="155" mi="0" ci="5" mb="0" cb="0"/><line nr="167" mi="4" ci="0" mb="0" cb="0"/><line nr="178" mi="4" ci="0" mb="0" cb="0"/><line nr="189" mi="4" ci="0" mb="0" cb="0"/><line nr="200" mi="4" ci="0" mb="0" cb="0"/><line nr="210" mi="5" ci="0" mb="0" cb="0"/><line nr="220" mi="4" ci="0" mb="0" cb="0"/><line nr="232" mi="3" ci="0" mb="0" cb="0"/><line nr="243" mi="4" ci="0" mb="0" cb="0"/><line nr="255" mi="3" ci="0" mb="0" cb="0"/><line nr="265" mi="5" ci="0" mb="0" cb="0"/><line nr="282" mi="5" ci="0" mb="0" cb="0"/><line nr="286" mi="8" ci="0" mb="0" cb="0"/><line nr="287" mi="2" ci="0" mb="0" cb="0"/><line nr="291" mi="10" ci="0" mb="0" cb="0"/><line nr="295" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="94" covered="33"/><counter type="LINE" missed="20" covered="7"/><counter type="COMPLEXITY" missed="19" covered="7"/><counter type="METHOD" missed="19" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="364" covered="521"/><counter type="BRANCH" missed="26" covered="48"/><counter type="LINE" missed="74" covered="107"/><counter type="COMPLEXITY" missed="61" covered="49"/><counter type="METHOD" missed="38" covered="35"/><counter type="CLASS" missed="1" covered="6"/></package><package name="org/tensorics/core/tensorbacked/lang"><class name="org/tensorics/core/tensorbacked/lang/TensorbackedSupport" sourcefilename="TensorbackedSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;)V" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="51"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/lang/OngoingTensorBackedOperation;" line="62"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/lang/OngoingDeferredQuantifiedTensorBackedOperation" sourcefilename="OngoingDeferredQuantifiedTensorBackedOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/operations/QuantityOperationRepository;Ljava/lang/Class;Lorg/tensorics/core/tree/domain/Expression;)V" line="55"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tree/domain/Expression;" line="62"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="66"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tree/domain/Expression;" line="70"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="74"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementwise" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="78"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementwise" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="83"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="options" desc="()Lorg/tensorics/core/commons/options/OptionRegistry;" line="87"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensorbacked/lang/QuantityTensorbackedExpressionSupport" sourcefilename="QuantityTensorbackedExpressionSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="46"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementNegativeOfTB" desc="(Ljava/lang/Class;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="52"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateTB" desc="(Ljava/lang/Class;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tensorbacked/lang/OngoingDeferredQuantifiedTensorBackedOperation;" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="17" covered="9"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/lang/OngoingTensorBackedOperation" sourcefilename="OngoingTensorBackedOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Lorg/tensorics/core/tensorbacked/Tensorbacked;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="67"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plusT" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="71"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minus" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="76"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minusT" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="80"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementTimes" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementTimesT" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="104"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementTimesV" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="109"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementDividedBy" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="114"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementDividedByT" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="125"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementDividedByV" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="130"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/math/operations/BinaryOperation;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="134"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plusV" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="141"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minusV" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="146"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="77"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/lang/OngoingTensorbackedFiltering" sourcefilename="OngoingTensorbackedFiltering.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)V" line="35"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="by" desc="(Ljava/lang/Class;Lcom/google/common/collect/Range;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="40"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensorbacked/lang/TensorbackedExpressionSupport" sourcefilename="TensorbackedExpressionSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementNegativeOfTB" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="46"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="calculateTB" desc="(Ljava/lang/Class;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tensorbacked/lang/OngoingDeferredTensorBackedOperation;" line="52"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="20" covered="6"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/lang/QuantityTensorbackedSupport" sourcefilename="QuantityTensorbackedSupport.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/options/QuantityEnvironment;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="calculate" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/lang/OngoingQuantifiedTensorBackedOperation;" line="51"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="negativeOf" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="55"><counter type="INSTRUCTION" missed="0" covered="17"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/lang/OngoingDeferredTensorBackedOperation" sourcefilename="OngoingDeferredTensorBackedOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/Environment;Ljava/lang/Class;Lorg/tensorics/core/tree/domain/Expression;)V" line="54"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tree/domain/Expression;" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="plus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="65"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tree/domain/Expression;" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="73"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementBinaryExpression" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="77"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementwise" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Lorg/tensorics/core/tree/domain/Expression;Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/tree/domain/Expression;" line="82"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tensorbacked/lang/OngoingTensorbackedConstruction" sourcefilename="OngoingTensorbackedConstruction.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;)V" line="41"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="from" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="46"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byMerging" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="50"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byMergingTb" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="54"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="fromMap" desc="(Ljava/util/Map;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="58"><counter type="INSTRUCTION" missed="0" covered="14"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensorbacked/lang/OngoingQuantifiedTensorBackedOperation" sourcefilename="OngoingQuantifiedTensorBackedOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/quantity/operations/QuantityOperationRepository;Lorg/tensorics/core/tensorbacked/Tensorbacked;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plus" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="60"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plusQT" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="plusV" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="69"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="74"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minusQT" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="78"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minusV" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="83"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="elementTimes" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="88"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementTimesV" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="93"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementTimesQT" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="97"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementDividedBy" desc="(Lorg/tensorics/core/tensorbacked/Tensorbacked;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="102"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementDividedByQT" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="106"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="elementDividedByV" desc="(Lorg/tensorics/core/quantity/QuantifiedValue;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="111"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="evaluate" desc="(Lorg/tensorics/core/tensor/Tensor;Lorg/tensorics/core/math/operations/BinaryOperation;)Lorg/tensorics/core/tensorbacked/Tensorbacked;" line="115"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="22" covered="81"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OngoingTensorbackedConstruction.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="6" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="5" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><line nr="59" mi="0" ci="6" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="38"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingDeferredTensorBackedOperation.java"><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="65" mi="8" ci="0" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="73" mi="8" ci="0" mb="0" cb="0"/><line nr="77" mi="12" ci="0" mb="0" cb="0"/><line nr="82" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="58" covered="0"/><counter type="LINE" missed="11" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="QuantityTensorbackedExpressionSupport.java"><line nr="46" mi="0" ci="2" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="9" ci="0" mb="0" cb="0"/><line nr="57" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="9"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingQuantifiedTensorBackedOperation.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="69" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="5" ci="0" mb="0" cb="0"/><line nr="78" mi="7" ci="0" mb="0" cb="0"/><line nr="83" mi="5" ci="0" mb="0" cb="0"/><line nr="88" mi="0" ci="8" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="97" mi="0" ci="7" mb="0" cb="0"/><line nr="102" mi="0" ci="8" mb="0" cb="0"/><line nr="106" mi="0" ci="7" mb="0" cb="0"/><line nr="111" mi="0" ci="5" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="0" ci="9" mb="0" cb="0"/><line nr="117" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="22" covered="81"/><counter type="LINE" missed="4" covered="15"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="QuantityTensorbackedSupport.java"><line nr="45" mi="0" ci="3" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="7" mb="0" cb="0"/><line nr="55" mi="0" ci="7" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="57" mi="0" ci="3" mb="0" cb="0"/><line nr="58" mi="0" ci="4" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="34"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorbackedExpressionSupport.java"><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="0" cb="0"/><line nr="43" mi="0" ci="1" mb="0" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><line nr="47" mi="5" ci="0" mb="0" cb="0"/><line nr="52" mi="8" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="20" covered="6"/><counter type="LINE" missed="3" covered="3"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="2" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingTensorbackedFiltering.java"><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="3" ci="0" mb="0" cb="0"/><line nr="37" mi="1" ci="0" mb="0" cb="0"/><line nr="40" mi="7" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="OngoingDeferredQuantifiedTensorBackedOperation.java"><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="3" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><line nr="59" mi="1" ci="0" mb="0" cb="0"/><line nr="62" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="7" ci="0" mb="0" cb="0"/><line nr="70" mi="5" ci="0" mb="0" cb="0"/><line nr="74" mi="7" ci="0" mb="0" cb="0"/><line nr="78" mi="12" ci="0" mb="0" cb="0"/><line nr="83" mi="7" ci="0" mb="0" cb="0"/><line nr="87" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="60" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="8" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="TensorbackedSupport.java"><line nr="39" mi="0" ci="2" mb="0" cb="0"/><line nr="40" mi="0" ci="3" mb="0" cb="0"/><line nr="41" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="9" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><line nr="62" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingTensorBackedOperation.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="71" mi="0" ci="8" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="80" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="0" ci="5" mb="0" cb="0"/><line nr="104" mi="0" ci="8" mb="0" cb="0"/><line nr="109" mi="0" ci="5" mb="0" cb="0"/><line nr="114" mi="0" ci="5" mb="0" cb="0"/><line nr="125" mi="0" ci="8" mb="0" cb="0"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="134" mi="0" ci="13" mb="0" cb="0"/><line nr="136" mi="0" ci="6" mb="0" cb="0"/><line nr="141" mi="5" ci="0" mb="0" cb="0"/><line nr="146" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="77"/><counter type="LINE" missed="4" covered="14"/><counter type="COMPLEXITY" missed="4" covered="10"/><counter type="METHOD" missed="4" covered="10"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="218" covered="268"/><counter type="LINE" missed="41" covered="58"/><counter type="COMPLEXITY" missed="29" covered="33"/><counter type="METHOD" missed="29" covered="33"/><counter type="CLASS" missed="3" covered="7"/></package><package name="org/tensorics/core/tensor/stream"><class name="org/tensorics/core/tensor/stream/AbstractTensoricCollector" sourcefilename="AbstractTensoricCollector.java"><method name="&lt;init&gt;" desc="(Ljava/util/function/Function;Ljava/util/function/Function;)V" line="53"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supplier" desc="()Ljava/util/function/Supplier;" line="60"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="accumulator" desc="()Ljava/util/function/BiConsumer;" line="65"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="combiner" desc="()Ljava/util/function/BinaryOperator;" line="75"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="characteristics" desc="()Ljava/util/Set;" line="84"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$combiner$1" desc="(Ljava/util/Map;Ljava/util/Map;)Ljava/util/Map;" line="76"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$accumulator$0" desc="(Ljava/util/Map;Ljava/lang/Object;)V" line="66"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="10" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/stream/TensorStreamMappers" sourcefilename="TensorStreamMappers.java"><method name="coordinatesOfType" desc="(Ljava/lang/Class;Ljava/util/function/Function;)Ljava/util/function/Function;" line="46"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="positions" desc="(Ljava/util/function/Function;)Ljava/util/function/Function;" line="67"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="(Ljava/util/function/Function;)Ljava/util/function/Function;" line="71"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="positions" desc="(Ljava/util/function/BiFunction;)Ljava/util/function/Function;" line="76"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="(Ljava/util/function/BiFunction;)Ljava/util/function/Function;" line="82"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$values$4" desc="(Ljava/util/function/BiFunction;Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="82"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$positions$3" desc="(Ljava/util/function/BiFunction;Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="76"><counter type="INSTRUCTION" missed="14" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$values$2" desc="(Ljava/util/function/Function;Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="71"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$positions$1" desc="(Ljava/util/function/Function;Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="67"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$coordinatesOfType$0" desc="(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/Map$Entry;)Ljava/util/Map$Entry;" line="47"><counter type="INSTRUCTION" missed="35" covered="41"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="84" covered="59"/><counter type="BRANCH" missed="2" covered="2"/><counter type="LINE" missed="8" covered="11"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/stream/TensorStreams" sourcefilename="TensorStreams.java"><method name="tensorEntryStream" desc="(Lorg/tensorics/core/tensor/Tensor;)Ljava/util/stream/Stream;" line="52"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTensor" desc="(Ljava/util/Set;)Lorg/tensorics/core/tensor/stream/TensorCollector;" line="64"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTensor" desc="(Ljava/util/function/Function;Ljava/util/function/Function;Ljava/util/Set;)Lorg/tensorics/core/tensor/stream/TensorCollector;" line="78"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTensorbacked" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/stream/TensorbackedCollector;" line="90"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toTensorbacked" desc="(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Function;)Lorg/tensorics/core/tensor/stream/TensorbackedCollector;" line="105"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="coordinatesOfType" desc="(Ljava/lang/Class;Ljava/util/function/Function;)Ljava/util/function/Function;" line="112"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="positions" desc="(Ljava/util/function/Function;)Ljava/util/function/Function;" line="117"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="(Ljava/util/function/Function;)Ljava/util/function/Function;" line="121"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="positions" desc="(Ljava/util/function/BiFunction;)Ljava/util/function/Function;" line="126"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="values" desc="(Ljava/util/function/BiFunction;)Ljava/util/function/Function;" line="131"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="23" covered="26"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/stream/TensorbackedCollector" sourcefilename="TensorbackedCollector.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/util/function/Function;Ljava/util/function/Function;)V" line="47"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finisher" desc="()Ljava/util/function/Function;" line="53"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/stream/TensorCollector" sourcefilename="TensorCollector.java"><method name="&lt;init&gt;" desc="(Ljava/util/Set;Ljava/util/function/Function;Ljava/util/function/Function;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="finisher" desc="()Ljava/util/function/Function;" line="51"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$finisher$0" desc="(Ljava/util/Map;)Lorg/tensorics/core/tensor/Tensor;" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/stream/TensorStreamFilters" sourcefilename="TensorStreamFilters.java"><method name="byCoordinateOfType" desc="(Ljava/lang/Class;Ljava/util/function/Predicate;)Ljava/util/function/Predicate;" line="45"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="byPosition" desc="(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="byValue" desc="(Ljava/util/function/Predicate;)Ljava/util/function/Predicate;" line="53"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="byPositionValue" desc="(Ljava/util/function/BiPredicate;)Ljava/util/function/Predicate;" line="57"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$byPositionValue$3" desc="(Ljava/util/function/BiPredicate;Ljava/util/Map$Entry;)Z" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$byValue$2" desc="(Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z" line="53"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$byPosition$1" desc="(Ljava/util/function/Predicate;Ljava/util/Map$Entry;)Z" line="49"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$byCoordinateOfType$0" desc="(Ljava/util/function/Predicate;Ljava/lang/Class;Ljava/util/Map$Entry;)Z" line="45"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="32" covered="8"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/stream/TensorStreamMappers$ImmutableTensorEntry" sourcefilename="TensorStreamMappers.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Position;Ljava/lang/Object;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getKey" desc="()Lorg/tensorics/core/tensor/Position;" line="97"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getValue" desc="()Ljava/lang/Object;" line="102"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setValue" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="112"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="121"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="143"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="107" covered="15"/><counter type="BRANCH" missed="22" covered="0"/><counter type="LINE" missed="25" covered="6"/><counter type="COMPLEXITY" missed="15" covered="3"/><counter type="METHOD" missed="4" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="TensorbackedCollector.java"><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorStreams.java"><line nr="52" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="7" mb="0" cb="0"/><line nr="78" mi="0" ci="7" mb="0" cb="0"/><line nr="90" mi="0" ci="7" mb="0" cb="0"/><line nr="105" mi="7" ci="0" mb="0" cb="0"/><line nr="112" mi="4" ci="0" mb="0" cb="0"/><line nr="117" mi="3" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="0" cb="0"/><line nr="126" mi="3" ci="0" mb="0" cb="0"/><line nr="131" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="23" covered="26"/><counter type="LINE" missed="6" covered="4"/><counter type="COMPLEXITY" missed="6" covered="4"/><counter type="METHOD" missed="6" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorStreamFilters.java"><line nr="45" mi="12" ci="0" mb="0" cb="0"/><line nr="49" mi="9" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="8" mb="0" cb="0"/><line nr="57" mi="11" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="32" covered="8"/><counter type="LINE" missed="3" covered="1"/><counter type="COMPLEXITY" missed="6" covered="2"/><counter type="METHOD" missed="6" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorCollector.java"><line nr="45" mi="0" ci="4" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="8" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="AbstractTensoricCollector.java"><line nr="53" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="56" mi="0" ci="1" mb="0" cb="0"/><line nr="60" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="3" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="0"/><line nr="67" mi="0" ci="8" mb="0" cb="2"/><line nr="68" mi="0" ci="12" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="75" mi="0" ci="2" mb="0" cb="0"/><line nr="76" mi="5" ci="0" mb="0" cb="0"/><line nr="77" mi="3" ci="0" mb="0" cb="0"/><line nr="78" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="10" covered="46"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="3" covered="12"/><counter type="COMPLEXITY" missed="1" covered="7"/><counter type="METHOD" missed="1" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TensorStreamMappers.java"><line nr="46" mi="0" ci="4" mb="0" cb="0"/><line nr="47" mi="0" ci="4" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="1" cb="1"/><line nr="50" mi="8" ci="0" mb="0" cb="0"/><line nr="51" mi="9" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="54" mi="0" ci="5" mb="1" cb="1"/><line nr="55" mi="8" ci="0" mb="0" cb="0"/><line nr="56" mi="10" ci="0" mb="0" cb="0"/><line nr="58" mi="0" ci="6" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="8" mb="0" cb="0"/><line nr="67" mi="15" ci="0" mb="0" cb="0"/><line nr="71" mi="0" ci="14" mb="0" cb="0"/><line nr="76" mi="15" ci="0" mb="0" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="17" ci="0" mb="0" cb="0"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="91" mi="0" ci="3" mb="0" cb="0"/><line nr="92" mi="0" ci="3" mb="0" cb="0"/><line nr="93" mi="0" ci="1" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="102" mi="0" ci="3" mb="0" cb="0"/><line nr="107" mi="5" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="113" mi="2" ci="0" mb="0" cb="0"/><line nr="114" mi="13" ci="0" mb="2" cb="0"/><line nr="115" mi="13" ci="0" mb="2" cb="0"/><line nr="116" mi="2" ci="0" mb="0" cb="0"/><line nr="121" mi="3" ci="0" mb="2" cb="0"/><line nr="122" mi="2" ci="0" mb="0" cb="0"/><line nr="123" mi="2" ci="0" mb="2" cb="0"/><line nr="124" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="5" ci="0" mb="2" cb="0"/><line nr="126" mi="2" ci="0" mb="0" cb="0"/><line nr="127" mi="3" ci="0" mb="0" cb="0"/><line nr="128" mi="3" ci="0" mb="2" cb="0"/><line nr="129" mi="3" ci="0" mb="2" cb="0"/><line nr="130" mi="2" ci="0" mb="0" cb="0"/><line nr="131" mi="6" ci="0" mb="2" cb="0"/><line nr="132" mi="2" ci="0" mb="0" cb="0"/><line nr="133" mi="3" ci="0" mb="2" cb="0"/><line nr="134" mi="3" ci="0" mb="2" cb="0"/><line nr="135" mi="2" ci="0" mb="0" cb="0"/><line nr="136" mi="6" ci="0" mb="2" cb="0"/><line nr="137" mi="2" ci="0" mb="0" cb="0"/><line nr="138" mi="2" ci="0" mb="0" cb="0"/><line nr="143" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="191" covered="74"/><counter type="BRANCH" missed="24" covered="2"/><counter type="LINE" missed="33" covered="17"/><counter type="COMPLEXITY" missed="23" covered="7"/><counter type="METHOD" missed="10" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><counter type="INSTRUCTION" missed="256" covered="186"/><counter type="BRANCH" missed="24" covered="4"/><counter type="LINE" missed="45" covered="42"/><counter type="COMPLEXITY" missed="36" covered="25"/><counter type="METHOD" missed="23" covered="24"/><counter type="CLASS" missed="0" covered="7"/></package><package name="org/tensorics/core/util"><class name="org/tensorics/core/util/SingleArgumentInvokableInstantiator" sourcefilename="SingleArgumentInvokableInstantiator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="create" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="53"><counter type="INSTRUCTION" missed="21" covered="15"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="30"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/InstantiatorType" sourcefilename="InstantiatorType.java"><method name="&lt;clinit&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/InstantiatorType$1" sourcefilename="InstantiatorType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createInstantiator" desc="(Ljava/lang/Class;Ljava/lang/Class;)Lorg/tensorics/core/util/Instantiator;" line="39"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/InstantiatorType$2" sourcefilename="InstantiatorType.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;I)V" line="42"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="createInstantiator" desc="(Ljava/lang/Class;Ljava/lang/Class;)Lorg/tensorics/core/util/Instantiator;" line="45"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/MoreMultisets" sourcefilename="MoreMultisets.java"><method name="containsNonUniqueElements" desc="(Lcom/google/common/collect/Multiset;)Z" line="15"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="nonUniqueElementsOf" desc="(Lcom/google/common/collect/Multiset;)Lcom/google/common/collect/Multiset;" line="19"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/Reflections" sourcefilename="Reflections.java"><method name="&lt;init&gt;" desc="()V" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="invokeUnchecked" desc="(Ljava/lang/Object;Ljava/lang/reflect/Method;)Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="23" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="declaredGetters" desc="(Ljava/lang/Object;)Ljava/util/List;" line="62"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="verifyAllDeclaredGettersReturnSomething" desc="(Ljava/lang/Object;)V" line="68"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="valueOfField" desc="(Ljava/lang/reflect/Field;Ljava/lang/Object;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="22" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPublicField" desc="(Ljava/lang/reflect/Field;)Z" line="85"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isFinalField" desc="(Ljava/lang/reflect/Field;)Z" line="89"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isStaticField" desc="(Ljava/lang/reflect/Field;)Z" line="93"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isPublicConstant" desc="(Ljava/lang/reflect/Field;)Z" line="97"><counter type="INSTRUCTION" missed="1" covered="15"/><counter type="BRANCH" missed="3" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isSerialVersionUid" desc="(Ljava/lang/reflect/Field;)Z" line="102"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="valueOfStaticField" desc="(Ljava/lang/reflect/Field;)Ljava/lang/Object;" line="107"><counter type="INSTRUCTION" missed="18" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="optionalValueOfStaticField" desc="(Ljava/lang/reflect/Field;)Ljava/util/Optional;" line="115"><counter type="INSTRUCTION" missed="9" covered="5"/><counter type="LINE" missed="4" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="constantsFrom" desc="(Ljava/lang/Class;)Ljava/util/Set;" line="124"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$declaredGetters$3" desc="(Ljava/lang/reflect/Method;)Z" line="64"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$declaredGetters$2" desc="(Ljava/lang/reflect/Method;)Z" line="63"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$declaredGetters$1" desc="(Ljava/lang/reflect/Method;)Z" line="63"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="lambda$declaredGetters$0" desc="(Ljava/lang/reflect/Method;)Z" line="62"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="165" covered="39"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="26" covered="7"/><counter type="COMPLEXITY" missed="20" covered="5"/><counter type="METHOD" missed="13" covered="5"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/Instantiators" sourcefilename="Instantiators.java"><method name="instantiatorFor" desc="(Ljava/lang/Class;)Lorg/tensorics/core/util/Instantiators$OngoingInstantiatorCreation;" line="62"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/JavaVersions" sourcefilename="JavaVersions.java"><method name="&lt;init&gt;" desc="()V" line="8"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="isAtLeastJava11" desc="()Z" line="18"><counter type="INSTRUCTION" missed="1" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/Instantiators$OngoingInstantiatorCreation" sourcefilename="Instantiators.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/util/InstantiatorType;Ljava/lang/Class;)V" line="81"><counter type="INSTRUCTION" missed="0" covered="15"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofType" desc="(Lorg/tensorics/core/util/InstantiatorType;)Lorg/tensorics/core/util/Instantiators$OngoingInstantiatorCreation;" line="87"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="withArgumentType" desc="(Ljava/lang/Class;)Lorg/tensorics/core/util/Instantiator;" line="99"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="33"/><counter type="LINE" missed="0" covered="7"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/Instantiator" sourcefilename="Instantiator.java"/><class name="org/tensorics/core/util/SingleArgumentConstructorInstantiator" sourcefilename="SingleArgumentConstructorInstantiator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;)V" line="38"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokableFor" desc="(Ljava/lang/Class;)Lcom/google/common/reflect/Invokable;" line="44"><counter type="INSTRUCTION" missed="21" covered="11"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="16"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/Classes" sourcefilename="Classes.java"><method name="findGenericSuperclassOfType" desc="(Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/ParameterizedType;" line="47"><counter type="INSTRUCTION" missed="14" covered="27"/><counter type="BRANCH" missed="1" covered="5"/><counter type="LINE" missed="1" covered="8"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classesOf" desc="(Ljava/lang/Iterable;)Lcom/google/common/collect/Multiset;" line="66"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="47"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/SingleArgumentFactoryMethodInstantiator" sourcefilename="SingleArgumentFactoryMethodInstantiator.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;)V" line="49"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invokableFor" desc="(Ljava/lang/Class;)Lcom/google/common/reflect/Invokable;" line="55"><counter type="INSTRUCTION" missed="0" covered="66"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/util/SystemState" sourcefilename="SystemState.java"><method name="&lt;init&gt;" desc="(JJZ)V" line="44"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="currentTimeAfterGc" desc="()Lorg/tensorics/core/util/SystemState;" line="51"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="currentTimeBeforeGc" desc="()Lorg/tensorics/core/util/SystemState;" line="56"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="memoryUsageInByte" desc="()J" line="61"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="minus" desc="(Lorg/tensorics/core/util/SystemState;)Lorg/tensorics/core/util/SystemState;" line="69"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printTo" desc="(Ljava/io/PrintStream;)V" line="73"><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printToStdOut" desc="()V" line="78"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="prefix" desc="()Ljava/lang/String;" line="82"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMemoryUsageInKB" desc="()J" line="89"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMemoryUsageInB" desc="()J" line="93"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getTimeInMillis" desc="()J" line="97"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printStates" desc="(Ljava/util/List;)V" line="101"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="printStatesTo" desc="(Ljava/util/List;Ljava/io/PrintStream;)V" line="105"><counter type="INSTRUCTION" missed="36" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="6" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="156" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="Instantiator.java"/><sourcefile name="Reflections.java"><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="6" ci="0" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="57" mi="16" ci="0" mb="0" cb="0"/><line nr="62" mi="15" ci="0" mb="2" cb="0"/><line nr="63" mi="17" ci="0" mb="2" cb="0"/><line nr="64" mi="12" ci="0" mb="2" cb="0"/><line nr="68" mi="3" ci="0" mb="0" cb="0"/><line nr="70" mi="10" ci="0" mb="2" cb="0"/><line nr="71" mi="4" ci="0" mb="0" cb="0"/><line nr="72" mi="14" ci="0" mb="0" cb="0"/><line nr="73" mi="1" ci="0" mb="0" cb="0"/><line nr="74" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="4" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="80" mi="17" ci="0" mb="0" cb="0"/><line nr="85" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="4" ci="0" mb="0" cb="0"/><line nr="93" mi="4" ci="0" mb="0" cb="0"/><line nr="97" mi="0" ci="3" mb="0" cb="0"/><line nr="98" mi="1" ci="12" mb="3" cb="3"/><line nr="102" mi="0" ci="5" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="108" mi="1" ci="0" mb="0" cb="0"/><line nr="109" mi="13" ci="0" mb="0" cb="0"/><line nr="115" mi="0" ci="5" mb="0" cb="0"/><line nr="116" mi="1" ci="0" mb="0" cb="0"/><line nr="117" mi="5" ci="0" mb="0" cb="0"/><line nr="118" mi="1" ci="0" mb="0" cb="0"/><line nr="119" mi="2" ci="0" mb="0" cb="0"/><line nr="124" mi="0" ci="7" mb="0" cb="0"/><line nr="125" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="165" covered="39"/><counter type="BRANCH" missed="11" covered="3"/><counter type="LINE" missed="26" covered="7"/><counter type="COMPLEXITY" missed="20" covered="5"/><counter type="METHOD" missed="13" covered="5"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MoreMultisets.java"><line nr="15" mi="0" ci="10" mb="0" cb="2"/><line nr="19" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Instantiators.java"><line nr="62" mi="0" ci="6" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="83" mi="0" ci="6" mb="0" cb="0"/><line nr="84" mi="0" ci="1" mb="0" cb="0"/><line nr="87" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="4" mb="0" cb="0"/><line nr="100" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="SingleArgumentInvokableInstantiator.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="5" mb="0" cb="0"/><line nr="48" mi="0" ci="4" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="53" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="11" mb="0" cb="0"/><line nr="56" mi="1" ci="0" mb="0" cb="0"/><line nr="58" mi="20" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="30"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SingleArgumentFactoryMethodInstantiator.java"><line nr="49" mi="0" ci="4" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="18" mb="0" cb="2"/><line nr="56" mi="0" ci="9" mb="1" cb="3"/><line nr="57" mi="0" ci="11" mb="2" cb="2"/><line nr="58" mi="0" ci="6" mb="1" cb="1"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="19" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="71"/><counter type="BRANCH" missed="4" covered="8"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="4" covered="4"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Classes.java"><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="2" mb="1" cb="1"/><line nr="49" mi="14" ci="0" mb="0" cb="0"/><line nr="53" mi="0" ci="3" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="55" mi="0" ci="4" mb="0" cb="2"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="66" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="9" mb="0" cb="2"/><line nr="68" mi="0" ci="5" mb="0" cb="0"/><line nr="69" mi="0" ci="1" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="47"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="13"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="InstantiatorType.java"><line nr="35" mi="0" ci="12" mb="0" cb="0"/><line nr="36" mi="0" ci="12" mb="0" cb="0"/><line nr="39" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="12" mb="0" cb="0"/><line nr="45" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="48"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="5"/><counter type="CLASS" missed="0" covered="3"/></sourcefile><sourcefile name="SingleArgumentConstructorInstantiator.java"><line nr="38" mi="0" ci="4" mb="0" cb="0"/><line nr="39" mi="0" ci="1" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="45" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="20" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="21" covered="16"/><counter type="LINE" missed="2" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="JavaVersions.java"><line nr="8" mi="2" ci="0" mb="0" cb="0"/><line nr="9" mi="5" ci="0" mb="0" cb="0"/><line nr="18" mi="1" ci="8" mb="1" cb="1"/><counter type="INSTRUCTION" missed="8" covered="8"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="2" covered="1"/><counter type="COMPLEXITY" missed="2" covered="1"/><counter type="METHOD" missed="1" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SystemState.java"><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="3" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="1" ci="0" mb="0" cb="0"/><line nr="51" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="7" ci="0" mb="0" cb="0"/><line nr="56" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="7" ci="0" mb="0" cb="0"/><line nr="61" mi="7" ci="0" mb="2" cb="0"/><line nr="62" mi="1" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="6" ci="0" mb="0" cb="0"/><line nr="69" mi="15" ci="0" mb="0" cb="0"/><line nr="73" mi="16" ci="0" mb="0" cb="0"/><line nr="74" mi="16" ci="0" mb="0" cb="0"/><line nr="75" mi="1" ci="0" mb="0" cb="0"/><line nr="78" mi="3" ci="0" mb="0" cb="0"/><line nr="79" mi="1" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="2" cb="0"/><line nr="83" mi="2" ci="0" mb="0" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="89" mi="5" ci="0" mb="0" cb="0"/><line nr="93" mi="3" ci="0" mb="0" cb="0"/><line nr="97" mi="3" ci="0" mb="0" cb="0"/><line nr="101" mi="3" ci="0" mb="0" cb="0"/><line nr="102" mi="1" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="0" cb="0"/><line nr="106" mi="2" ci="0" mb="0" cb="0"/><line nr="107" mi="10" ci="0" mb="2" cb="0"/><line nr="108" mi="19" ci="0" mb="0" cb="0"/><line nr="109" mi="1" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="156" covered="0"/><counter type="BRANCH" missed="6" covered="0"/><counter type="LINE" missed="33" covered="0"/><counter type="COMPLEXITY" missed="16" covered="0"/><counter type="METHOD" missed="13" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="385" covered="314"/><counter type="BRANCH" missed="23" covered="21"/><counter type="LINE" missed="66" covered="54"/><counter type="COMPLEXITY" missed="43" covered="31"/><counter type="METHOD" missed="27" covered="25"/><counter type="CLASS" missed="1" covered="12"/></package><package name="org/tensorics/core/booleans/lang"><class name="org/tensorics/core/booleans/lang/OngoingBooleanTensorOperation" sourcefilename="OngoingBooleanTensorOperation.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/commons/options/OptionRegistry;Lorg/tensorics/core/tensor/Tensor;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="27"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="31"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="xor" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="35"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nand" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="39"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="perform" desc="(Lorg/tensorics/core/math/operations/BinaryFunction;Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensor;" line="44"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="44"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/booleans/lang/OngoingBooleanScalarOperation" sourcefilename="OngoingBooleanScalarOperation.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Boolean;)V" line="12"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="17"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="or" desc="(Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="21"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="xor" desc="(Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="25"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="nand" desc="(Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="29"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="perform" desc="(Lorg/tensorics/core/math/operations/BinaryOperation;Ljava/lang/Boolean;)Ljava/lang/Boolean;" line="33"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="15" covered="25"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/booleans/lang/OngoingDetection" sourcefilename="OngoingDetection.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Tensor;)V" line="21"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changesAlong" desc="(Ljava/lang/Class;)Ljava/lang/Iterable;" line="34"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="changesAlong" desc="(Ljava/lang/Class;Ljava/util/Comparator;)Ljava/lang/Iterable;" line="38"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="OngoingBooleanScalarOperation.java"><line nr="12" mi="0" ci="2" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="14" mi="0" ci="1" mb="0" cb="0"/><line nr="17" mi="0" ci="5" mb="0" cb="0"/><line nr="21" mi="5" ci="0" mb="0" cb="0"/><line nr="25" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="5" ci="0" mb="0" cb="0"/><line nr="33" mi="0" ci="4" mb="0" cb="0"/><line nr="34" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="25"/><counter type="LINE" missed="3" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingBooleanTensorOperation.java"><line nr="20" mi="0" ci="2" mb="0" cb="0"/><line nr="21" mi="0" ci="4" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="6" mb="0" cb="0"/><line nr="24" mi="0" ci="1" mb="0" cb="0"/><line nr="27" mi="0" ci="7" mb="0" cb="0"/><line nr="31" mi="0" ci="7" mb="0" cb="0"/><line nr="35" mi="7" ci="0" mb="0" cb="0"/><line nr="39" mi="7" ci="0" mb="0" cb="0"/><line nr="44" mi="0" ci="4" mb="0" cb="0"/><line nr="45" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="44"/><counter type="LINE" missed="2" covered="9"/><counter type="COMPLEXITY" missed="2" covered="4"/><counter type="METHOD" missed="2" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="OngoingDetection.java"><line nr="21" mi="0" ci="2" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="1" mb="0" cb="0"/><line nr="34" mi="0" ci="6" mb="0" cb="0"/><line nr="38" mi="0" ci="7" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="29" covered="91"/><counter type="LINE" missed="5" covered="20"/><counter type="COMPLEXITY" missed="5" covered="10"/><counter type="METHOD" missed="5" covered="10"/><counter type="CLASS" missed="0" covered="3"/></package><package name="org/tensorics/core/analysis"><class name="org/tensorics/core/analysis/AssertionStatus" sourcefilename="AssertionStatus.java"><method name="fromBooleanSuccessful" desc="(Z)Lorg/tensorics/core/analysis/AssertionStatus;" line="32"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="25"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/EnablingConditionBuilder" sourcefilename="EnablingConditionBuilder.java"><method name="&lt;init&gt;" desc="()V" line="27"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="30"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/AnalysisResult" sourcefilename="AnalysisResult.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/AnalysisResult$Builder;)V" line="26"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="builder" desc="(Lorg/tensorics/core/analysis/AssertionStatus;)Lorg/tensorics/core/analysis/AnalysisResult$Builder;" line="32"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="59"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="64"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="73"><counter type="INSTRUCTION" missed="44" covered="0"/><counter type="BRANCH" missed="14" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertions" desc="()Ljava/util/List;" line="97"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="statusFor" desc="(Lorg/tensorics/core/analysis/expression/AssertionExpression;)Lorg/tensorics/core/analysis/AssertionStatus;" line="101"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="resultFor" desc="(Lorg/tensorics/core/analysis/expression/AssertionExpression;)Lorg/tensorics/core/analysis/AssertionResult;" line="106"><counter type="INSTRUCTION" missed="25" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="overallStatus" desc="()Lorg/tensorics/core/analysis/AssertionStatus;" line="113"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="151" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="32" covered="0"/><counter type="COMPLEXITY" missed="19" covered="0"/><counter type="METHOD" missed="9" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/AssertionBuilder" sourcefilename="AssertionBuilder.java"><method name="&lt;init&gt;" desc="()V" line="35"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withPreConditionReducer" desc="(Lorg/tensorics/core/analysis/lang/IterableBooleanConversion;)Lorg/tensorics/core/analysis/ConditionBuilder;" line="42"><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withPreCondition" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/ConditionBuilder;" line="48"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preConditions" desc="()Ljava/util/Collection;" line="54"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="preConditionsReducer" desc="()Lorg/tensorics/core/analysis/lang/IterableBooleanConversion;" line="58"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/AnalysisResult$Builder" sourcefilename="AnalysisResult.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/AssertionStatus;)V" line="38"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Lorg/tensorics/core/analysis/expression/AssertionExpression;Lorg/tensorics/core/analysis/AssertionResult;)Lorg/tensorics/core/analysis/AnalysisResult$Builder;" line="46"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="build" desc="()Lorg/tensorics/core/analysis/AnalysisResult;" line="53"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="33" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="3" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/AnalysisModule" sourcefilename="AnalysisModule.java"><method name="&lt;init&gt;" desc="()V" line="54"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertThat" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingCondition;" line="59"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertThat" desc="(Ljava/lang/Object;)Lorg/tensorics/core/analysis/lang/OngoingCondition;" line="63"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertBoolean" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingBooleanCondition;" line="67"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertBoolean" desc="(Ljava/lang/Boolean;)Lorg/tensorics/core/analysis/lang/OngoingBooleanCondition;" line="71"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertAllBoolean" desc="(Ljava/util/Set;)Lorg/tensorics/core/analysis/lang/OngoingAllBooleanExcludableCondition;" line="76"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertAllBoolean" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingAllBooleanCondition;" line="80"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertAtLeastOneBooleanOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingAnyBooleanCondition;" line="85"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertLatestBooleanOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingBooleanCondition;" line="89"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whenTrue" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingPrecondition;" line="93"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whenFalse" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingPrecondition;" line="97"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whenNot" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingPrecondition;" line="101"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="whenAllTrue" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/analysis/lang/OngoingPrecondition;" line="105"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="when" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/lang/OngoingPrecondition;" line="111"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="when" desc="(Ljava/lang/Object;)Lorg/tensorics/core/analysis/lang/OngoingPrecondition;" line="115"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newAssertionBuilder" desc="()Lorg/tensorics/core/analysis/AssertionBuilder;" line="119"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="assertionBuilders" desc="()Ljava/util/List;" line="125"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="buildExpression" desc="()Lorg/tensorics/core/analysis/expression/AnalysisExpression;" line="129"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/AssertionResult" sourcefilename="AssertionResult.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/analysis/AssertionStatus;)V" line="32"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="of" desc="(Lorg/tensorics/core/analysis/AssertionStatus;)Lorg/tensorics/core/analysis/AssertionResult;" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="status" desc="()Lorg/tensorics/core/analysis/AssertionStatus;" line="41"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="hashCode" desc="()I" line="46"><counter type="INSTRUCTION" missed="19" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="54"><counter type="INSTRUCTION" missed="28" covered="0"/><counter type="BRANCH" missed="8" covered="0"/><counter type="LINE" missed="10" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="72"><counter type="INSTRUCTION" missed="12" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/analysis/ConditionBuilder" sourcefilename="ConditionBuilder.java"><method name="&lt;init&gt;" desc="()V" line="29"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withName" desc="(Ljava/lang/String;)Lorg/tensorics/core/analysis/ConditionBuilder;" line="36"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withCondition" desc="(Lorg/tensorics/core/tree/domain/Expression;)Lorg/tensorics/core/analysis/ConditionBuilder;" line="41"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="name" desc="()Ljava/lang/String;" line="49"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="condition" desc="()Lorg/tensorics/core/tree/domain/Expression;" line="53"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="withKey" desc="(Ljava/lang/String;)Lorg/tensorics/core/analysis/ConditionBuilder;" line="57"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="key" desc="()Ljava/lang/String;" line="62"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><sourcefile name="AssertionBuilder.java"><line nr="35" mi="2" ci="0" mb="0" cb="0"/><line nr="36" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="0" cb="0"/><line nr="39" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="4" ci="0" mb="0" cb="0"/><line nr="43" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="4" ci="0" mb="0" cb="0"/><line nr="49" mi="5" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="4" ci="0" mb="0" cb="0"/><line nr="58" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="41" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="6" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AssertionResult.java"><line nr="32" mi="2" ci="0" mb="0" cb="0"/><line nr="33" mi="3" ci="0" mb="0" cb="0"/><line nr="34" mi="1" ci="0" mb="0" cb="0"/><line nr="37" mi="5" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="48" mi="13" ci="0" mb="2" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="54" mi="3" ci="0" mb="2" cb="0"/><line nr="55" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="2" ci="0" mb="2" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="60" mi="5" ci="0" mb="2" cb="0"/><line nr="61" mi="2" ci="0" mb="0" cb="0"/><line nr="63" mi="3" ci="0" mb="0" cb="0"/><line nr="64" mi="5" ci="0" mb="2" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="0" cb="0"/><line nr="72" mi="12" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="73" covered="0"/><counter type="BRANCH" missed="10" covered="0"/><counter type="LINE" missed="20" covered="0"/><counter type="COMPLEXITY" missed="11" covered="0"/><counter type="METHOD" missed="6" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="ConditionBuilder.java"><line nr="29" mi="3" ci="0" mb="0" cb="0"/><line nr="36" mi="6" ci="0" mb="0" cb="0"/><line nr="37" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="4" ci="0" mb="0" cb="0"/><line nr="42" mi="3" ci="0" mb="0" cb="0"/><line nr="44" mi="2" ci="0" mb="0" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="3" ci="0" mb="0" cb="0"/><line nr="53" mi="3" ci="0" mb="0" cb="0"/><line nr="57" mi="6" ci="0" mb="0" cb="0"/><line nr="58" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="0"/><counter type="LINE" missed="12" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AnalysisResult.java"><line nr="26" mi="2" ci="0" mb="0" cb="0"/><line nr="27" mi="4" ci="0" mb="0" cb="0"/><line nr="28" mi="5" ci="0" mb="0" cb="0"/><line nr="29" mi="1" ci="0" mb="0" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="6" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="46" mi="4" ci="0" mb="0" cb="0"/><line nr="47" mi="4" ci="0" mb="0" cb="0"/><line nr="48" mi="6" ci="0" mb="0" cb="0"/><line nr="49" mi="2" ci="0" mb="0" cb="0"/><line nr="53" mi="5" ci="0" mb="0" cb="0"/><line nr="59" mi="17" ci="0" mb="0" cb="0"/><line nr="64" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="2" ci="0" mb="0" cb="0"/><line nr="66" mi="13" ci="0" mb="2" cb="0"/><line nr="67" mi="13" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="73" mi="3" ci="0" mb="2" cb="0"/><line nr="74" mi="2" ci="0" mb="0" cb="0"/><line nr="76" mi="2" ci="0" mb="2" cb="0"/><line nr="77" mi="2" ci="0" mb="0" cb="0"/><line nr="79" mi="5" ci="0" mb="2" cb="0"/><line nr="80" mi="2" ci="0" mb="0" cb="0"/><line nr="82" mi="3" ci="0" mb="0" cb="0"/><line nr="83" mi="3" ci="0" mb="2" cb="0"/><line nr="84" mi="3" ci="0" mb="2" cb="0"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="6" ci="0" mb="2" cb="0"/><line nr="88" mi="2" ci="0" mb="0" cb="0"/><line nr="90" mi="5" ci="0" mb="2" cb="0"/><line nr="91" mi="2" ci="0" mb="0" cb="0"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="97" mi="8" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="5" ci="0" mb="2" cb="0"/><line nr="107" mi="14" ci="0" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="0" cb="0"/><line nr="113" mi="3" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="184" covered="0"/><counter type="BRANCH" missed="20" covered="0"/><counter type="LINE" missed="42" covered="0"/><counter type="COMPLEXITY" missed="22" covered="0"/><counter type="METHOD" missed="12" covered="0"/><counter type="CLASS" missed="2" covered="0"/></sourcefile><sourcefile name="AssertionStatus.java"><line nr="25" mi="20" ci="0" mb="0" cb="0"/><line nr="26" mi="6" ci="0" mb="0" cb="0"/><line nr="27" mi="6" ci="0" mb="0" cb="0"/><line nr="28" mi="6" ci="0" mb="0" cb="0"/><line nr="29" mi="6" ci="0" mb="0" cb="0"/><line nr="32" mi="2" ci="0" mb="2" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="50" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="8" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AnalysisModule.java"><line nr="54" mi="2" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="59" mi="7" ci="0" mb="0" cb="0"/><line nr="63" mi="5" ci="0" mb="0" cb="0"/><line nr="67" mi="7" ci="0" mb="0" cb="0"/><line nr="71" mi="5" ci="0" mb="0" cb="0"/><line nr="76" mi="7" ci="0" mb="0" cb="0"/><line nr="80" mi="7" ci="0" mb="0" cb="0"/><line nr="85" mi="7" ci="0" mb="0" cb="0"/><line nr="89" mi="8" ci="0" mb="0" cb="0"/><line nr="93" mi="10" ci="0" mb="0" cb="0"/><line nr="97" mi="10" ci="0" mb="0" cb="0"/><line nr="101" mi="4" ci="0" mb="0" cb="0"/><line nr="105" mi="5" ci="0" mb="0" cb="0"/><line nr="106" mi="8" ci="0" mb="0" cb="0"/><line nr="107" mi="4" ci="0" mb="0" cb="0"/><line nr="111" mi="7" ci="0" mb="0" cb="0"/><line nr="115" mi="5" ci="0" mb="0" cb="0"/><line nr="119" mi="4" ci="0" mb="0" cb="0"/><line nr="120" mi="5" ci="0" mb="0" cb="0"/><line nr="121" mi="2" ci="0" mb="0" cb="0"/><line nr="125" mi="3" ci="0" mb="0" cb="0"/><line nr="129" mi="6" ci="0" mb="0" cb="0"/><line nr="130" mi="5" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="139" covered="0"/><counter type="LINE" missed="24" covered="0"/><counter type="COMPLEXITY" missed="18" covered="0"/><counter type="METHOD" missed="18" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="EnablingConditionBuilder.java"><line nr="27" mi="3" ci="0" mb="0" cb="0"/><line nr="30" mi="3" ci="0" mb="0" cb="0"/><line nr="31" mi="2" ci="0" mb="2" cb="0"/><line nr="32" mi="5" ci="0" mb="0" cb="0"/><line nr="35" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="2" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><counter type="INSTRUCTION" missed="541" covered="0"/><counter type="BRANCH" missed="34" covered="0"/><counter type="LINE" missed="123" covered="0"/><counter type="COMPLEXITY" missed="70" covered="0"/><counter type="METHOD" missed="53" covered="0"/><counter type="CLASS" missed="8" covered="0"/></package><package name="org/tensorics/core/math"><class name="org/tensorics/core/math/Cheating" sourcefilename="Cheating.java"/><class name="org/tensorics/core/math/NegatedBinaryPredicateView" sourcefilename="NegatedBinaryPredicateView.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/predicates/BinaryPredicate;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="22"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="27"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="35"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="45"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="13" covered="9"/><counter type="COMPLEXITY" missed="8" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/math/InvertedBinaryPredicateView" sourcefilename="InvertedBinaryPredicateView.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/predicates/BinaryPredicate;)V" line="16"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="22"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="27"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="35"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="57"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="41"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="13" covered="9"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/math/BinaryPredicates" sourcefilename="BinaryPredicates.java"><method name="not" desc="(Lorg/tensorics/core/math/predicates/BinaryPredicate;)Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="invert" desc="(Lorg/tensorics/core/math/predicates/BinaryPredicate;)Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="56"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="and" desc="(Lorg/tensorics/core/math/predicates/BinaryPredicate;Lorg/tensorics/core/math/predicates/BinaryPredicate;)Lorg/tensorics/core/math/predicates/BinaryPredicate;" line="68"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/math/Operations$InverseOperationView" sourcefilename="Operations.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/structures/grouplike/Group;)V" line="76"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="perform" desc="(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" line="82"><counter type="INSTRUCTION" missed="0" covered="11"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="87"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="95"><counter type="INSTRUCTION" missed="37" covered="0"/><counter type="BRANCH" missed="12" covered="0"/><counter type="LINE" missed="13" covered="0"/><counter type="COMPLEXITY" missed="7" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="117"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="39" covered="46"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="13" covered="9"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/math/AndBinaryPredicateView" sourcefilename="AndBinaryPredicateView.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/math/predicates/BinaryPredicate;Lorg/tensorics/core/math/predicates/BinaryPredicate;)V" line="17"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="test" desc="(Ljava/lang/Object;Ljava/lang/Object;)Z" line="24"><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="29"><counter type="INSTRUCTION" missed="32" covered="0"/><counter type="BRANCH" missed="4" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="3" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="38"><counter type="INSTRUCTION" missed="53" covered="0"/><counter type="BRANCH" missed="18" covered="0"/><counter type="LINE" missed="18" covered="0"/><counter type="COMPLEXITY" missed="10" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="67"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="102" covered="25"/><counter type="BRANCH" missed="23" covered="3"/><counter type="LINE" missed="24" covered="5"/><counter type="COMPLEXITY" missed="15" covered="3"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/math/ExtendedField" sourcefilename="ExtendedField.java"/><class name="org/tensorics/core/math/ExplicitField" sourcefilename="ExplicitField.java"/><class name="org/tensorics/core/math/Math" sourcefilename="Math.java"/><class name="org/tensorics/core/math/Operations" sourcefilename="Operations.java"><method name="inverseBinaryFor" desc="(Lorg/tensorics/core/math/structures/grouplike/Group;)Lorg/tensorics/core/math/operations/BinaryOperation;" line="51"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="performOnAll" desc="(Ljava/lang/Iterable;Lorg/tensorics/core/math/operations/BinaryOperation;)Ljava/util/List;" line="55"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapAll" desc="(Lcom/google/common/collect/Multimap;Lorg/tensorics/core/math/operations/BinaryOperation;)Lcom/google/common/collect/ListMultimap;" line="63"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ExplicitField.java"/><sourcefile name="Operations.java"><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="55" mi="0" ci="2" mb="0" cb="0"/><line nr="56" mi="0" ci="10" mb="0" cb="2"/><line nr="57" mi="0" ci="9" mb="0" cb="0"/><line nr="58" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="2" mb="0" cb="0"/><line nr="64" mi="0" ci="12" mb="0" cb="2"/><line nr="65" mi="0" ci="10" mb="0" cb="0"/><line nr="66" mi="0" ci="1" mb="0" cb="0"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="76" mi="0" ci="2" mb="0" cb="0"/><line nr="77" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="1" mb="0" cb="0"/><line nr="82" mi="0" ci="11" mb="0" cb="0"/><line nr="87" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="0" cb="0"/><line nr="89" mi="2" ci="11" mb="1" cb="1"/><line nr="90" mi="0" ci="2" mb="0" cb="0"/><line nr="95" mi="3" ci="0" mb="2" cb="0"/><line nr="96" mi="2" ci="0" mb="0" cb="0"/><line nr="98" mi="2" ci="0" mb="2" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="101" mi="5" ci="0" mb="2" cb="0"/><line nr="102" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="3" ci="0" mb="0" cb="0"/><line nr="105" mi="3" ci="0" mb="2" cb="0"/><line nr="106" mi="3" ci="0" mb="2" cb="0"/><line nr="107" mi="2" ci="0" mb="0" cb="0"/><line nr="109" mi="6" ci="0" mb="2" cb="0"/><line nr="110" mi="2" ci="0" mb="0" cb="0"/><line nr="112" mi="2" ci="0" mb="0" cb="0"/><line nr="117" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="104"/><counter type="BRANCH" missed="13" covered="5"/><counter type="LINE" missed="13" covered="20"/><counter type="COMPLEXITY" missed="8" covered="9"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="2"/></sourcefile><sourcefile name="Cheating.java"/><sourcefile name="NegatedBinaryPredicateView.java"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="10" mb="0" cb="2"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="2" ci="11" mb="1" cb="1"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="2" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="2" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="2" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="2" cb="0"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="2" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="45"/><counter type="BRANCH" missed="13" covered="3"/><counter type="LINE" missed="13" covered="9"/><counter type="COMPLEXITY" missed="8" covered="5"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="BinaryPredicates.java"><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="16"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Math.java"/><sourcefile name="InvertedBinaryPredicateView.java"><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="0" ci="3" mb="0" cb="0"/><line nr="18" mi="0" ci="1" mb="0" cb="0"/><line nr="22" mi="0" ci="6" mb="0" cb="0"/><line nr="27" mi="0" ci="2" mb="0" cb="0"/><line nr="28" mi="0" ci="2" mb="0" cb="0"/><line nr="29" mi="2" ci="11" mb="1" cb="1"/><line nr="30" mi="0" ci="2" mb="0" cb="0"/><line nr="35" mi="3" ci="0" mb="2" cb="0"/><line nr="36" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="2" ci="0" mb="2" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="5" ci="0" mb="2" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="3" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="2" cb="0"/><line nr="46" mi="3" ci="0" mb="2" cb="0"/><line nr="47" mi="2" ci="0" mb="0" cb="0"/><line nr="49" mi="6" ci="0" mb="2" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="12" mb="0" cb="0"/><counter type="INSTRUCTION" missed="39" covered="41"/><counter type="BRANCH" missed="13" covered="1"/><counter type="LINE" missed="13" covered="9"/><counter type="COMPLEXITY" missed="8" covered="4"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExtendedField.java"/><sourcefile name="AndBinaryPredicateView.java"><line nr="17" mi="0" ci="2" mb="0" cb="0"/><line nr="18" mi="0" ci="3" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="20" mi="0" ci="1" mb="0" cb="0"/><line nr="24" mi="0" ci="16" mb="1" cb="3"/><line nr="29" mi="2" ci="0" mb="0" cb="0"/><line nr="30" mi="2" ci="0" mb="0" cb="0"/><line nr="31" mi="13" ci="0" mb="2" cb="0"/><line nr="32" mi="13" ci="0" mb="2" cb="0"/><line nr="33" mi="2" ci="0" mb="0" cb="0"/><line nr="38" mi="3" ci="0" mb="2" cb="0"/><line nr="39" mi="2" ci="0" mb="0" cb="0"/><line nr="41" mi="2" ci="0" mb="2" cb="0"/><line nr="42" mi="2" ci="0" mb="0" cb="0"/><line nr="44" mi="5" ci="0" mb="2" cb="0"/><line nr="45" mi="2" ci="0" mb="0" cb="0"/><line nr="47" mi="3" ci="0" mb="0" cb="0"/><line nr="48" mi="3" ci="0" mb="2" cb="0"/><line nr="49" mi="3" ci="0" mb="2" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="52" mi="6" ci="0" mb="2" cb="0"/><line nr="53" mi="2" ci="0" mb="0" cb="0"/><line nr="55" mi="3" ci="0" mb="2" cb="0"/><line nr="56" mi="3" ci="0" mb="2" cb="0"/><line nr="57" mi="2" ci="0" mb="0" cb="0"/><line nr="59" mi="6" ci="0" mb="2" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="62" mi="2" ci="0" mb="0" cb="0"/><line nr="67" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="102" covered="25"/><counter type="BRANCH" missed="23" covered="3"/><counter type="LINE" missed="24" covered="5"/><counter type="COMPLEXITY" missed="15" covered="3"/><counter type="METHOD" missed="3" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="219" covered="231"/><counter type="BRANCH" missed="62" covered="12"/><counter type="LINE" missed="63" covered="46"/><counter type="COMPLEXITY" missed="39" covered="24"/><counter type="METHOD" missed="6" covered="20"/><counter type="CLASS" missed="0" covered="6"/></package><package name="org/tensorics/core/tensor/variance"><class name="org/tensorics/core/tensor/variance/CoContraDimensionPairs" sourcefilename="CoContraDimensionPairs.java"><method name="rightDimensionsIn" desc="(Ljava/lang/Iterable;)Ljava/util/Set;" line="57"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="leftDimensionsIn" desc="(Ljava/lang/Iterable;)Ljava/util/Set;" line="65"><counter type="INSTRUCTION" missed="0" covered="21"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="allDimensionsIn" desc="(Ljava/lang/Iterable;)Ljava/util/Set;" line="80"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mapOutByContravariantPart" desc="(Ljava/util/List;)Ljava/util/Map;" line="85"><counter type="INSTRUCTION" missed="0" covered="28"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coContraPairsOf" desc="(Lorg/tensorics/core/tensor/Shape;Lorg/tensorics/core/tensor/Shape;)Ljava/util/List;" line="101"><counter type="INSTRUCTION" missed="0" covered="40"/><counter type="BRANCH" missed="0" covered="6"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="choose" desc="(Ljava/util/Collection;)Lorg/tensorics/core/tensor/variance/CoContraDimensionPair;" line="127"><counter type="INSTRUCTION" missed="8" covered="40"/><counter type="BRANCH" missed="4" covered="6"/><counter type="LINE" missed="2" covered="7"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="chooseOnePerContravariantPart" desc="(Ljava/util/Map;)Ljava/util/List;" line="145"><counter type="INSTRUCTION" missed="0" covered="25"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="chooseOnePerContravariantPart" desc="(Ljava/util/List;)Ljava/util/List;" line="160"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertToRight" desc="(Lorg/tensorics/core/tensor/Position;Ljava/util/List;)Lorg/tensorics/core/tensor/Position;" line="164"><counter type="INSTRUCTION" missed="0" covered="43"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="229"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="2" covered="47"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/variance/CoContraDimensionPair" sourcefilename="CoContraDimensionPair.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Class;Ljava/lang/Class;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="39"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="8"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="ofLeftRight" desc="(Ljava/lang/Class;Ljava/lang/Class;)Lorg/tensorics/core/tensor/variance/CoContraDimensionPair;" line="52"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="left" desc="()Ljava/lang/Class;" line="56"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="right" desc="()Ljava/lang/Class;" line="60"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="covariant" desc="()Ljava/lang/Class;" line="69"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contravariant" desc="()Ljava/lang/Class;" line="81"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toLeft" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="88"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toRight" desc="(Ljava/lang/Object;)Ljava/lang/Object;" line="92"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="convertFromTo" desc="(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/Object;" line="96"><counter type="INSTRUCTION" missed="0" covered="23"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="8" covered="102"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/variance/Covariants" sourcefilename="Covariants.java"><method name="instantiatorFor" desc="(Ljava/lang/Class;)Lorg/tensorics/core/util/Instantiator;" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coordinateClassFor" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="56"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCovariant" desc="(Ljava/lang/Class;)Z" line="61"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isContravariant" desc="(Ljava/lang/Class;)Z" line="65"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contravariantOf" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="69"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="covariantClassOf" desc="(Ljava/lang/Class;)Ljava/lang/Class;" line="78"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isCoContraPair" desc="(Ljava/lang/Class;Ljava/lang/Class;)Z" line="82"><counter type="INSTRUCTION" missed="0" covered="20"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/variance/Covariant" sourcefilename="Covariant.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="62"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="72"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="77"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="85"><counter type="INSTRUCTION" missed="9" covered="28"/><counter type="BRANCH" missed="5" covered="7"/><counter type="LINE" missed="4" covered="9"/><counter type="COMPLEXITY" missed="4" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="toString" desc="()Ljava/lang/String;" line="107"><counter type="INSTRUCTION" missed="16" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="27" covered="56"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="Covariant.java"><line nr="62" mi="0" ci="2" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="1" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="77" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="79" mi="2" ci="11" mb="1" cb="1"/><line nr="80" mi="0" ci="2" mb="0" cb="0"/><line nr="85" mi="0" ci="3" mb="0" cb="2"/><line nr="86" mi="0" ci="2" mb="0" cb="0"/><line nr="88" mi="0" ci="2" mb="1" cb="1"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="91" mi="0" ci="5" mb="0" cb="2"/><line nr="92" mi="0" ci="2" mb="0" cb="0"/><line nr="94" mi="0" ci="3" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="1" cb="1"/><line nr="96" mi="3" ci="0" mb="2" cb="0"/><line nr="97" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="0" ci="6" mb="1" cb="1"/><line nr="100" mi="2" ci="0" mb="0" cb="0"/><line nr="102" mi="0" ci="2" mb="0" cb="0"/><line nr="107" mi="16" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="27" covered="56"/><counter type="BRANCH" missed="6" covered="8"/><counter type="LINE" missed="5" covered="17"/><counter type="COMPLEXITY" missed="6" covered="6"/><counter type="METHOD" missed="1" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CoContraDimensionPair.java"><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="4" mb="0" cb="0"/><line nr="43" mi="0" ci="4" mb="0" cb="2"/><line nr="44" mi="0" ci="18" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="48" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="1" mb="0" cb="0"/><line nr="52" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="2"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="81" mi="0" ci="4" mb="0" cb="2"/><line nr="82" mi="0" ci="3" mb="0" cb="0"/><line nr="84" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="8" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="8" mb="0" cb="0"/><line nr="96" mi="0" ci="7" mb="0" cb="0"/><line nr="99" mi="0" ci="3" mb="0" cb="2"/><line nr="100" mi="0" ci="3" mb="0" cb="0"/><line nr="101" mi="0" ci="3" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="5" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="102"/><counter type="BRANCH" missed="0" covered="8"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="1" covered="12"/><counter type="METHOD" missed="1" covered="8"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="CoContraDimensionPairs.java"><line nr="57" mi="0" ci="2" mb="0" cb="0"/><line nr="58" mi="0" ci="10" mb="0" cb="2"/><line nr="59" mi="0" ci="5" mb="0" cb="0"/><line nr="60" mi="0" ci="1" mb="0" cb="0"/><line nr="61" mi="0" ci="3" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="66" mi="0" ci="10" mb="0" cb="2"/><line nr="67" mi="0" ci="5" mb="0" cb="0"/><line nr="68" mi="0" ci="1" mb="0" cb="0"/><line nr="69" mi="0" ci="3" mb="0" cb="0"/><line nr="80" mi="0" ci="7" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="86" mi="0" ci="10" mb="0" cb="2"/><line nr="87" mi="0" ci="11" mb="0" cb="0"/><line nr="88" mi="0" ci="1" mb="0" cb="0"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="101" mi="0" ci="4" mb="0" cb="0"/><line nr="103" mi="0" ci="11" mb="0" cb="2"/><line nr="104" mi="0" ci="11" mb="0" cb="2"/><line nr="105" mi="0" ci="4" mb="0" cb="2"/><line nr="106" mi="0" ci="6" mb="0" cb="0"/><line nr="108" mi="0" ci="1" mb="0" cb="0"/><line nr="109" mi="0" ci="1" mb="0" cb="0"/><line nr="111" mi="0" ci="2" mb="0" cb="0"/><line nr="127" mi="1" ci="7" mb="1" cb="1"/><line nr="129" mi="0" ci="4" mb="0" cb="2"/><line nr="130" mi="0" ci="5" mb="0" cb="0"/><line nr="133" mi="1" ci="8" mb="1" cb="1"/><line nr="135" mi="0" ci="10" mb="1" cb="1"/><line nr="136" mi="0" ci="4" mb="1" cb="1"/><line nr="137" mi="0" ci="2" mb="0" cb="0"/><line nr="139" mi="1" ci="0" mb="0" cb="0"/><line nr="140" mi="5" ci="0" mb="0" cb="0"/><line nr="145" mi="0" ci="4" mb="0" cb="0"/><line nr="146" mi="0" ci="11" mb="0" cb="2"/><line nr="147" mi="0" ci="3" mb="0" cb="0"/><line nr="148" mi="0" ci="4" mb="0" cb="0"/><line nr="149" mi="0" ci="1" mb="0" cb="0"/><line nr="150" mi="0" ci="2" mb="0" cb="0"/><line nr="160" mi="0" ci="4" mb="0" cb="0"/><line nr="164" mi="0" ci="4" mb="0" cb="0"/><line nr="165" mi="0" ci="6" mb="0" cb="0"/><line nr="166" mi="0" ci="10" mb="0" cb="2"/><line nr="167" mi="0" ci="5" mb="0" cb="0"/><line nr="168" mi="0" ci="6" mb="0" cb="0"/><line nr="169" mi="0" ci="4" mb="0" cb="0"/><line nr="170" mi="0" ci="1" mb="0" cb="0"/><line nr="171" mi="0" ci="4" mb="0" cb="0"/><line nr="172" mi="0" ci="3" mb="0" cb="0"/><counter type="INSTRUCTION" missed="8" covered="229"/><counter type="BRANCH" missed="4" covered="22"/><counter type="LINE" missed="2" covered="47"/><counter type="COMPLEXITY" missed="4" covered="18"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Covariants.java"><line nr="51" mi="0" ci="6" mb="0" cb="0"/><line nr="56" mi="0" ci="4" mb="0" cb="0"/><line nr="57" mi="0" ci="6" mb="0" cb="0"/><line nr="61" mi="0" ci="4" mb="0" cb="0"/><line nr="65" mi="0" ci="7" mb="0" cb="2"/><line nr="69" mi="0" ci="3" mb="0" cb="2"/><line nr="70" mi="0" ci="4" mb="0" cb="0"/><line nr="72" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="2" mb="0" cb="0"/><line nr="82" mi="0" ci="10" mb="0" cb="4"/><line nr="83" mi="0" ci="10" mb="0" cb="4"/><counter type="INSTRUCTION" missed="0" covered="58"/><counter type="BRANCH" missed="0" covered="12"/><counter type="LINE" missed="0" covered="11"/><counter type="COMPLEXITY" missed="0" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="43" covered="445"/><counter type="BRANCH" missed="10" covered="50"/><counter type="LINE" missed="8" covered="99"/><counter type="COMPLEXITY" missed="11" covered="49"/><counter type="METHOD" missed="2" covered="28"/><counter type="CLASS" missed="0" covered="4"/></package><package name="org/tensorics/core/tensor/resample"><class name="org/tensorics/core/tensor/resample/SingleDimensionResampler" sourcefilename="SingleDimensionResampler.java"/><class name="org/tensorics/core/tensor/resample/ResamplingStage" sourcefilename="ResamplingStage.java"><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tensor/Shape;Lorg/tensorics/core/tensor/Tensoric;Lorg/tensorics/core/tensor/resample/SingleDimensionResampler;Ljava/lang/Class;)V" line="45"><counter type="INSTRUCTION" missed="0" covered="27"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="54"><counter type="INSTRUCTION" missed="0" covered="37"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="contains" desc="(Lorg/tensorics/core/tensor/Position;)Z" line="64"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="supportingCoordinates" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/util/Set;" line="68"><counter type="INSTRUCTION" missed="0" covered="18"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="coordinate" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/lang/Object;" line="78"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="remaining" desc="(Lorg/tensorics/core/tensor/Position;)Lorg/tensorics/core/tensor/Position;" line="82"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="callbackFor" desc="(Lorg/tensorics/core/tensor/Position;)Ljava/util/function/Function;" line="86"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$callbackFor$1" desc="(Lorg/tensorics/core/tensor/Position;Ljava/lang/Object;)Ljava/lang/Object;" line="87"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="lambda$supportingCoordinates$0" desc="(Lorg/tensorics/core/tensor/Position;Ljava/lang/Object;)Z" line="72"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tensor/resample/MultiDimensionalResampling" sourcefilename="MultiDimensionalResampling.java"><method name="&lt;init&gt;" desc="(Ljava/util/LinkedHashMap;)V" line="38"><counter type="INSTRUCTION" missed="5" covered="13"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resample" desc="(Ljava/lang/Class;Lorg/tensorics/core/tensor/resample/SingleDimensionResampler;)Lorg/tensorics/core/tensor/resample/MultiDimensionalResampling;" line="59"><counter type="INSTRUCTION" missed="0" covered="22"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="then" desc="(Ljava/lang/Class;Lorg/tensorics/core/tensor/resample/SingleDimensionResampler;)Lorg/tensorics/core/tensor/resample/MultiDimensionalResampling;" line="78"><counter type="INSTRUCTION" missed="14" covered="31"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resample" desc="(Lorg/tensorics/core/tensor/Tensor;)Lorg/tensorics/core/tensor/Tensoric;" line="100"><counter type="INSTRUCTION" missed="0" covered="24"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="newStage" desc="(Lorg/tensorics/core/tensor/Tensoric;Ljava/lang/Class;Lorg/tensorics/core/tensor/Shape;)Lorg/tensorics/core/tensor/Tensoric;" line="108"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resamplerFor" desc="(Ljava/lang/Class;)Lorg/tensorics/core/tensor/resample/SingleDimensionResampler;" line="113"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="19" covered="106"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="ResamplingStage.java"><line nr="45" mi="0" ci="2" mb="0" cb="0"/><line nr="46" mi="0" ci="6" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="0" ci="6" mb="0" cb="0"/><line nr="49" mi="0" ci="6" mb="0" cb="0"/><line nr="50" mi="0" ci="1" mb="0" cb="0"/><line nr="54" mi="0" ci="4" mb="0" cb="0"/><line nr="55" mi="0" ci="4" mb="0" cb="0"/><line nr="56" mi="0" ci="6" mb="0" cb="2"/><line nr="57" mi="0" ci="14" mb="0" cb="0"/><line nr="59" mi="0" ci="9" mb="0" cb="0"/><line nr="64" mi="0" ci="10" mb="0" cb="0"/><line nr="68" mi="0" ci="4" mb="0" cb="0"/><line nr="71" mi="0" ci="10" mb="0" cb="0"/><line nr="72" mi="0" ci="14" mb="0" cb="0"/><line nr="73" mi="0" ci="3" mb="0" cb="0"/><line nr="78" mi="0" ci="5" mb="0" cb="0"/><line nr="82" mi="0" ci="6" mb="0" cb="0"/><line nr="86" mi="0" ci="4" mb="0" cb="0"/><line nr="87" mi="0" ci="17" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="137"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="20"/><counter type="COMPLEXITY" missed="0" covered="10"/><counter type="METHOD" missed="0" covered="9"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="MultiDimensionalResampling.java"><line nr="38" mi="0" ci="2" mb="0" cb="0"/><line nr="39" mi="0" ci="4" mb="0" cb="0"/><line nr="42" mi="0" ci="3" mb="1" cb="1"/><line nr="43" mi="5" ci="0" mb="0" cb="0"/><line nr="46" mi="0" ci="3" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="59" mi="0" ci="4" mb="0" cb="0"/><line nr="60" mi="0" ci="4" mb="0" cb="0"/><line nr="62" mi="0" ci="4" mb="0" cb="0"/><line nr="63" mi="0" ci="5" mb="0" cb="0"/><line nr="64" mi="0" ci="5" mb="0" cb="0"/><line nr="78" mi="0" ci="4" mb="0" cb="0"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="6" mb="0" cb="0"/><line nr="82" mi="0" ci="4" mb="1" cb="1"/><line nr="83" mi="14" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="5" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="0" cb="0"/><line nr="89" mi="0" ci="5" mb="0" cb="0"/><line nr="100" mi="0" ci="2" mb="0" cb="0"/><line nr="101" mi="0" ci="12" mb="0" cb="2"/><line nr="102" mi="0" ci="7" mb="0" cb="0"/><line nr="103" mi="0" ci="1" mb="0" cb="0"/><line nr="104" mi="0" ci="2" mb="0" cb="0"/><line nr="108" mi="0" ci="10" mb="0" cb="0"/><line nr="113" mi="0" ci="6" mb="0" cb="0"/><counter type="INSTRUCTION" missed="19" covered="106"/><counter type="BRANCH" missed="2" covered="4"/><counter type="LINE" missed="2" covered="24"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="0" covered="6"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="SingleDimensionResampler.java"/><counter type="INSTRUCTION" missed="19" covered="243"/><counter type="BRANCH" missed="2" covered="6"/><counter type="LINE" missed="2" covered="44"/><counter type="COMPLEXITY" missed="2" covered="17"/><counter type="METHOD" missed="0" covered="15"/><counter type="CLASS" missed="0" covered="2"/></package><package name="org/tensorics/core/tree/domain"><class name="org/tensorics/core/tree/domain/ExpressionIsUnresolvedException" sourcefilename="ExpressionIsUnresolvedException.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;Ljava/lang/Throwable;)V" line="37"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="41"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Ljava/lang/Throwable;)V" line="45"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="13" covered="3"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/domain/ResolvingContextImpl" sourcefilename="ResolvingContextImpl.java"><method name="&lt;init&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="8"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="putAllNew" desc="(Lorg/tensorics/core/tree/domain/ResolvingContext;)V" line="42"><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="0" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="size" desc="()I" line="51"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getRebuildingMap" desc="()Ljava/util/Map;" line="61"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolves" desc="(Lorg/tensorics/core/tree/domain/Expression;)Z" line="66"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="BRANCH" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="3"/><counter type="METHOD" missed="0" covered="1"/></method><method name="resolvedValueOf" desc="(Lorg/tensorics/core/tree/domain/Expression;)Ljava/lang/Object;" line="71"><counter type="INSTRUCTION" missed="14" covered="15"/><counter type="BRANCH" missed="1" covered="3"/><counter type="LINE" missed="1" covered="5"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="put" desc="(Lorg/tensorics/core/tree/domain/Expression;Ljava/lang/Object;)V" line="90"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="14" covered="81"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/domain/Path" sourcefilename="Path.java"><method name="&lt;init&gt;" desc="()V" line="39"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="&lt;init&gt;" desc="(Ljava/util/List;)V" line="36"><counter type="INSTRUCTION" missed="0" covered="13"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getPath" desc="()Ljava/util/List;" line="47"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="add" desc="(Lorg/tensorics/core/tree/domain/Node;)V" line="51"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/domain/AbstractDeferredExpression" sourcefilename="AbstractDeferredExpression.java"><method name="&lt;init&gt;" desc="()V" line="33"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isResolved" desc="()Z" line="40"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="45"><counter type="INSTRUCTION" missed="15" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="15" covered="5"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/domain/Contexts$EmptyRebuildingContext" sourcefilename="Contexts.java"><method name="getUpdatedOrSame" desc="(Lorg/tensorics/core/tree/domain/Node;)Lorg/tensorics/core/tree/domain/Node;" line="89"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRebuildingMap" desc="()Ljava/util/Map;" line="94"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsUpdated" desc="(Lorg/tensorics/core/tree/domain/Node;)Z" line="99"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUpdated" desc="(Lorg/tensorics/core/tree/domain/Node;)Lorg/tensorics/core/tree/domain/Node;" line="104"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/domain/Node;)V" line="110"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="9" covered="0"/><counter type="LINE" missed="5" covered="0"/><counter type="COMPLEXITY" missed="5" covered="0"/><counter type="METHOD" missed="5" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tree/domain/RebuildableNode" sourcefilename="RebuildableNode.java"/><class name="org/tensorics/core/tree/domain/Contexts" sourcefilename="Contexts.java"><method name="emptyRebuildingContext" desc="()Lorg/tensorics/core/tree/domain/RebuildingContext;" line="48"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newResolvingContext" desc="()Lorg/tensorics/core/tree/domain/EditableResolvingContext;" line="57"><counter type="INSTRUCTION" missed="0" covered="4"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="mergeContextsOrdered" desc="(Ljava/lang/Iterable;)Lorg/tensorics/core/tree/domain/EditableResolvingContext;" line="68"><counter type="INSTRUCTION" missed="11" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="mergeContextsOrdered" desc="([Lorg/tensorics/core/tree/domain/ResolvingContext;)Lorg/tensorics/core/tree/domain/EditableResolvingContext;" line="74"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="newRebuildingContext" desc="()Lorg/tensorics/core/tree/domain/RebuildingContext;" line="83"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;clinit&gt;" desc="()V" line="36"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="21" covered="10"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="4" covered="2"/><counter type="METHOD" missed="4" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/domain/RebuildingContextImpl" sourcefilename="RebuildingContextImpl.java"><method name="&lt;init&gt;" desc="()V" line="41"><counter type="INSTRUCTION" missed="8" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(Lorg/tensorics/core/tree/domain/RebuildingContext;)V" line="50"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="LINE" missed="3" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="put" desc="(Lorg/tensorics/core/tree/domain/Node;Lorg/tensorics/core/tree/domain/Node;)V" line="56"><counter type="INSTRUCTION" missed="7" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="containsUpdated" desc="(Lorg/tensorics/core/tree/domain/Node;)Z" line="61"><counter type="INSTRUCTION" missed="5" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUpdatedOrSame" desc="(Lorg/tensorics/core/tree/domain/Node;)Lorg/tensorics/core/tree/domain/Node;" line="66"><counter type="INSTRUCTION" missed="10" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="4" covered="0"/><counter type="COMPLEXITY" missed="2" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getRebuildingMap" desc="()Ljava/util/Map;" line="75"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getUpdated" desc="(Lorg/tensorics/core/tree/domain/Node;)Lorg/tensorics/core/tree/domain/Node;" line="84"><counter type="INSTRUCTION" missed="6" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="org/tensorics/core/tree/domain/RebuildingContext" sourcefilename="RebuildingContext.java"/><class name="org/tensorics/core/tree/domain/ResolvedExpression" sourcefilename="ResolvedExpression.java"><method name="&lt;init&gt;" desc="(Ljava/lang/Object;)V" line="40"><counter type="INSTRUCTION" missed="0" covered="6"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="of" desc="(Ljava/lang/Object;)Lorg/tensorics/core/tree/domain/ResolvedExpression;" line="45"><counter type="INSTRUCTION" missed="0" covered="5"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isResolved" desc="()Z" line="50"><counter type="INSTRUCTION" missed="0" covered="2"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="get" desc="()Ljava/lang/Object;" line="55"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getChildren" desc="()Ljava/util/List;" line="60"><counter type="INSTRUCTION" missed="2" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="65"><counter type="INSTRUCTION" missed="0" covered="12"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="hashCode" desc="()I" line="70"><counter type="INSTRUCTION" missed="2" covered="17"/><counter type="BRANCH" missed="1" covered="1"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="1" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="equals" desc="(Ljava/lang/Object;)Z" line="78"><counter type="INSTRUCTION" missed="13" covered="24"/><counter type="BRANCH" missed="7" covered="5"/><counter type="LINE" missed="6" covered="7"/><counter type="COMPLEXITY" missed="6" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="17" covered="69"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="7" covered="18"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="org/tensorics/core/tree/domain/Expression" sourcefilename="Expression.java"/><class name="org/tensorics/core/tree/domain/EditableResolvingContext" sourcefilename="EditableResolvingContext.java"/><class name="org/tensorics/core/tree/domain/ResolvingContext" sourcefilename="ResolvingContext.java"/><class name="org/tensorics/core/tree/domain/Node" sourcefilename="Node.java"/><class name="org/tensorics/core/tree/domain/ExceptionHandlingNode" sourcefilename="ExceptionHandlingNode.java"/><sourcefile name="RebuildingContext.java"/><sourcefile name="Contexts.java"><line nr="36" mi="0" ci="6" mb="0" cb="0"/><line nr="48" mi="2" ci="0" mb="0" cb="0"/><line nr="57" mi="0" ci="4" mb="0" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="69" mi="7" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="74" mi="4" ci="0" mb="0" cb="0"/><line nr="83" mi="4" ci="0" mb="0" cb="0"/><line nr="89" mi="2" ci="0" mb="0" cb="0"/><line nr="94" mi="2" ci="0" mb="0" cb="0"/><line nr="99" mi="2" ci="0" mb="0" cb="0"/><line nr="104" mi="2" ci="0" mb="0" cb="0"/><line nr="110" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="30" covered="10"/><counter type="LINE" missed="11" covered="2"/><counter type="COMPLEXITY" missed="9" covered="2"/><counter type="METHOD" missed="9" covered="2"/><counter type="CLASS" missed="1" covered="1"/></sourcefile><sourcefile name="ResolvingContext.java"/><sourcefile name="ExceptionHandlingNode.java"/><sourcefile name="Path.java"><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="39" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="1" mb="0" cb="0"/><line nr="42" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="5" mb="0" cb="0"/><line nr="44" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="6" mb="0" cb="0"/><line nr="51" mi="0" ci="5" mb="0" cb="0"/><line nr="52" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="29"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="4"/><counter type="METHOD" missed="0" covered="4"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResolvedExpression.java"><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="3" mb="0" cb="0"/><line nr="42" mi="0" ci="1" mb="0" cb="0"/><line nr="45" mi="0" ci="5" mb="0" cb="0"/><line nr="50" mi="0" ci="2" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="60" mi="2" ci="0" mb="0" cb="0"/><line nr="65" mi="0" ci="12" mb="0" cb="0"/><line nr="70" mi="0" ci="2" mb="0" cb="0"/><line nr="71" mi="0" ci="2" mb="0" cb="0"/><line nr="72" mi="2" ci="11" mb="1" cb="1"/><line nr="73" mi="0" ci="2" mb="0" cb="0"/><line nr="78" mi="0" ci="3" mb="1" cb="1"/><line nr="79" mi="2" ci="0" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="1" cb="1"/><line nr="82" mi="2" ci="0" mb="0" cb="0"/><line nr="84" mi="0" ci="5" mb="1" cb="1"/><line nr="85" mi="2" ci="0" mb="0" cb="0"/><line nr="87" mi="0" ci="3" mb="0" cb="0"/><line nr="88" mi="0" ci="3" mb="1" cb="1"/><line nr="89" mi="3" ci="0" mb="2" cb="0"/><line nr="90" mi="2" ci="0" mb="0" cb="0"/><line nr="92" mi="0" ci="6" mb="1" cb="1"/><line nr="93" mi="2" ci="0" mb="0" cb="0"/><line nr="95" mi="0" ci="2" mb="0" cb="0"/><counter type="INSTRUCTION" missed="17" covered="69"/><counter type="BRANCH" missed="8" covered="6"/><counter type="LINE" missed="7" covered="18"/><counter type="COMPLEXITY" missed="8" covered="7"/><counter type="METHOD" missed="1" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="RebuildableNode.java"/><sourcefile name="EditableResolvingContext.java"/><sourcefile name="Node.java"/><sourcefile name="RebuildingContextImpl.java"><line nr="41" mi="2" ci="0" mb="0" cb="0"/><line nr="42" mi="5" ci="0" mb="0" cb="0"/><line nr="43" mi="1" ci="0" mb="0" cb="0"/><line nr="50" mi="2" ci="0" mb="0" cb="0"/><line nr="51" mi="7" ci="0" mb="0" cb="0"/><line nr="52" mi="1" ci="0" mb="0" cb="0"/><line nr="56" mi="6" ci="0" mb="0" cb="0"/><line nr="57" mi="1" ci="0" mb="0" cb="0"/><line nr="61" mi="5" ci="0" mb="0" cb="0"/><line nr="66" mi="4" ci="0" mb="0" cb="0"/><line nr="67" mi="2" ci="0" mb="2" cb="0"/><line nr="68" mi="2" ci="0" mb="0" cb="0"/><line nr="70" mi="2" ci="0" mb="0" cb="0"/><line nr="75" mi="6" ci="0" mb="0" cb="0"/><line nr="84" mi="6" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="52" covered="0"/><counter type="BRANCH" missed="2" covered="0"/><counter type="LINE" missed="15" covered="0"/><counter type="COMPLEXITY" missed="8" covered="0"/><counter type="METHOD" missed="7" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="AbstractDeferredExpression.java"><line nr="33" mi="0" ci="3" mb="0" cb="0"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="45" mi="8" ci="0" mb="0" cb="0"/><line nr="46" mi="7" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="15" covered="5"/><counter type="LINE" missed="2" covered="2"/><counter type="COMPLEXITY" missed="1" covered="2"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ExpressionIsUnresolvedException.java"><line nr="33" mi="0" ci="2" mb="0" cb="0"/><line nr="34" mi="0" ci="1" mb="0" cb="0"/><line nr="37" mi="4" ci="0" mb="0" cb="0"/><line nr="38" mi="1" ci="0" mb="0" cb="0"/><line nr="41" mi="3" ci="0" mb="0" cb="0"/><line nr="42" mi="1" ci="0" mb="0" cb="0"/><line nr="45" mi="3" ci="0" mb="0" cb="0"/><line nr="46" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="13" covered="3"/><counter type="LINE" missed="6" covered="2"/><counter type="COMPLEXITY" missed="3" covered="1"/><counter type="METHOD" missed="3" covered="1"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="ResolvingContextImpl.java"><line nr="36" mi="0" ci="2" mb="0" cb="0"/><line nr="38" mi="0" ci="6" mb="0" cb="0"/><line nr="42" mi="0" ci="13" mb="0" cb="2"/><line nr="43" mi="0" ci="6" mb="1" cb="1"/><line nr="44" mi="0" ci="8" mb="0" cb="0"/><line nr="46" mi="0" ci="1" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="51" mi="0" ci="4" mb="0" cb="0"/><line nr="61" mi="0" ci="6" mb="0" cb="0"/><line nr="66" mi="0" ci="12" mb="0" cb="4"/><line nr="71" mi="0" ci="3" mb="0" cb="2"/><line nr="72" mi="0" ci="3" mb="0" cb="0"/><line nr="79" mi="0" ci="5" mb="0" cb="0"/><line nr="81" mi="0" ci="2" mb="1" cb="1"/><line nr="82" mi="14" ci="0" mb="0" cb="0"/><line nr="85" mi="0" ci="2" mb="0" cb="0"/><line nr="90" mi="0" ci="6" mb="0" cb="0"/><line nr="91" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="14" covered="81"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="17"/><counter type="COMPLEXITY" missed="2" covered="11"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Expression.java"/><counter type="INSTRUCTION" missed="141" covered="197"/><counter type="BRANCH" missed="12" covered="16"/><counter type="LINE" missed="42" covered="50"/><counter type="COMPLEXITY" missed="31" covered="27"/><counter type="METHOD" missed="21" covered="23"/><counter type="CLASS" missed="2" covered="6"/></package><counter type="INSTRUCTION" missed="12158" covered="15893"/><counter type="BRANCH" missed="1244" covered="768"/><counter type="LINE" missed="2579" covered="3313"/><counter type="COMPLEXITY" missed="1776" covered="1594"/><counter type="METHOD" missed="1048" covered="1316"/><counter type="CLASS" missed="97" covered="317"/></report>